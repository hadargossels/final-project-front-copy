[{"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\index.js":"1","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\App.js":"2","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\reportWebVitals.js":"3","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Footer.jsx":"4","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Contact.jsx":"5","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Header.jsx":"6","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\PageNotFound.jsx":"7","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Home.jsx":"8","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\Blog.jsx":"9","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\About.jsx":"10","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\ArticlePage.jsx":"11","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderConfirmation.jsx":"12","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\ShoppingCart.jsx":"13","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\Store.jsx":"14","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\Payment.jsx":"15","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\ProductPage.jsx":"16","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\firebase.js":"17","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\AuthContext.js":"18","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\FavoritesContext.js":"19","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\CartContext.js":"20","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\WebsiteAdmin.js":"21","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\CartProduct.jsx":"22","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\AlertBox.jsx":"23","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderSummary.jsx":"24","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\Product.jsx":"25","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\Login.jsx":"26","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRoute.jsx":"27","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ForgotPassword.jsx":"28","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\SignUp.jsx":"29","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\Profile.jsx":"30","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ChangePassword.jsx":"31","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRouteAdmin.jsx":"32","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\favorites\\Favorites.jsx":"33","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\data\\constants.js":"34","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\ArticleComment.jsx":"35","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\Article.jsx":"36","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\PayPalBtn.jsx":"37","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\articles.js":"38","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\users.js":"39","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\products.js":"40","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\orders.js":"41","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\posts.js":"42","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\favorites\\FavoriteProduct.jsx":"43","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ProfileDetails.jsx":"44","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\categories.js":"45","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\OrderChart.jsx":"46","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\dashboard.jsx":"47","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\CardWithIcon.jsx":"48","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\MonthlyRevenue.jsx":"49","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\NbNewOrders.jsx":"50","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ProfileOrders.jsx":"51","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\StoreContext.js":"52","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\coupons.js":"53","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\BlogContext.js":"54"},{"size":1047,"mtime":1618168185555,"results":"55","hashOfConfig":"56"},{"size":3347,"mtime":1618169509249,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"56"},{"size":883,"mtime":1615744525410,"results":"59","hashOfConfig":"56"},{"size":6136,"mtime":1615586524521,"results":"60","hashOfConfig":"56"},{"size":8031,"mtime":1618131822094,"results":"61","hashOfConfig":"56"},{"size":298,"mtime":1614151396950,"results":"62","hashOfConfig":"56"},{"size":5610,"mtime":1618161862656,"results":"63","hashOfConfig":"56"},{"size":1014,"mtime":1618168551752,"results":"64","hashOfConfig":"56"},{"size":3254,"mtime":1615663187386,"results":"65","hashOfConfig":"56"},{"size":7800,"mtime":1618172831819,"results":"66","hashOfConfig":"56"},{"size":276,"mtime":1615663050528,"results":"67","hashOfConfig":"56"},{"size":1386,"mtime":1615461400355,"results":"68","hashOfConfig":"56"},{"size":6098,"mtime":1618167646349,"results":"69","hashOfConfig":"56"},{"size":26639,"mtime":1618071882914,"results":"70","hashOfConfig":"56"},{"size":5537,"mtime":1617977293086,"results":"71","hashOfConfig":"56"},{"size":863,"mtime":1615489325184,"results":"72","hashOfConfig":"56"},{"size":1416,"mtime":1618152891941,"results":"73","hashOfConfig":"56"},{"size":1329,"mtime":1615534551480,"results":"74","hashOfConfig":"56"},{"size":4445,"mtime":1618089349720,"results":"75","hashOfConfig":"56"},{"size":1905,"mtime":1618173007844,"results":"76","hashOfConfig":"56"},{"size":2797,"mtime":1617958341200,"results":"77","hashOfConfig":"56"},{"size":500,"mtime":1615490270915,"results":"78","hashOfConfig":"56"},{"size":3315,"mtime":1618071553463,"results":"79","hashOfConfig":"56"},{"size":1444,"mtime":1617958306135,"results":"80","hashOfConfig":"56"},{"size":3515,"mtime":1618128560764,"results":"81","hashOfConfig":"56"},{"size":448,"mtime":1615489668495,"results":"82","hashOfConfig":"56"},{"size":2450,"mtime":1614288576753,"results":"83","hashOfConfig":"56"},{"size":4099,"mtime":1618159788883,"results":"84","hashOfConfig":"56"},{"size":276,"mtime":1617899813885,"results":"85","hashOfConfig":"56"},{"size":2860,"mtime":1618141494392,"results":"86","hashOfConfig":"56"},{"size":507,"mtime":1618164660380,"results":"87","hashOfConfig":"56"},{"size":752,"mtime":1615534420212,"results":"88","hashOfConfig":"56"},{"size":220,"mtime":1615578221132,"results":"89","hashOfConfig":"56"},{"size":459,"mtime":1618171899966,"results":"90","hashOfConfig":"56"},{"size":1017,"mtime":1618170075463,"results":"91","hashOfConfig":"56"},{"size":492,"mtime":1615490061227,"results":"92","hashOfConfig":"56"},{"size":2077,"mtime":1617899692909,"results":"93","hashOfConfig":"56"},{"size":4516,"mtime":1618148339525,"results":"94","hashOfConfig":"56"},{"size":5516,"mtime":1618149589674,"results":"95","hashOfConfig":"56"},{"size":7659,"mtime":1617912701863,"results":"96","hashOfConfig":"56"},{"size":1901,"mtime":1614707846784,"results":"97","hashOfConfig":"56"},{"size":2155,"mtime":1617958333780,"results":"98","hashOfConfig":"56"},{"size":5023,"mtime":1618153862819,"results":"99","hashOfConfig":"56"},{"size":2595,"mtime":1617899716748,"results":"100","hashOfConfig":"56"},{"size":4082,"mtime":1617902635791,"results":"101","hashOfConfig":"56"},{"size":3439,"mtime":1617900331697,"results":"102","hashOfConfig":"56"},{"size":2051,"mtime":1617899098476,"results":"103","hashOfConfig":"56"},{"size":386,"mtime":1617899385691,"results":"104","hashOfConfig":"56"},{"size":389,"mtime":1617899393347,"results":"105","hashOfConfig":"56"},{"size":2954,"mtime":1618153583557,"results":"106","hashOfConfig":"56"},{"size":1149,"mtime":1618165143347,"results":"107","hashOfConfig":"56"},{"size":2828,"mtime":1618085675289,"results":"108","hashOfConfig":"56"},{"size":659,"mtime":1618168291451,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qzdid3",{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\index.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\App.js",["229","230","231","232"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\reportWebVitals.js",[],["233","234"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Footer.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Contact.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Header.jsx",["235"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport 'bootstrap/js/dist/dropdown';\r\nimport 'bootstrap/js/dist/modal';\r\nimport 'bootstrap/js/dist/collapse';\r\nimport '../css/header.css';\r\nimport $ from 'jquery';\r\nimport CartProduct from './cart-and-payment/CartProduct.jsx';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useCart } from '../context/CartContext';\r\nimport { useFavorites } from '../context/FavoritesContext';\r\n\r\n\r\nexport default function Header() {\r\n    const { currentUser, logout } = useAuth();\r\n    const { cartProducts, calculateSumQtyCart } = useCart();\r\n    const { favoriteProducts } = useFavorites();\r\n    const history = useHistory();\r\n\r\n    const searchInputRef = useRef();\r\n    const modalCartRef = useRef();\r\n\r\n    const [searchInput, setSearchInput] = useState('')\r\n    \r\n\r\n    async function handleLogout() {\r\n        try {\r\n            await logout()\r\n            history.push('/')\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const onSetSearchInput = () => {\r\n        var value = searchInputRef.current.value.replace(/[^A-Za-z]/ig, '');\r\n        searchInputRef.current.value = value;\r\n        setSearchInput(value);\r\n    }\r\n\r\n    const setCartModal = () => {\r\n        return (\r\n            <div className=\"modal fade\" id=\"cartModal\" ref={modalCartRef} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLongTitle\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"modalLongTitle\">Shopping Cart</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {cartProducts.map(cartProduct => \r\n                                <CartProduct \r\n                                    key={cartProduct.id} \r\n                                    cartProduct={cartProduct} \r\n                                />)\r\n                            }\r\n                        </div>\r\n                        <div className=\"modal-footer\"> \r\n                            <Link to=\"/cart\"><button type=\"button\" className=\"btn btn-primary\" onClick={() => $(modalCartRef.current).modal('hide')}>Full shopping cart</button></Link>\r\n                            <Link to=\"/payment\"><button type=\"button\" className=\"btn btn-primary\" onClick={() => $(modalCartRef.current).modal('hide')}>Check-Out</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"/\">HomeStyle</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/blog\" className=\"nav-link\">Blog</Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <div className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Store</div>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <Link to={{pathname: \"/products/bedroom\", category: \"Bedroom\"}} className=\"dropdown-item\">Bedroom</Link>\r\n                                <Link to={{pathname: \"/products/bathroom\", category: \"Bathroom\"}} className=\"dropdown-item\">Bathroom</Link>\r\n                                <Link to={{pathname: \"/products/living-room\", category: \"Living-room\"}} className=\"dropdown-item\">Living Room</Link>\r\n                            </div>\r\n\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e) => e.preventDefault()}>\r\n                        <div className=\"navbar-nav mx-2\">\r\n                            \r\n                            <span type=\"button\" className=\"fa-stack has-badge\" style={{color: 'black'}} data-count={calculateSumQtyCart()} data-toggle=\"modal\" data-target=\"#cartModal\">\r\n                                <i className=\"fa fa-shopping-cart fa-lg mt-1\" style={{color: 'dodgerblue'}}></i>\r\n                            </span>\r\n\r\n                            <Link to=\"/favorites\">\r\n                                <span className=\"fa-stack has-badge mx-2\" style={{color: 'black'}} data-count={favoriteProducts.length}>\r\n                                    <i className=\"fa fa-heart mt-1 fa-lg\" style={{color: 'dodgerblue'}}></i>\r\n                                </span>\r\n                            </Link>\r\n\r\n                            {currentUser ? <div> Hello {currentUser.firstName}</div> : ''}\r\n\r\n                            <div className=\"nav-item dropdown mx-2\">\r\n                                <div className=\"nav-link dropdown-toggle px-0 py-1\" id=\"loginNavbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i className=\"fas fa-lg fa-user\" style={{color: 'dodgerblue'}}></i>\r\n                                </div>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"loginNavbarDropdown\" style={{width: \"170px\"}}>\r\n                                    { currentUser ?\r\n                                        <div>\r\n                                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/profile\">Profile</Link></button>|\r\n                                            <button type=\"button\" className=\"btn btn-light\" onClick={handleLogout}><Link to=\"#\">Log out</Link></button>\r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/login\">Login</Link></button>|\r\n                                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/signup\">Sign Up</Link></button>\r\n                                        </div>\r\n                                    }\r\n                                    {(currentUser && currentUser.role === 'admin') ?\r\n                                        <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin\">Admin</Link></button>\r\n                                    : ''\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <input className=\"form-control mr-sm-2\" placeholder=\"Search\" aria-label=\"Search\" ref={searchInputRef} onChange={onSetSearchInput}></input >\r\n                        <Link to={`/products?q=${searchInput}`} type=\"button\" className=\"btn btn-outline-dark my-2 my-sm-0\">Search</Link>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n\r\n            {setCartModal()}\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n   ","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\PageNotFound.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\Home.jsx",["236"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\Blog.jsx",["237","238"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\About.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\ArticlePage.jsx",["239","240","241","242","243","244","245","246","247"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderConfirmation.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\ShoppingCart.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\Store.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\Payment.jsx",["248"],"import React, { useRef, useState } from 'react';\r\nimport {Button, Collapse } from 'react-bootstrap';\r\nimport OrderSummary from './OrderSummary.jsx';\r\nimport 'bootstrap/js/dist/collapse';\r\nimport PayPalBtn from './PayPalBtn';\r\nimport { useCart } from '../../context/CartContext';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { emailPattern, phonePattrern} from '../../data/constants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Payment() {\r\n    const { cartProducts, setCartProducts, cancelCoupon, getSubTotalAmount, getTaxesAmount, getCouponDiscountAmount, getTotalBeforeDelivert, myCoupon } = useCart();\r\n    const { currentUser, userFirstName, userLastName, userPhone } = useAuth();\r\n    const history = useHistory();\r\n\r\n    const recipientDetails = useRef();\r\n    const firstNameCustomerRef = useRef('');\r\n    const lastNameCustomerRef = useRef('');\r\n    const phoneRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const emailSubscriptionRef = useRef(false);\r\n    const firstNameRef = useRef('');\r\n    const lastNameRef = useRef('');\r\n    const streetRef = useRef('');\r\n    const homeNumberRef = useRef('');\r\n    const apartmentNumberRef = useRef('');\r\n    const selectDelivery = useRef('');\r\n    const cityRef = useRef('');\r\n    \r\n    const [openCostumerDetails, setOpenCostumerDetails] = useState(false);\r\n    const [openRecipientDetails, setOpenRecipientDetails] = useState(false);\r\n    const [openPaymentDetails, setOpenPaymentDetails] = useState(false);\r\n    const [deliveryAmount, setDeliveryAmount] = useState(0);\r\n    const [messageFirstNameCustomer, setFirstNameCustomer] = useState('');\r\n    const [messageLastNameCustomer, setLastNameCustomer] = useState('');\r\n    const [messagePhone, setMessagePhone] = useState('');\r\n    const [messageEmail, setMessageEmail] = useState('');\r\n    const [messageFirstName, setMessageFirstName] = useState('');\r\n    const [messageLastName, setMessageLastName] = useState('');\r\n    const [messageStreet, setMessageStreet] = useState('');\r\n    const [messageHomeNumber, setMessageHomeNumber] = useState('');\r\n    const [messageApartmentNumber, setMessageApartmentNumber] = useState('');\r\n    const [messageCity, setMessageCity] = useState('');\r\n\r\n    const invalidMessages = {required: \"This field is required\", \r\n                            emailPattern: \"Please provide a valid email\",\r\n                            phonePattern: \"Please provide a valid phone number\"                           \r\n                            };\r\n\r\n\r\n    const calculateDelivery = () => {\r\n        let totalAmount = getSubTotalAmount();\r\n        if (totalAmount < 50){\r\n            return 50;\r\n        }\r\n        else if (totalAmount >= 50 && totalAmount < 125){\r\n            return 75;\r\n        }\r\n        else if (totalAmount >= 125 && totalAmount < 200){\r\n            return 100;\r\n        }\r\n        else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    const onChangeDelivery = () => {\r\n        switch (selectDelivery.current.value){\r\n            case 'Self-pickup':\r\n                setDeliveryAmount(0);\r\n                break;\r\n            case 'Postal-service':\r\n                setDeliveryAmount(10);\r\n                break;\r\n            case 'Registered-mail':\r\n                setDeliveryAmount(30);\r\n                break;\r\n            case 'emissary':\r\n                const deliveryAmount = calculateDelivery();\r\n                setDeliveryAmount(deliveryAmount);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    const getTotalAmountAfterDelivery = () => {\r\n        return getTotalBeforeDelivert() + deliveryAmount;\r\n    }\r\n\r\n    const validateCostumerDetails = () => {\r\n        let correctInputs = true;\r\n\r\n        if (firstNameCustomerRef.current.validity.valueMissing){\r\n            firstNameCustomerRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setFirstNameCustomer(invalidMessages.required);\r\n        }\r\n        else{\r\n            setFirstNameCustomer('');\r\n            firstNameCustomerRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (lastNameCustomerRef.current.validity.valueMissing){\r\n            lastNameCustomerRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setLastNameCustomer(invalidMessages.required);\r\n        }\r\n        else{\r\n            setLastNameCustomer('');\r\n            lastNameCustomerRef.current.style.borderColor = 'green';\r\n        }\r\n        \r\n        if (!emailRef.current.value){\r\n            emailRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageEmail(invalidMessages.required);\r\n        } \r\n        else if (!emailRef.current.value.match(emailPattern)){\r\n            emailRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageEmail(invalidMessages.emailPattern);\r\n        }\r\n        else {\r\n            setMessageEmail('');\r\n            emailRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        return correctInputs;\r\n    }\r\n\r\n    const submitCostumerDetails = (event) => {\r\n        event.preventDefault();\r\n        setOpenPaymentDetails(false);\r\n\r\n        const inputsValidation = validateCostumerDetails();\r\n        if (inputsValidation){\r\n            setOpenCostumerDetails(false);\r\n            setOpenRecipientDetails(true);\r\n        }\r\n    }\r\n\r\n    const validateRecipientDetails = () => {\r\n        let correctInputs = true;\r\n        \r\n        if (firstNameRef.current.validity.valueMissing){\r\n            firstNameRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageFirstName(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageFirstName('');\r\n            firstNameRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (lastNameRef.current.validity.valueMissing){\r\n            lastNameRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageLastName(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageLastName('');\r\n            lastNameRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (streetRef.current.validity.valueMissing){\r\n            streetRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageStreet(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageStreet('');\r\n            streetRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (homeNumberRef.current.validity.valueMissing){\r\n            homeNumberRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageHomeNumber(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageHomeNumber('');\r\n            homeNumberRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (apartmentNumberRef.current.validity.valueMissing){\r\n            apartmentNumberRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageApartmentNumber(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageApartmentNumber('');\r\n            apartmentNumberRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (cityRef.current.validity.valueMissing){\r\n            cityRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessageCity(invalidMessages.required);\r\n        }\r\n        else{\r\n            setMessageCity('');\r\n            cityRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        if (phoneRef.current.validity.valueMissing) {\r\n            phoneRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessagePhone(invalidMessages.required);\r\n        }\r\n        else if (!phoneRef.current.value.match(phonePattrern)){\r\n            phoneRef.current.style.borderColor = 'red';\r\n            correctInputs = false;\r\n            setMessagePhone(invalidMessages.phonePattern);\r\n        }\r\n        else {\r\n            setMessagePhone('');\r\n            phoneRef.current.style.borderColor = 'green';\r\n        }\r\n\r\n        return correctInputs;\r\n    }\r\n\r\n    const submitRecipientDetails = (event) => {\r\n        event.preventDefault();\r\n        setOpenPaymentDetails(false);\r\n\r\n        const inputsValidation = validateRecipientDetails();\r\n        if (inputsValidation){\r\n            setOpenCostumerDetails(false);\r\n            setOpenRecipientDetails(false);\r\n            setOpenPaymentDetails(true);\r\n        }  \r\n    }\r\n\r\n    const paymentHandler = (details, data) => {\r\n        const userID = currentUser ? currentUser.uid : 1;\r\n        const couponDiscountAmount = myCoupon.code ? getCouponDiscountAmount() * -1 : 0;\r\n        const couponCode = myCoupon.code ? myCoupon.code : 0;\r\n        // const customerFirstName = currentUser ? userFirstName : firstNameCustomerRef.current.value;\r\n        // const customerLastName = currentUser ? userLastName : lastNameCustomerRef.current.value;\r\n        // const customerPhone = currentUser ? userPhone : phoneRef.current.value;\r\n        // const customerEmail = currentUser ? currentUser.email : emailRef.current.value;\r\n\r\n        const orderedProducts = cartProducts.map((product) => {\r\n            return {\r\n                productId: product.id,\r\n                quantity: product.quantity\r\n            }\r\n        })\r\n        axios.post(`${process.env.REACT_APP_PROXY}/orders`, {\r\n            id: data.orderID,\r\n            totalAmount: parseFloat(details.purchase_units[0].amount.value),\r\n            subtotalAmount: getSubTotalAmount(),\r\n            taxesAmount: getTaxesAmount(),\r\n            couponDiscountAmount: couponDiscountAmount,\r\n            couponCode: couponCode,\r\n            deliveryAmount: deliveryAmount,\r\n            deliveryMethod: selectDelivery.current.value,\r\n            products: orderedProducts,\r\n            userId: '606629fb8c73a357f4a3d267',\r\n            recipient: {\r\n                firstName: firstNameRef.current.value,\r\n                lastName: lastNameRef.current.value,\r\n                city: cityRef.current.value,\r\n                street: streetRef.current.value,\r\n                homeNumber: homeNumberRef.current.value,\r\n                apartmentNumber: apartmentNumberRef.current.value,\r\n                phone: phoneRef.current.value\r\n            }\r\n            // payer_details: {\r\n            //     id: details.payer.payer_id,\r\n            //     first_name: details.payer.name.given_name,\r\n            //     last_name: details.payer.name.surname,\r\n            //     email_address: details.payer.email_address,\r\n            //     country_code: details.payer.address.country_code\r\n            // }\r\n        });\r\n        \r\n        setCartProducts([]);\r\n        localStorage.removeItem('cartProducts');\r\n        cancelCoupon();\r\n        \r\n        history.push('/order-confirmation', {order_id: data.orderID});\r\n    }\r\n\r\n    const onPaymentDetailsClicked = () => {\r\n        const costumerInputsValidation = validateCostumerDetails();\r\n        if (!costumerInputsValidation) {\r\n            setOpenCostumerDetails(true);\r\n            setOpenRecipientDetails(false);\r\n            return;\r\n        }\r\n\r\n        const recipientInputsValidation = validateRecipientDetails();\r\n        if (!recipientInputsValidation) {\r\n            setOpenCostumerDetails(false);\r\n            setOpenRecipientDetails(true);\r\n            return;\r\n        }\r\n\r\n        setOpenPaymentDetails(!openPaymentDetails);\r\n    }\r\n\r\n    const onCustomerDetailsClicked = () => {\r\n        setOpenCostumerDetails(!openCostumerDetails)\r\n        setOpenPaymentDetails(false);\r\n    }\r\n\r\n    const onRecipientDetailsCliked = () => {\r\n        setOpenRecipientDetails(!openRecipientDetails)\r\n        setOpenPaymentDetails(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"text-center mb-4\">Check-Out</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 mb-5 paymentForm\">\r\n                    \r\n                        <div className=\"col-12 col-md-10 border-bottom\" style={{borderColor: '#d9d9d9'}}>\r\n                            <Button className=\"btn btn-light btn-block text-left\" type=\"button\"\r\n                             onClick={onCustomerDetailsClicked}\r\n                             aria-controls=\"costumer-details-collapse\"\r\n                             aria-expanded={openCostumerDetails}\r\n                            >\r\n                                Costumer Details\r\n                            </Button>\r\n                            <Collapse in={openCostumerDetails}>\r\n                                <div className=\"mb-2\" id=\"costumer-details-collapse\">\r\n                                    <form>\r\n                                        <div className=\"form-group mt-2 payment-form\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"firstNameCustomer\">First Name: </label>\r\n                                                        { currentUser ?\r\n                                                            <input type=\"text\" className=\"form-control\" ref={firstNameCustomerRef} required value={userFirstName} disabled></input>\r\n                                                        :   <input type=\"text\" className=\"form-control\" ref={firstNameCustomerRef} required></input>\r\n                                                        }\r\n                                                        <div className=\"invalidMassege text-danger\">\r\n                                                            {messageFirstNameCustomer}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"lastNameCustomer\">Last Name: </label>\r\n                                                        { currentUser ?\r\n                                                            <input type=\"text\" className=\"form-control\" ref={lastNameCustomerRef} required value={userLastName} disabled></input>\r\n                                                        :   <input type=\"text\" className=\"form-control\" ref={lastNameCustomerRef} required></input>\r\n                                                        }\r\n                                                        <div className=\"invalidMassege text-danger\">\r\n                                                            {messageLastNameCustomer}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"phone\">Phone: </label>\r\n                                                { currentUser ?\r\n                                                    <input type=\"tel\" className=\"form-control\" ref={phoneRef} placeholder=\"050-123-1234\" required value={userPhone} disabled></input>\r\n                                                :   <input type=\"tel\" className=\"form-control\" ref={phoneRef} placeholder=\"050-123-1234\" required></input>\r\n                                                }\r\n                                                <div className=\"invalidMassege text-danger\">\r\n                                                    {messagePhone}\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email\">Email: </label>\r\n                                                { currentUser ?\r\n                                                    <input type=\"mail\" className=\"form-control\" ref={emailRef} required value={currentUser.email} disabled></input>\r\n                                                :   <input type=\"mail\" className=\"form-control\" ref={emailRef} required></input>\r\n                                                }\r\n                                                <div className=\"invalidMassege text-danger\">\r\n                                                    {messageEmail}\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-check mt-2\">\r\n                                                <input type=\"checkbox\" className=\"form-check-input\" id=\"ReceiveMarketingInfo\" ref={emailSubscriptionRef}></input>\r\n                                                <label className=\"form-check-label mb-2\" htmlFor=\"ReceiveMarketingInfo\">I would like to receive information about products and promotions on the site</label>\r\n                                            </div>\r\n                                            \r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-sm px-5\" onClick={submitCostumerDetails}>Next</button>\r\n                                        </div>\r\n                                    </form> \r\n                                </div>\r\n                            </Collapse>\r\n                            \r\n                        </div> \r\n\r\n                        <div className=\"col-12 col-md-10 mt-4 border-bottom\" style={{borderColor: '#d9d9d9'}}>\r\n                            <Button className=\"btn btn-light btn-block text-left\" type=\"button\"\r\n                              onClick={onRecipientDetailsCliked}\r\n                              aria-controls=\"costumer-details-collapse\"\r\n                              aria-expanded={openRecipientDetails}\r\n                            >\r\n                                Recipient Details\r\n                            </Button>\r\n                            <Collapse in={openRecipientDetails}>\r\n                                <div className=\"collapse mb-2\" id=\"RecipientDetails\"  ref={recipientDetails}>\r\n                                    <form>\r\n                                        <div className=\"form-group mt-2\">\r\n                                        \r\n                                            <div className=\"form row form-group\">\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"firstName\">First name:</label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={firstNameRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageFirstName}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"lastName\">Last name:</label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={lastNameRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageLastName}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form row form-group\">\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"city\">City:</label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={cityRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageCity}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"street\">Street:</label>\r\n                                                    <input type=\"text\" className=\"form-control\" ref={streetRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageStreet}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form row form-group\">\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"apartmentNumber\">Apartment number:</label>\r\n                                                    <input type=\"number\" className=\"form-control\" ref={apartmentNumberRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageApartmentNumber}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <label htmlFor=\"homeNumber\">Home number:</label>\r\n                                                    <input type=\"number\" className=\"form-control\" ref={homeNumberRef} required></input>\r\n                                                    <div className=\"invalidMassege text-danger\">\r\n                                                        {messageHomeNumber}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form row form-group\">\r\n                                                <label htmlFor=\"phone\">Phone:</label>\r\n                                                <input type=\"tel\" className=\"form-control\" ref={phoneRef} placeholder=\"0501231234\" required></input>\r\n                                                <div className=\"invalidMassege text-danger\">\r\n                                                    {messagePhone}\r\n                                                </div>\r\n                                            </div>\r\n                                                                                        \r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-sm px-5\" onClick={submitRecipientDetails}>Next</button> \r\n                                        </div>  \r\n                                    </form> \r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-10 mt-4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"deliverySelect\">Delivery:</label>\r\n                                <select className=\"form-control\" ref={selectDelivery} onChange={onChangeDelivery}>\r\n                                    <option value=\"Self-pickup\">Self-pickup: $0</option>\r\n                                    <option value=\"Postal-service\">Postal service: $10</option>\r\n                                    <option value=\"Registered-mail\">Registered mail: $30</option>\r\n                                    <option value=\"emissary\">emissary: ${calculateDelivery().toLocaleString()} - Free over $200</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Payment Form */}\r\n                        <div className=\"col-12 col-md-10 border-bottom\" style={{borderColor: '#d9d9d9'}}>\r\n                            <Button className=\"btn btn-light btn-block text-left\" type=\"button\" \r\n                              onClick={onPaymentDetailsClicked}\r\n                              aria-controls=\"costumer-details-collapse\"\r\n                              aria-expanded={openPaymentDetails}\r\n                            >\r\n                                Payment Details\r\n                            </Button>\r\n                            <Collapse in={openPaymentDetails}>\r\n                                <div className=\"mb-2 mt-3\" id=\"paymentDetails\">\r\n                                    <form>\r\n                                        <div className=\"form-group mt-2 payment-form\">\r\n                                            <div className=\"mb-2\" id=\"paypalDetails\">\r\n                                                <PayPalBtn amount={0.1} currency={'USD'} onSuccess={paymentHandler}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form> \r\n                                </div>\r\n                            </Collapse>\r\n                        </div> \r\n                                            \r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <OrderSummary />\r\n                    <p>Delivery: ${deliveryAmount}</p>\r\n                    <p><b>Total after delivery: <span className=\"text-success\">${getTotalAmountAfterDelivery().toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></b></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\ProductPage.jsx",["249"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Product from './Product.jsx';\r\nimport { useCart } from '../../context/CartContext';\r\nimport { useFavorites } from '../../context/FavoritesContext';\r\nimport { useStore } from '../../context/StoreContext';\r\n\r\n\r\nexport default function ProductPage(props) {\r\n    const { handleAddToCart } = useCart();\r\n    const { handleChangeFavorites, favoriteProducts } = useFavorites();\r\n    const qtyRef = useRef();\r\n    const { products } = useStore();\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    },[])\r\n\r\n    const createStars = () => {\r\n        let fiveStars = []\r\n        for (let j = 0; j < 5; j++) {\r\n            if (j<props.product.stars)\r\n                fiveStars.push(<i className=\"fas fa-star\" key={j}></i>);\r\n            else\r\n            fiveStars.push(<i className=\"far fa-star\" key={j}></i>);\r\n        }\r\n        return fiveStars;\r\n    };\r\n\r\n    const createQtyList = () => {\r\n        const qtyList = [];\r\n        for(let i=1; i<=10; i++){\r\n            qtyList.push(<option key={i}>{i}</option>);\r\n        }\r\n        return qtyList;\r\n    }\r\n\r\n    const isInStock = () => {\r\n        if (props.product.inStock)\r\n            return <h4 className=\"text-success\">In Stock</h4>\r\n        else\r\n            return <h4 className=\"text-danger\">Out of Stock</h4>\r\n    }\r\n\r\n    const isFavorite = () => {\r\n        if (favoriteProducts){\r\n            const isFavoriteProduct = favoriteProducts.filter(element => element.id === props.product.id);\r\n            if (isFavoriteProduct.length === 0){\r\n                return <i id=\"favoriteIcon\" className=\"far fa-heart ml-2\" onClick={() => handleChangeFavorites(props.product, true)}></i>\r\n            }\r\n            else {\r\n                return <i id=\"favoriteIcon\" className=\"fas fa-heart ml-2\" onClick={() => handleChangeFavorites(props.product, false)}></i>\r\n            }\r\n        }\r\n        else {\r\n            return <i id=\"favoriteIcon\" className=\"far fa-heart ml-2\" onClick={() => handleChangeFavorites(props.product, true)}></i>\r\n        }\r\n    }\r\n\r\n    const displayPrice = () => {\r\n        if(props.product.discount !== 0) {\r\n            return (<div className=\"my-3\">\r\n                        <h4>{props.product.discount * 100}% OFF</h4>\r\n                        <h4><span style={{textDecoration: \"line-through\"}}>${props.product.price}</span> ${props.product.price * (1- props.product.discount)}</h4>\r\n                    </div>)\r\n        }\r\n        else {\r\n            return <h3 className=\"my-3\">${props.product.price}</h3>\r\n        }\r\n    }\r\n\r\n    function getRelatedProducts() {\r\n        if (products)\r\n            return products.filter(element => element.category === props.product.category && element.id !== props.product.id);\r\n        return [];\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 px-5 product-image\">\r\n                    <div>\r\n                        <Carousel>\r\n                            {props.product.product_images.map((image, index) => (\r\n                                <div key={index}>\r\n                                    <img src={image} alt=\"carousel_image\" />\r\n                                </div>\r\n                            ))}\r\n                        </Carousel>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 px-4 product-details\">\r\n                    <div id=\"ProductTitle\" className=\"mt-5\">\r\n                        <h1>{props.product.name}</h1>\r\n                        {createStars()}\r\n                        {displayPrice()}\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Group controlId=\"qty\" className=\"d-inline-flex\">\r\n                            <Form.Label className=\"p-2\">Qty:</Form.Label>\r\n                            <Form.Control as=\"select\" className=\"p-2 col-sm-8\" ref={qtyRef}>\r\n                            {createQtyList()}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Button variant=\"primary\" className=\"px-5\" onClick={() => handleAddToCart(props.product, qtyRef.current.value)}>\r\n                            Add to cart\r\n                        </Button>\r\n                        {isFavorite()}\r\n                    </div>\r\n                    <div id=\"ProductOtherDetails\" className=\"mt-5\">\r\n                        {isInStock()}\r\n                        <p><strong>Description:</strong> {props.product.description}</p>\r\n                        <p><strong>Category:</strong> {props.product.category}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"mb-2\">\r\n                            <strong>Related Items:</strong>\r\n                        </p>\r\n                        <div className=\"row\">\r\n                            {getRelatedProducts().map(productElement => \r\n                                <Product key={productElement.id} productElement={productElement}/>\r\n                            )}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\firebase.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\AuthContext.js",["250"],"import React, { useContext, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    \r\n    const getAuthHeaders = () => {\r\n        const token = localStorage.getItem('token');\r\n        return {'Content-Type': 'application/json', 'Authorization': token ? `Bearer ${token}` : \"\"};\r\n    }\r\n\r\n    const login = async (email, password) =>{\r\n        try {\r\n            const resp = await axios.post(`${process.env.REACT_APP_PROXY}/users/login`, {\r\n                email, \r\n                password\r\n            })\r\n            localStorage.setItem(\"token\", resp.data.token);\r\n            setCurrentUser(resp.data.user)\r\n            return resp;\r\n        }\r\n        catch(err) {\r\n            console.log(err)\r\n            return err\r\n        }\r\n    }\r\n\r\n    function logout() {\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    // function resetPassword(email) {\r\n    //     return auth.sendPasswordResetEmail(email) \r\n    // }\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        setCurrentUser,\r\n        login,\r\n        logout,\r\n        getAuthHeaders\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\FavoritesContext.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\CartContext.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\WebsiteAdmin.js",["251","252","253","254","255","256","257"],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\CartProduct.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\AlertBox.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderSummary.jsx",["258","259"],"import React, { useRef } from 'react';\r\nimport { useCart } from '../../context/CartContext';\r\n\r\n\r\nexport default function OrderSummary() {\r\n    const { myCoupon, coupons, activateCoupon, cancelCoupon, getSubTotalAmount, getTaxesAmount, getTotalAfterTaxes, getTotalBeforeDelivert, setMyCoupon } = useCart();\r\n\r\n    const cuponInputRef = useRef();\r\n    const cuponDiscountRef = useRef();\r\n    const totalAmountRef = useRef();\r\n    const amountAfterCuponRef = useRef();\r\n    \r\n\r\n    const onActivateCoupon = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (cuponInputRef.current.value) {   \r\n            let cuponConfirmed = false\r\n            coupons.forEach(element => {\r\n                if (element.code === cuponInputRef.current.value){\r\n                    cuponConfirmed = true;\r\n                    const coupon = {code: element.code, discount: element.discount}\r\n                    setMyCoupon(coupon);\r\n                    localStorage.setItem('myCoupon', JSON.stringify(coupon));\r\n                    totalAmountRef.current.style.textDecorationLine = \"line-through\";\r\n                }\r\n            });\r\n            if (!cuponConfirmed){\r\n                alert(\"Coupon code is invalid\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const onCancelCoupon = (e) => {\r\n        e.preventDefault();\r\n        setMyCoupon({});\r\n        localStorage.removeItem('myCoupon')\r\n    }\r\n\r\n        \r\n    return (\r\n        <>\r\n            <h4 className=\"text-center border-bottom pb-2\">Order Summary</h4>\r\n            <p>Subtotal: ${(getSubTotalAmount()).toLocaleString()}</p>\r\n            <p>Taxes: ${((getTaxesAmount()).toFixed(2)).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cupon\">Cupon-code:</label>\r\n                    <input type=\"text\" className=\"form-control d-inline\" id=\"cuponInput\" ref={cuponInputRef} defaultValue={myCoupon ? myCoupon.code : ''}></input>\r\n                    <div className=\"mt-2\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-primary btn-sm d-inline mr-2\" onClick={onActivateCoupon}>Activate coupon</button>\r\n                        <button type=\"submit\" className=\"btn btn-outline-primary btn-sm d-inline\" onClick={onCancelCoupon}>Cancel coupon</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {myCoupon.code ?\r\n                <div className=\"text-success\" ref={cuponDiscountRef}>\r\n                    {myCoupon.discount * 100}% discount\r\n                </div>\r\n            : null\r\n            }\r\n            <p className=\"mt-1\">\r\n                <b>Total: </b> \r\n                <span className=\"text-success\" style={myCoupon.code ? {textDecorationLine: 'line-through'} : {}} ref={totalAmountRef} >\r\n                    ${getTotalAfterTaxes().toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                </span>\r\n            </p>\r\n            {myCoupon.code ?\r\n                <p ref={amountAfterCuponRef}>\r\n                    <b>Total after coupon discount: </b><span className=\"text-success\">${getTotalBeforeDelivert().toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                </p>\r\n            : null\r\n            }\r\n                        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\store\\Product.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\Login.jsx",["260"],"import React, { useRef, useState } from 'react'\r\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport {auth, signInOptions} from \"../../firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading]= useState(false);\r\n    const history = useHistory();\r\n\r\n    //login with google/facebook\r\n    const uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: signInOptions,\r\n        callbacks: { signInSuccess: () => history.push(\"\") }\r\n    }\r\n  \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n\r\n            // const resp = await axios.post(`${process.env.REACT_APP_PROXY}/users/login`, {\r\n            //     email: emailRef.current.value,\r\n            //     password: passwordRef.current.value\r\n            // })\r\n            // console.log(resp.data)\r\n            // localStorage.setItem(\"token\", resp.data.token);\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch(err) {\r\n            console.log(err);\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"d-flex justify-content-center align-items-center\" style={{minHeight: \"80vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Log In</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                                </Form.Group>\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n                            </Form>\r\n\r\n                            {/* login with google/facebook */}\r\n                            <StyledFirebaseAuth\r\n                                uiConfig={uiConfig}\r\n                                firebaseAuth={auth}\r\n                            />\r\n\r\n                            <div className=\"w-100 text-center mt-3\">\r\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRoute.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ForgotPassword.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\SignUp.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\Profile.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ChangePassword.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRouteAdmin.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\favorites\\Favorites.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\data\\constants.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\ArticleComment.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\blog\\Article.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\PayPalBtn.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\articles.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\users.js",["261","262","263"],"import * as React from \"react\";\r\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\r\nimport { auth, firebasedb } from '../../firebase';\r\nimport {\r\n    required,\r\n    minLength,\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    BooleanField,\r\n    EmailField,\r\n    EditButton,\r\n    Edit,\r\n    Create,\r\n    SimpleForm,\r\n    SelectInput,\r\n    TextInput,\r\n    BooleanInput,\r\n    Filter,\r\n    PasswordInput\r\n} from 'react-admin';\r\n\r\nconst roleOptions = [\r\n    { id: 'admin', name: 'admin' },\r\n    { id: 'site-owner', name: 'site-owner' },\r\n    { id: 'client', name: 'client' }\r\n]\r\n\r\nconst UserCreateAuth = (data) => (\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n    .then(async (userCredential) => {\r\n        // Signed in \r\n        let user = userCredential.user;\r\n        firebasedb.ref('users').child(user.uid).set({\r\n            \"id\": user.uid,\r\n            \"active\": true,\r\n            \"email\": data.email,\r\n            \"firstName\": data.firstName,\r\n            \"lastName\": data.lastName,\r\n            \"phone\": data.phone,\r\n            \"role\": data.role\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        window.alert(error.message);\r\n    })\r\n)\r\n\r\n// const DeleteConfirmTitle = 'Are you sure you want to delete this user?';\r\n\r\n// const DeleteConfirmContent = (props) => {\r\n//     return (\r\n//       <SimpleShowLayout {...props} >\r\n//         <TextField source=\"id\" />\r\n//         <TextField source=\"role\" />\r\n//         <TextField source=\"firstName\" />\r\n//         <TextField source=\"lastName\" />\r\n//         <TextField source=\"email\" />\r\n//       </SimpleShowLayout>\r\n//     );\r\n// };\r\n\r\nexport const UserList = props => (\r\n    <List filters={<UserFilter />} {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <BooleanField source=\"active\" />\r\n            <EmailField source=\"email\" />\r\n            <TextField source=\"role\" />\r\n            <TextField source=\"firstName\" label=\"First Name\" />\r\n            <TextField source=\"lastName\" label=\"Last Name\" />\r\n            <TextField source=\"phone\" />\r\n            <EditButton />\r\n            {/* <DeleteWithCustomConfirmButton\r\n                title={DeleteConfirmTitle}      // your custom title of delete confirm dialog\r\n                content={DeleteConfirmContent}  // your custom contents of delete confirm dialog\r\n                confirmColor='warning'          // color of delete button ('warning' or 'primary', default: 'warning')\r\n                ConfirmIcon={Delete}            // icon of delete button (default: 'Delete')\r\n                cancel='Cancel'                 // label of cancel button (default: 'Cancel')\r\n                CancelIcon={ErrorOutline}       // icon of cancel button (default: 'ErrorOutline')\r\n                undoable={true}                 // undoable (default: true)\r\n            /> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"id\" disabled />\r\n            <TextInput source=\"email\" disabled />\r\n            <SelectInput source=\"role\" choices={roleOptions} />\r\n            <TextInput source=\"firstName\" label=\"First Name\" validate={[required()]} />\r\n            <TextInput source=\"lastName\" label=\"Last Name\" validate={[required()]} />\r\n            <TextInput source=\"phone\" validate={[required()]} />\r\n            <BooleanInput source=\"active\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm save={(data) => UserCreateAuth(data)} redirect=\"list\">\r\n            <SelectInput source=\"role\" choices={roleOptions} validate={[required()]} />\r\n            <TextInput source=\"email\" validate={[required()]} />\r\n            <TextInput source=\"firstName\" label=\"First Name\" />\r\n            <TextInput source=\"lastName\" label=\"Last Name\"/>\r\n            <TextInput source=\"phone\" />\r\n            <PasswordInput source=\"password\" label=\"Password\" validate={[required(), minLength(6)] } />\r\n            <BooleanInput source=\"active\" defaultValue={true} />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nconst UserFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <BooleanInput source=\"active\" />\r\n        <SelectInput source=\"role\" choices={roleOptions} />\r\n    </Filter>\r\n);","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\products.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\orders.js",["264"],"import * as React from \"react\";\r\nimport DeleteWithCustomConfirmButton from 'ra-delete-with-custom-confirm-button';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\r\nimport { GridShowLayout, RaGrid, BoxedShowLayout, RaBox } from \"ra-compact-ui\";\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    NumberField,\r\n    EditButton,\r\n    SelectInput,\r\n    TextInput,\r\n    Filter,\r\n    SimpleShowLayout,\r\n    DateField,\r\n    DateInput,\r\n    Show,\r\n    ChipField,\r\n    ArrayField,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceField,\r\n    ReferenceInput\r\n} from 'react-admin';\r\n\r\n\r\nconst DeleteConfirmTitle = 'Are you sure you want to delete this order?';\r\n\r\nconst statusOptions = [\r\n    { id: 'ordered', name: 'ordered' },\r\n    { id: 'in_proccess', name: 'in proccess' },\r\n    { id: 'confirmed', name: 'confirmed' },\r\n    { id: 'sent', name: 'sent' },\r\n    { id: 'received', name: 'received' },\r\n    { id: 'returned', name: 'returned' }\r\n]\r\n\r\nconst DeleteConfirmContent = (props) => {\r\n    return (\r\n      <SimpleShowLayout {...props} >\r\n        <TextField source=\"id\" />\r\n        <TextField source=\"status\" />\r\n        <DateField source=\"createdAt\" label=\"Date\" />\r\n        <NumberField source=\"totalAmount\" label=\"Total\" />\r\n        <TextField source=\"userId\" label=\"Customer Id\" />\r\n      </SimpleShowLayout>\r\n    );\r\n};\r\n\r\nconst OrderFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"id\" alwaysOn />\r\n        <SelectInput source=\"status\" choices={statusOptions} />\r\n        <DateInput source=\"createdAt\" label=\"Date\" />\r\n        {/* <ReferenceInput label=\"Customer Id\" source=\"userId\" reference=\"users\" >\r\n            <TextInput optionText=\"id\" />\r\n        </ReferenceInput> */}\r\n        {/* <TextInput source=\"userId\" label=\"Customer Id\" /> */}\r\n    </Filter>\r\n);\r\n\r\nexport const OrderList = props => (\r\n    <List filters={<OrderFilter />} {...props}>\r\n        <Datagrid rowClick=\"show\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"status\" />\r\n            <DateField source=\"createdAt\" label=\"Date\" />\r\n            <NumberField source=\"totalAmount\" label=\"Total\" />\r\n            <ReferenceField label=\"Customer Id\" source=\"userId\" reference=\"users\">\r\n                <TextField source=\"id\" />\r\n            </ReferenceField>\r\n            \r\n            <EditButton />\r\n            <DeleteWithCustomConfirmButton\r\n                title={DeleteConfirmTitle}      // your custom title of delete confirm dialog\r\n                content={DeleteConfirmContent}  // your custom contents of delete confirm dialog\r\n                confirmColor='warning'          // color of delete button ('warning' or 'primary', default: 'warning')\r\n                ConfirmIcon={Delete}            // icon of delete button (default: 'Delete')\r\n                cancel='Cancel'                 // label of cancel button (default: 'Cancel')\r\n                CancelIcon={ErrorOutline}       // icon of cancel button (default: 'ErrorOutline')\r\n                undoable={true}                 // undoable (default: true)\r\n            />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const OrderShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <GridShowLayout className=\"gridShowLayout\">\r\n                <RaGrid container direction=\"row\">\r\n                    <RaGrid item xs>\r\n                        <h6>Order</h6>\r\n                        <TextField source=\"id\" label=\"Order Id\"/>\r\n                        <DateField source=\"createdAt\" label=\"Date\" />                            \r\n                        <ChipField source=\"status\" label=\"Status\" />\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <h6>Costumer</h6>\r\n                        <ReferenceField label=\"Customer Id\" source=\"userId\" reference=\"users\">\r\n                            <TextField source=\"id\" />\r\n                        </ReferenceField>\r\n                        <ReferenceField label=\"Customer Email\" source=\"userId\" reference=\"users\">\r\n                            <TextField source=\"email\" />\r\n                        </ReferenceField>\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <h6>Recipient</h6>\r\n                        <TextField source=\"recipient.city\" label=\"City\"/>\r\n                        <TextField source=\"recipient.street\" label=\"Street\"/>\r\n                        <TextField source=\"recipient.homeNumber\" label=\"Home Number\"/>\r\n                        <TextField source=\"recipient.apartmentNumber\" label=\"Apartment Number\"/>\r\n                    </RaGrid>\r\n                </RaGrid>\r\n            </GridShowLayout>\r\n\r\n            <h6 style={{marginTop: \"40px\"}}>Items</h6>\r\n            <BoxedShowLayout>\r\n                <RaBox flex=\"0 0 100%\" display=\"flex\" mt=\"20px\">\r\n                    <ArrayField source=\"products\" style={{width: \"100%\"}}>\r\n                        <Datagrid>\r\n                            <ReferenceField label=\"Product Id\" source=\"productId\" reference=\"products\">\r\n                                <TextField source=\"id\" />\r\n                            </ReferenceField>\r\n                            <ReferenceField label=\"Product Name\" source=\"productId\" reference=\"products\">\r\n                                <TextField source=\"name\" />\r\n                            </ReferenceField>\r\n                            <NumberField source=\"quantity\" />\r\n                            <ReferenceField label=\"Product Price\" source=\"productId\" reference=\"products\">\r\n                                <TextField source=\"price\" />\r\n                            </ReferenceField>\r\n                            <ReferenceField label=\"Discount\" source=\"productId\" reference=\"products\">\r\n                                <TextField source=\"discount\" />\r\n                            </ReferenceField>\r\n                            <ReferenceField label=\"Actual Price\" source=\"productId\" reference=\"products\">\r\n                                <TextField source=\"actual_price\" label=\"Actual Price\" />\r\n                            </ReferenceField>\r\n                            {/* <NumberField source=\"total\" /> */}\r\n                        </Datagrid>\r\n                    </ArrayField>\r\n                </RaBox>\r\n            </BoxedShowLayout>\r\n            \r\n            <h6 style={{marginTop: \"50px\"}}>Totals</h6>\r\n            <GridShowLayout className=\"gridShowLayout\">\r\n                <RaGrid container direction=\"row\">\r\n                    <RaGrid item xs>\r\n                        <NumberField source=\"subtotalAmount\" label=\"Subtotal\" />\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <NumberField source=\"taxesAmount\" label=\"Taxes\" />\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <NumberField source=\"couponDiscountAmount\" label=\"Cupon Discount\" />\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <NumberField source=\"deliveryAmount\" label=\"Delivery\" />\r\n                    </RaGrid>\r\n                    <RaGrid item xs>\r\n                        <TextField source=\"totalAmount\" label=\"Total\" />\r\n                    </RaGrid>\r\n                </RaGrid>\r\n            </GridShowLayout>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport const OrderEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <SelectInput source=\"status\" label=\"Status\" choices={statusOptions} />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\posts.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\favorites\\FavoriteProduct.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ProfileDetails.jsx",["265"],"import React, {useState, useRef, useEffect} from 'react'\r\nimport {Container, Card, Button, Alert, Form, Col, Row} from 'react-bootstrap'\r\nimport {useAuth} from '../../context/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ProfileDetails() {\r\n    const firstNameRef = useRef();\r\n    const lastNameRef = useRef();\r\n    const emailRef = useRef();\r\n    const phoneRef = useRef();\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const { currentUser, getAuthHeaders } = useAuth();\r\n    const [loading, setLoading]= useState(false);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            await axios.patch(`${process.env.REACT_APP_PROXY}/users/details/${currentUser._id}`, {\r\n                email: emailRef.current.value,\r\n                firstName: firstNameRef.current.value,\r\n                lastName: lastNameRef.current.value,\r\n                phone: phoneRef.current.value,\r\n            },\r\n            {headers: getAuthHeaders()})\r\n\r\n            setSuccess('Details updated successfully')\r\n        }\r\n        catch(err) {\r\n            console.log(err);\r\n            setError(err.message)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"d-flex justify-content-center align-items-center py-5\">\r\n                <div className=\"w-100\" style={{maxWidth: \"600px\"}}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title>Profile</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">The information can be edited</Card.Subtitle>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            {success && <Alert variant=\"success\">{success}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"firstName\">\r\n                                            <Form.Label>First name</Form.Label>\r\n                                            <Form.Control type=\"text\" ref={firstNameRef} defaultValue={currentUser ? currentUser.firstName : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group id=\"lastName\">\r\n                                            <Form.Label>Last name</Form.Label>\r\n                                            <Form.Control type=\"text\" ref={lastNameRef} defaultValue={currentUser ? currentUser.lastName : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"email\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser ? currentUser.email : ''} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group id=\"phone\">\r\n                                            <Form.Label>Phone</Form.Label>\r\n                                            <Form.Control type=\"tel\" ref={phoneRef} defaultValue={(currentUser && currentUser.phone) ? currentUser.phone : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"password\">\r\n                                            <Form.Label>Password</Form.Label>\r\n                                            <Form.Control type=\"password\" ref={passwordRef} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row> */}\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">SAVE CHANGES</Button>\r\n                            </Form>\r\n                            <div className=\"w-100 text-center mt-2\">\r\n                                <Link to=\"/change-password\">Change Password</Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\categories.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\OrderChart.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\dashboard.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\CardWithIcon.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\MonthlyRevenue.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\NbNewOrders.jsx",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\authentication\\ProfileOrders.jsx",["266","267","268","269"],"import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useStore } from '../../context/StoreContext';\r\nimport { Container, Table } from 'react-bootstrap'\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ProfileOrders() {\r\n    const { currentUser, getAuthHeaders } = useAuth();\r\n    const [myUser, setMyUser] = useState();\r\n    const [userOrders, setUserOrders] = useState([]);\r\n    const {orders} = useStore();\r\n\r\n    useEffect(() => {\r\n        if (currentUser){\r\n            axios.get(`${process.env.REACT_APP_PROXY}/orders/user/${currentUser._id}`, {}, {headers: getAuthHeaders()})\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setUserOrders(res.data);        \r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            {userOrders.length > 0 ? \r\n                <Container>\r\n                    <h3 className=\"mb-3\">Orders</h3>\r\n                    {userOrders.map(order => (\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"d-flex\">\r\n                                <p><b>Order Id: </b>{order._id}</p>\r\n                                <p className=\"ml-3\"><b>Status: </b> {order.status}</p>\r\n                                <p className=\"ml-3\"><b>Total: </b>${order.totalAmount}</p>\r\n                                <p></p>\r\n                            </div>\r\n\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th></th>\r\n                                    <th>Product Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {order.products.map((product, index) => (\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{(product.price * (1 - product.discount)).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                        <td>{product.quantity}</td>\r\n                                        <td>${(parseInt(product.quantity) * (product.price * (1 - product.discount))).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        \r\n                        \r\n                    ))}\r\n                </Container>\r\n            : ''}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\StoreContext.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\components\\admin\\coupons.js",[],"C:\\Users\\yaniv\\Desktop\\Experis\\Final-project-front-end\\client\\src\\context\\BlogContext.js",[],{"ruleId":"270","severity":1,"message":"271","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"270","severity":1,"message":"274","line":1,"column":28,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"275","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":20},{"ruleId":"270","severity":1,"message":"276","line":19,"column":8,"nodeType":"272","messageId":"273","endLine":19,"endColumn":25},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"270","severity":1,"message":"271","line":1,"column":35,"nodeType":"272","messageId":"273","endLine":1,"endColumn":44},{"ruleId":"270","severity":1,"message":"274","line":1,"column":28,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"271","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"270","severity":1,"message":"274","line":1,"column":28,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"281","line":10,"column":11,"nodeType":"272","messageId":"273","endLine":10,"endColumn":22},{"ruleId":"270","severity":1,"message":"282","line":11,"column":11,"nodeType":"272","messageId":"273","endLine":11,"endColumn":19},{"ruleId":"270","severity":1,"message":"283","line":14,"column":12,"nodeType":"272","messageId":"273","endLine":14,"endColumn":27},{"ruleId":"270","severity":1,"message":"284","line":14,"column":29,"nodeType":"272","messageId":"273","endLine":14,"endColumn":47},{"ruleId":"270","severity":1,"message":"285","line":15,"column":12,"nodeType":"272","messageId":"273","endLine":15,"endColumn":24},{"ruleId":"270","severity":1,"message":"286","line":15,"column":26,"nodeType":"272","messageId":"273","endLine":15,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":30,"column":8,"nodeType":"289","endLine":30,"endColumn":10,"suggestions":"290"},{"ruleId":"270","severity":1,"message":"291","line":54,"column":15,"nodeType":"272","messageId":"273","endLine":54,"endColumn":27},{"ruleId":"270","severity":1,"message":"292","line":103,"column":19,"nodeType":"272","messageId":"273","endLine":103,"endColumn":23},{"ruleId":"270","severity":1,"message":"293","line":240,"column":15,"nodeType":"272","messageId":"273","endLine":240,"endColumn":21},{"ruleId":"270","severity":1,"message":"274","line":1,"column":25,"nodeType":"272","messageId":"273","endLine":1,"endColumn":33},{"ruleId":"270","severity":1,"message":"271","line":1,"column":39,"nodeType":"272","messageId":"273","endLine":1,"endColumn":48},{"ruleId":"270","severity":1,"message":"294","line":9,"column":10,"nodeType":"272","messageId":"273","endLine":9,"endColumn":21},{"ruleId":"270","severity":1,"message":"295","line":9,"column":23,"nodeType":"272","messageId":"273","endLine":9,"endColumn":34},{"ruleId":"270","severity":1,"message":"296","line":9,"column":36,"nodeType":"272","messageId":"273","endLine":9,"endColumn":49},{"ruleId":"270","severity":1,"message":"297","line":10,"column":10,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"298","line":10,"column":20,"nodeType":"272","messageId":"273","endLine":10,"endColumn":28},{"ruleId":"270","severity":1,"message":"299","line":10,"column":30,"nodeType":"272","messageId":"273","endLine":10,"endColumn":40},{"ruleId":"270","severity":1,"message":"300","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":16},{"ruleId":"270","severity":1,"message":"301","line":6,"column":32,"nodeType":"272","messageId":"273","endLine":6,"endColumn":46},{"ruleId":"270","severity":1,"message":"302","line":6,"column":48,"nodeType":"272","messageId":"273","endLine":6,"endColumn":60},{"ruleId":"270","severity":1,"message":"303","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":13},{"ruleId":"270","severity":1,"message":"304","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":37},{"ruleId":"270","severity":1,"message":"305","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"306","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":20},{"ruleId":"270","severity":1,"message":"307","line":24,"column":5,"nodeType":"272","messageId":"273","endLine":24,"endColumn":19},{"ruleId":"270","severity":1,"message":"271","line":1,"column":34,"nodeType":"272","messageId":"273","endLine":1,"endColumn":43},{"ruleId":"270","severity":1,"message":"308","line":10,"column":12,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"309","line":10,"column":20,"nodeType":"272","messageId":"273","endLine":10,"endColumn":29},{"ruleId":"270","severity":1,"message":"310","line":12,"column":12,"nodeType":"272","messageId":"273","endLine":12,"endColumn":18},{"ruleId":"287","severity":1,"message":"311","line":22,"column":8,"nodeType":"289","endLine":22,"endColumn":21,"suggestions":"312"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'PrivateRoute' is defined but never used.","'PrivateRouteAdmin' is defined but never used.","no-native-reassign",["313"],"no-negated-in-lhs",["314"],"'fullNameRef' is assigned a value but never used.","'emailRef' is assigned a value but never used.","'messageFullName' is assigned a value but never used.","'setMessageFullName' is assigned a value but never used.","'messageEmail' is assigned a value but never used.","'setMessageEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.post'. Either include it or remove the dependency array.","ArrayExpression",["315"],"'emailPattern' is assigned a value but never used.","'resp' is assigned a value but never used.","'userID' is assigned a value but never used.","'ArticleList' is defined but never used.","'ArticleEdit' is defined but never used.","'ArticleCreate' is defined but never used.","'PostList' is defined but never used.","'PostEdit' is defined but never used.","'PostCreate' is defined but never used.","'PostIcon' is defined but never used.","'activateCoupon' is assigned a value but never used.","'cancelCoupon' is assigned a value but never used.","'axios' is defined but never used.","'DeleteWithCustomConfirmButton' is defined but never used.","'Delete' is defined but never used.","'ErrorOutline' is defined but never used.","'ReferenceInput' is defined but never used.","'myUser' is assigned a value but never used.","'setMyUser' is assigned a value but never used.","'orders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthHeaders'. Either include it or remove the dependency array.",["316"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [props.post]",{"range":"321","text":"322"},"Update the dependencies array to be: [currentUser, getAuthHeaders]",{"range":"323","text":"324"},[920,922],"[props.post]",[804,817],"[currentUser, getAuthHeaders]"]