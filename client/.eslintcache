[{"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\index.js":"1","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\reportWebVitals.js":"2","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\App.js":"3","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Contact.jsx":"4","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Footer.jsx":"5","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\PageNotFound.jsx":"6","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Header.jsx":"7","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\About.jsx":"8","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Home.jsx":"9","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\Payment.jsx":"10","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\ShoppingCart.jsx":"11","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\Blog.jsx":"12","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\ArticlePage.jsx":"13","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\ProductPage.jsx":"14","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\Store.jsx":"15","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\firebase.js":"16","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\context\\AuthContext.js":"17","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\WebsiteAdmin.js":"18","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\AlertBox.jsx":"19","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\CartProduct.jsx":"20","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\data\\images.js":"21","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderSummary.jsx":"22","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\Product.jsx":"23","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\SignUp.jsx":"24","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\ForgotPassword.jsx":"25","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\ChangePassword.jsx":"26","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\Login.jsx":"27","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRoute.jsx":"28","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\Profile.jsx":"29","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\Article.jsx":"30","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\PayPalBtn.jsx":"31","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\ArticleComment.jsx":"32","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\users.js":"33","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\posts.js":"34","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\products.js":"35"},{"size":506,"mtime":1614283490155,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":7230,"mtime":1615215948652,"results":"39","hashOfConfig":"37"},{"size":6007,"mtime":1615306384585,"results":"40","hashOfConfig":"37"},{"size":928,"mtime":1614151296136,"results":"41","hashOfConfig":"37"},{"size":298,"mtime":1614151396950,"results":"42","hashOfConfig":"37"},{"size":10017,"mtime":1615215969200,"results":"43","hashOfConfig":"37"},{"size":3277,"mtime":1615305843598,"results":"44","hashOfConfig":"37"},{"size":5705,"mtime":1615306671832,"results":"45","hashOfConfig":"37"},{"size":20481,"mtime":1615305657469,"results":"46","hashOfConfig":"37"},{"size":1651,"mtime":1615300294029,"results":"47","hashOfConfig":"37"},{"size":1455,"mtime":1615125671694,"results":"48","hashOfConfig":"37"},{"size":6541,"mtime":1615216473231,"results":"49","hashOfConfig":"37"},{"size":5764,"mtime":1615305826471,"results":"50","hashOfConfig":"37"},{"size":11525,"mtime":1615326696442,"results":"51","hashOfConfig":"37"},{"size":861,"mtime":1614974588146,"results":"52","hashOfConfig":"37"},{"size":2580,"mtime":1615362540426,"results":"53","hashOfConfig":"37"},{"size":1000,"mtime":1615062795375,"results":"54","hashOfConfig":"37"},{"size":434,"mtime":1614454391794,"results":"55","hashOfConfig":"37"},{"size":2753,"mtime":1615305813554,"results":"56","hashOfConfig":"37"},{"size":1991,"mtime":1614629716976,"results":"57","hashOfConfig":"37"},{"size":4103,"mtime":1615305801696,"results":"58","hashOfConfig":"37"},{"size":1420,"mtime":1615316970049,"results":"59","hashOfConfig":"37"},{"size":4582,"mtime":1615049493342,"results":"60","hashOfConfig":"37"},{"size":2450,"mtime":1614288576753,"results":"61","hashOfConfig":"37"},{"size":2807,"mtime":1615216034213,"results":"62","hashOfConfig":"37"},{"size":3162,"mtime":1615362306515,"results":"63","hashOfConfig":"37"},{"size":475,"mtime":1615362314334,"results":"64","hashOfConfig":"37"},{"size":7408,"mtime":1615123475983,"results":"65","hashOfConfig":"37"},{"size":1034,"mtime":1614467747717,"results":"66","hashOfConfig":"37"},{"size":605,"mtime":1614468362756,"results":"67","hashOfConfig":"37"},{"size":361,"mtime":1614467703399,"results":"68","hashOfConfig":"37"},{"size":2895,"mtime":1615049056748,"results":"69","hashOfConfig":"37"},{"size":1901,"mtime":1614707846784,"results":"70","hashOfConfig":"37"},{"size":3724,"mtime":1615062905040,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1oimovx",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\index.js",[],["148","149"],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\reportWebVitals.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\App.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Contact.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Footer.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\PageNotFound.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Header.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\About.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\Home.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\Payment.jsx",["150","151"],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\ShoppingCart.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\Blog.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\ArticlePage.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\ProductPage.jsx",["152"],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\Store.jsx",["153","154","155","156"],"import React, { useRef, useState, useEffect, useCallback, dispatch} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Product from './Product.jsx';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Store(props) {\r\n    const [products, setProducts] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [valuePriceSelect, setValuePriceSelect] = useState(0);\r\n    const [valueSortSelect, setValueSortSelect] = useState('');\r\n    \r\n    const priceRangeRef = useRef();\r\n    const onSaleRef = useRef();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        \r\n        axios.get('http://localhost:5000/products')\r\n        .then( response => {\r\n            const categories = [];\r\n            response.data.forEach(item => {\r\n                const category = categories.filter(category => {return category.name === item.category});\r\n                if (category.length === 0) {\r\n                    categories.push({name: item.category, isChecked: false, subCategory: [{name: item.subcategory, isChecked: false}]});\r\n                }\r\n                else {\r\n                    const subcategory = category[0].subCategory.filter(subCategory => {return subCategory.name === item.subcategory})\r\n                    if (subcategory.length === 0) {\r\n                        category[0].subCategory.push({name: item.subcategory, isChecked: false});\r\n                    }\r\n                }\r\n            });\r\n\r\n            setProducts(response.data);\r\n            setCategory(categories);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleStoreCategories();\r\n    }, [props.location.pathname])\r\n\r\n    useEffect(() => {\r\n        handleSearch();\r\n    }, [props.location.search])\r\n\r\n    const setPriceValue = (event) => {\r\n        setValuePriceSelect(event.target.value);\r\n    }\r\n\r\n    const filterCategory = (event) => {\r\n        category.forEach(categoryItem => {\r\n            if (categoryItem.name === event.target.value)\r\n                categoryItem.isChecked = event.target.checked;\r\n        })\r\n    }\r\n\r\n    const filterSubcategory = (event) => {\r\n        category.forEach(categoryItem => {\r\n            categoryItem.subCategory.forEach(subCategoryItem => {\r\n                if (subCategoryItem.name === event.target.value)\r\n                    subCategoryItem.isChecked = event.target.checked;\r\n            })\r\n        })\r\n    }\r\n\r\n    const displayFilteredItems = () => {\r\n        let checkedCategories = [];\r\n        let checkedSubCategories = [];\r\n        category.forEach(categoryItem => {\r\n            if (categoryItem.isChecked)\r\n                checkedCategories.push(categoryItem.name);\r\n\r\n            categoryItem.subCategory.forEach(subCategoryItem => {\r\n                if (subCategoryItem.isChecked)\r\n                    checkedSubCategories.push(subCategoryItem.name);\r\n            })\r\n        })\r\n\r\n        const storeItems = [...products]; \r\n        storeItems.forEach(element => {\r\n            if (checkedCategories.length === 0 && checkedSubCategories.length === 0)\r\n                element.display = true;\r\n            else if (checkedCategories.length === 0 && checkedSubCategories.length > 0) {\r\n                element.display = checkedSubCategories.includes(element.subcategory);\r\n            }\r\n            else if (checkedCategories.length > 0 && checkedSubCategories.length === 0) {\r\n                element.display = checkedCategories.includes(element.category);\r\n            }\r\n            else {\r\n                element.display = checkedCategories.includes(element.category) && checkedSubCategories.includes(element.subcategory);\r\n            }\r\n        });\r\n        \r\n        if (onSaleRef.current.checked){\r\n            storeItems.forEach(element => {\r\n                element.display &= element.discount > 0;\r\n            })\r\n        }\r\n        \r\n        if (valuePriceSelect > 0) {\r\n            storeItems.forEach(element => {\r\n                element.display &= element.price * (1 - element.discount) <= valuePriceSelect;\r\n            });\r\n        }\r\n\r\n        setProducts(storeItems);\r\n    }\r\n\r\n    const resetFilter = () => {\r\n        // setting all categories and sub categories elements checked = false\r\n        const elements = document.getElementsByClassName(\"form-check-input\");\r\n        Array.from(elements).forEach((element) => {\r\n            element.checked = false;\r\n        });\r\n\r\n        onSaleRef.current.isChecked = false;\r\n\r\n        // setting all categories and sub categories state checked = false\r\n        category.forEach(categoryItem => {\r\n            categoryItem.isChecked = false;\r\n\r\n            categoryItem.subCategory.forEach(subCategoryItem => {\r\n                subCategoryItem.isChecked = false;\r\n            })\r\n        })\r\n\r\n        // reset price scroller element to be 0\r\n        priceRangeRef.current.value = 0;\r\n\r\n        // display all items (no item it filtered)\r\n        const displayProducts = products;\r\n        displayProducts.forEach(element => {\r\n            element.display = true;\r\n        })\r\n\r\n        setProducts(displayProducts);\r\n        setCategory(category) ;\r\n        setValuePriceSelect(0);  \r\n    }\r\n\r\n    const changeSort = (event) => {\r\n        setValueSortSelect(event.target.value);\r\n        const sortedStore = products;\r\n\r\n        switch (event.target.value){\r\n            case 'low': {\r\n                sortedStore.sort(function (a, b) {\r\n                    return a.price * (1 - a.discount) - b.price * (1 - b.discount);\r\n                });\r\n                break;\r\n            }\r\n            case 'high': {\r\n                sortedStore.sort(function (a, b) {\r\n                    return b.price * (1 - b.discount) - a.price * (1 - a.discount);\r\n                });\r\n                break;\r\n            }\r\n            default: {\r\n                sortedStore.sort(function (a, b) {\r\n                    return a.id - b.id;\r\n                  });\r\n                break;\r\n            }\r\n        }\r\n\r\n        setProducts(sortedStore);\r\n    }\r\n\r\n    const getAllSubCategories = () => {\r\n        let subCategories = [];\r\n        category.forEach(categoryItem => {\r\n            categoryItem.subCategory.forEach(subCategoryItem => {\r\n                subCategories.push(subCategoryItem.name);\r\n            })\r\n        })\r\n        return subCategories;\r\n    }\r\n\r\n    const getAllCategoriesUrl = () => {\r\n        let categories = [];\r\n        category.forEach(categoryItem => {\r\n            categories.push(categoryItem.name.replace(/\\s/g, ''));\r\n        });\r\n        return categories;\r\n    }\r\n\r\n    function handleStoreCategories() {    \r\n        // set sale reference if the location.onSale exists   \r\n        onSaleRef.current.checked |= props.location.onSale != null;\r\n\r\n        const checkedCategory = [...category];\r\n        const elements = document.getElementsByClassName(\"form-check-input\");\r\n        // setting the category (if exists) to be true\r\n        const transformedPath = props.location.pathname.split('/');\r\n        if (transformedPath.length > 2 && getAllCategoriesUrl().includes(transformedPath[2])) {\r\n            Array.from(elements).forEach(element => {   \r\n                if (element.value.replace(/\\s/g, '') === transformedPath[2]) {\r\n                    element.checked = true;\r\n                    checkedCategory.forEach(categoryItem => {\r\n                        categoryItem.isChecked = categoryItem.name === element.value;\r\n                    })\r\n                }\r\n                else {\r\n                    element.checked = false;\r\n                }\r\n            });\r\n            setCategory(checkedCategory);\r\n        }\r\n        else {\r\n            resetFilter();\r\n        }\r\n\r\n        displayFilteredItems();\r\n    }\r\n\r\n    function handleSearch() {\r\n        const urlParams = new URLSearchParams(props.location.search);\r\n        if (urlParams.get('q')) {\r\n            const searchProducts = [...products]\r\n            searchProducts.forEach(element => {\r\n                element.display = element.name.toLowerCase().includes(urlParams.get('q').toLowerCase());\r\n            });\r\n            \r\n            setProducts(searchProducts);\r\n        }\r\n    }\r\n\r\n    const getProductsElements = () => {\r\n        return products.filter(element => element.display).map(productElement =>\r\n            <Product key={productElement.id} productElement={productElement}/>)\r\n    }\r\n\r\n    return (\r\n        <div className= \"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-2 pr-5\">\r\n                    <h5>Sort</h5>\r\n                    <div className=\"form-group mb-4\">\r\n                        <select className=\"form-control form-control-sm\" value={valueSortSelect} onChange={changeSort}>\r\n                            <option value=\"\"> </option>\r\n                            <option value=\"low\">Price: low to high</option>\r\n                            <option value=\"high\">Price: high to low</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <h5>Filter</h5>\r\n\r\n                    <h6>Category</h6>\r\n                    {category.map((element, index) => (\r\n                        <div className= \"form-check\" key={index}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" value={element.name} onChange={filterCategory}></input>\r\n                            <label className=\"form-check-label\" htmlFor={Object.keys(element.name)}>\r\n                                {element.name}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n\r\n                    <br></br>\r\n                    <h6>Sub Category</h6>    \r\n                    {getAllSubCategories().map((element, index) => (\r\n                        <div className=\"form-check\" key={index}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" value={element} onChange={filterSubcategory}></input>\r\n                            <label className=\"form-check-label\" htmlFor={Object.keys(element)}>\r\n                                {element}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n\r\n                    <br></br>\r\n                    <div className=\"form-check\">\r\n                        <input type=\"checkbox\" className=\"form-check-input\" id=\"onSaleCheck\" ref={onSaleRef}></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"onSaleCheck\"><h6>On Sale</h6></label>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <h6>Price</h6> \r\n                    <label htmlFor=\"priceRange\" className=\"form-label\"></label>\r\n                    <input type=\"range\" className=\"form-range\" id=\"priceRange\" min=\"0\" max=\"1000\" step=\"10\" onInput={setPriceValue} ref={priceRangeRef}></input>\r\n                    <output> {valuePriceSelect}</output>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <Link to=\"/store\" className=\"btn btn-outline-primary btn-sm\" type=\"button\" onClick={displayFilteredItems}>Apply</Link>\r\n                        <Link to=\"/store\" className=\"btn btn-outline-primary btn-sm mx-2\" type=\"button\" onClick={resetFilter}>Reset</Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col-10 justify-content-center\">\r\n                    <div className=\"row\">\r\n                        {getProductsElements()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\firebase.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\WebsiteAdmin.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\AlertBox.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\CartProduct.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\data\\images.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\OrderSummary.jsx",["157","158","159"],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\store\\Product.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\SignUp.jsx",["160","161"],"import React, { useRef, useState } from 'react'\r\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {firebasedb} from '../../firebase';\r\nimport {auth} from '../../firebase';\r\n\r\nexport default function SignUp() {\r\n    const firstNameRef = useRef();\r\n    const lastNameRef = useRef();\r\n    const emailRef = useRef();\r\n    const phoneRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup, currentUser } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading]= useState(false);\r\n    const history = useHistory();\r\n  \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            const a = await auth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n            console.log(a)\r\n            console.log(firstNameRef.current.value)\r\n            await auth.onAuthStateChanged((user)  => {\r\n                firebasedb.ref('users').child(user.uid).set(\r\n                    {\r\n                        id: user.uid,\r\n                        email: user.email,\r\n                        role: \"client\",\r\n                        active: true\r\n                    }\r\n                )\r\n            })\r\n            const updates = {};\r\n            updates['/users/' + a.user.uid + '/firstName'] = firstNameRef.current.value;\r\n            updates['/users/' + a.user.uid + '/lastName'] = lastNameRef.current.value;\r\n            updates['/users/' + a.user.uid + '/phone'] = phoneRef.current.value;\r\n            firebasedb.ref().update(updates);\r\n\r\n            history.push(\"/\")\r\n        } \r\n        catch(err) {\r\n            console.log(err);\r\n            setError('Failed to create an account')\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"d-flex justify-content-center align-items-center\" style={{minHeight: \"80vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card className=\"px-3\">\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"firstName\">\r\n                                    <Form.Control type=\"text\" placeholder=\"First name\" ref={firstNameRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"lastName\">\r\n                                    <Form.Control type=\"text\" placeholder=\"Last name\" ref={lastNameRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Control type=\"email\" placeholder=\"Email\" ref={emailRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"phone\">\r\n                                    <Form.Control type=\"tel\" placeholder=\"Phone\" ref={phoneRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" ref={passwordRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Control type=\"password\" placeholder=\"Password Confirmation\" ref={passwordConfirmRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Sign Up</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Already have an account? <Link to=\"/login\">Log In</Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\ForgotPassword.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\ChangePassword.jsx",["162"],"import React, { useRef, useState } from 'react'\r\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport {useAuth} from '../../context/AuthContext';\r\n\r\nexport default function ChangePassword() {\r\n    const currentPasswordRef = useRef();\r\n    const newPasswordRef = useRef();\r\n    const newPasswordConfirmRef = useRef();\r\n    const [loading, setLoading]= useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const { currentUser, updateMyPassword } = useAuth();\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(false)\r\n\r\n        if (newPasswordRef.current.value !== newPasswordConfirmRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        updateMyPassword(currentPasswordRef.current.value, newPasswordRef.current.value)\r\n            .then(() => {\r\n                setSuccess('Password changed successfully')\r\n            })\r\n            .catch(() => {\r\n                setError('Failed to change password')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"d-flex justify-content-center align-items-center\" style={{minHeight: \"80vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"600px\"}}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title>Change Password</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            {success && <Alert variant=\"success\">{success}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"currentPassword\">\r\n                                    <Form.Control type=\"password\" ref={currentPasswordRef} placeholder=\"Current password\" ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"newPassword\">\r\n                                    <Form.Control type=\"password\" ref={newPasswordRef} placeholder=\"New password\" ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"newPasswordConfirm\">\r\n                                    <Form.Control type=\"password\" ref={newPasswordConfirmRef} placeholder=\"Password confirmation\" ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">CHANGE PASSWORD</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>  \r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\Login.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\PrivateRoute.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\authentication\\Profile.jsx",["163"],"import React, {useState, useRef, useEffect} from 'react'\r\nimport {Container, Card, Button, Alert, Form, Col, Row} from 'react-bootstrap'\r\nimport {useAuth} from '../../context/AuthContext';\r\nimport {firebasedb} from '../../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Profile() {\r\n    const firstNameRef = useRef();\r\n    const lastNameRef = useRef();\r\n    const emailRef = useRef();\r\n    const phoneRef = useRef();\r\n    const passwordRef = useRef();\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const { currentUser, updateMyEmail, updateDetails } = useAuth();\r\n    const [loading, setLoading]= useState(false);\r\n    const [myUser, setMyUser] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser){\r\n            const fetchData = async () => {\r\n                const snapshot = await firebasedb.ref('users').child(currentUser.uid).get()\r\n                setMyUser(snapshot.val());\r\n            };\r\n            \r\n            fetchData();\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            await updateMyEmail(passwordRef.current.value, emailRef.current.value);\r\n        \r\n            const updates = {};\r\n            if(firstNameRef.current.value)\r\n                updates['/users/' + currentUser.uid + '/firstName'] = firstNameRef.current.value;\r\n            if(lastNameRef.current.value)\r\n                updates['/users/' + currentUser.uid + '/lastName'] = lastNameRef.current.value;\r\n            if(phoneRef.current.value)\r\n                updates['/users/' + currentUser.uid + '/phone'] = phoneRef.current.value;\r\n            if(emailRef.current.value)\r\n                updates['/users/' + currentUser.uid + '/email'] = emailRef.current.value;\r\n            updateDetails(passwordRef.current.value, updates);\r\n\r\n            setSuccess('Details updated successfully')\r\n        }\r\n        catch(err) {\r\n            console.log(err);\r\n            setError(err.message)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"d-flex justify-content-center align-items-center\" style={{minHeight: \"80vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"600px\"}}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title>Profile</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">The information can be edited</Card.Subtitle>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            {success && <Alert variant=\"success\">{success}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"firstName\">\r\n                                            <Form.Label>First name</Form.Label>\r\n                                            <Form.Control type=\"text\" ref={firstNameRef} defaultValue={myUser ? myUser.firstName : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group id=\"lastName\">\r\n                                            <Form.Label>Last name</Form.Label>\r\n                                            <Form.Control type=\"text\" ref={lastNameRef} defaultValue={myUser ? myUser.lastName : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"email\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group id=\"phone\">\r\n                                            <Form.Label>Phone</Form.Label>\r\n                                            <Form.Control type=\"tel\" ref={phoneRef} defaultValue={myUser ? myUser.phone : ''}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group id=\"password\">\r\n                                            <Form.Label>Password</Form.Label>\r\n                                            <Form.Control type=\"password\" ref={passwordRef} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">SAVE CHANGES</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Link to=\"/change-password\">Change Password</Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n{/* <form>\r\n    <label htmlFor=\"firstName\">First name </label>\r\n    <input type=\"text\" className=\"form-control\" ref={this.firstNameRef} required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messageFirstName}\r\n    </div>\r\n\r\n    <label htmlFor=\"lastName\">Last name </label>\r\n    <input type=\"text\" className=\"form-control\" ref={this.lastNameRef} required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messageLastName}\r\n    </div>\r\n\r\n    <label htmlFor=\"email\">Email </label>\r\n    <input type=\"mail\" className=\"form-control\" ref={this.emailRef} required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messageEmail}\r\n    </div>\r\n\r\n    <label htmlFor=\"phone\">Phone </label>\r\n    <input type=\"tel\" className=\"form-control\" ref={this.phoneRef} placeholder=\"050-123-1234\" required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messagePhone}\r\n    </div>\r\n\r\n    <label htmlFor=\"country\">Country </label>\r\n    <input type=\"text\" className=\"form-control\" ref={this.countryRef} required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messageCountry}\r\n    </div>\r\n\r\n    <label htmlFor=\"state\">State </label>\r\n    <input type=\"text\" className=\"form-control\" ref={this.stateRef} required></input>\r\n    <div className=\"invalidMassege text-danger\">\r\n        {this.state.messageState}\r\n    </div>\r\n\r\n    <div className=\"d-flex justify-content-center mt-3\">\r\n    <button type=\"submit\" className=\"btn btn-primary align-middle\" onClick={this.submitContact}>Submit</button>\r\n    </div>\r\n</form> */}\r\n","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\Article.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\cart-and-payment\\PayPalBtn.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\blog\\ArticleComment.jsx",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\users.js",["164"],"import * as React from \"react\";\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    BooleanField,\r\n    EmailField,\r\n    EditButton,\r\n    Edit,\r\n    Create,\r\n    SimpleForm,\r\n    SelectInput,\r\n    TextInput,\r\n    BooleanInput,\r\n    Filter\r\n} from 'react-admin';\r\n\r\nexport const UserList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <BooleanField source=\"active\" />\r\n            <TextField source=\"role\" />\r\n            <TextField source=\"firstName\" label=\"First Name\" />\r\n            <TextField source=\"lastName\" label=\"Last Name\" />\r\n            <EmailField source=\"email\" />\r\n            <TextField source=\"phone\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput disabled source=\"email\" />\r\n            <SelectInput source=\"role\" choices={[\r\n                { id: 'admin', name: 'admin' },\r\n                { id: 'site-owner', name: 'site-owner' },\r\n                { id: 'client', name: 'client' }\r\n            ]} />\r\n            <TextInput source=\"firstName\" label=\"First Name\" />\r\n            <TextInput source=\"lastName\" label=\"Last Name\" />\r\n            <TextInput source=\"phone\" />\r\n            <BooleanInput source=\"active\" />\r\n            {/* <TextInput source=\"address.street\" label=\"Street\" />\r\n            <NumberInput source=\"address.houseNumber\" label=\"House Number\" />\r\n            <NumberInput source=\"address.apartmentNumber\" label=\"Apartment Number\" />\r\n            <TextInput source=\"address.city\" label=\"City\" />\r\n            <TextInput source=\"address.country\" label=\"Country\" />\r\n            <NumberInput source=\"address.zipcode\" label=\"Zipcode\" /> */}\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm>        \r\n            <SelectInput source=\"role\" choices={[\r\n                { id: 'admin', name: 'admin' },\r\n                { id: 'site-owner', name: 'site-owner' },\r\n                { id: 'client', name: 'client' }\r\n            ]} />\r\n            <TextInput source=\"email\" />\r\n            <TextInput source=\"firstName\" label=\"First Name\" />\r\n            <TextInput source=\"lastName\" label=\"Last Name\" />\r\n            <TextInput source=\"phone\" />\r\n            <BooleanInput source=\"active\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nconst UserFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <BooleanInput source=\"active\" />\r\n        <SelectInput source=\"role\" choices={[\r\n                { id: 'admin', name: 'admin' },\r\n                { id: 'site-owner', name: 'site-owner' },\r\n                { id: 'client', name: 'client' }\r\n        ]} />\r\n    </Filter>\r\n);","C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\posts.js",[],"C:\\Users\\yaniv\\Desktop\\Final-project-front-end\\client\\src\\components\\admin\\products.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":9},{"ruleId":"169","severity":1,"message":"173","line":15,"column":11,"nodeType":"171","messageId":"172","endLine":15,"endColumn":29},{"ruleId":"169","severity":1,"message":"174","line":66,"column":11,"nodeType":"171","messageId":"172","endLine":66,"endColumn":23},{"ruleId":"169","severity":1,"message":"175","line":1,"column":46,"nodeType":"171","messageId":"172","endLine":1,"endColumn":57},{"ruleId":"169","severity":1,"message":"176","line":1,"column":59,"nodeType":"171","messageId":"172","endLine":1,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":42,"column":8,"nodeType":"179","endLine":42,"endColumn":33,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":46,"column":8,"nodeType":"179","endLine":46,"endColumn":31,"suggestions":"182"},{"ruleId":"169","severity":1,"message":"183","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":44,"column":21,"nodeType":"186","messageId":"187","endLine":44,"endColumn":43},{"ruleId":"184","severity":1,"message":"185","line":45,"column":21,"nodeType":"186","messageId":"187","endLine":45,"endColumn":44},{"ruleId":"169","severity":1,"message":"188","line":15,"column":13,"nodeType":"171","messageId":"172","endLine":15,"endColumn":19},{"ruleId":"169","severity":1,"message":"189","line":15,"column":21,"nodeType":"171","messageId":"172","endLine":15,"endColumn":32},{"ruleId":"169","severity":1,"message":"189","line":12,"column":13,"nodeType":"171","messageId":"172","endLine":12,"endColumn":24},{"ruleId":"184","severity":1,"message":"190","line":125,"column":1,"nodeType":"186","messageId":"191","endLine":165,"endColumn":12},{"ruleId":"169","severity":1,"message":"192","line":74,"column":7,"nodeType":"171","messageId":"172","endLine":74,"endColumn":17},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'costumerDetailsRef' is assigned a value but never used.","'displayPrice' is assigned a value but never used.","'useCallback' is defined but never used.","'dispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleStoreCategories'. Either include it or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["196"],"'axios' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'signup' is assigned a value but never used.","'currentUser' is assigned a value but never used.","Block is redundant.","redundantBlock","'UserFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [handleStoreCategories, props.location.pathname]",{"range":"201","text":"202"},"Update the dependencies array to be: [handleSearch, props.location.search]",{"range":"203","text":"204"},[1624,1649],"[handleStoreCategories, props.location.pathname]",[1709,1732],"[handleSearch, props.location.search]"]