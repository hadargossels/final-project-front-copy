[{"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\index.js":"1","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\App.js":"2","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Footer.js":"3","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Header.js":"4","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\routing\\Routes.js":"5","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogElement.js":"6","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Price.js":"7","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Gallery.js":"8","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\AlsoViewed.js":"9","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Stock.js":"10","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Platforms.js":"11","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Rating.js":"12","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Categories.js":"13","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\functions\\compareFuncs.js":"14","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogPrice.js":"15","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CartButton\\CartButton.js":"16","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Cart\\EmptyCart.js":"17","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Cart\\CartTable.js":"18","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\ScrollToTop\\ScrollToTop.js":"19","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\contexts\\AuthContext.js":"20","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\firebase.js":"21","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\routing\\PrivateRoute.js":"22","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\actions\\index.jsx":"23","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\constants\\action-types.jsx":"24","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\store\\index.jsx":"25","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\index.jsx":"26","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\discountReducer.jsx":"27","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\productReducer.jsx":"28","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Home\\Home.js":"29","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\SignUp.js":"30","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\Login.js":"31","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\ForgotPassword.js":"32","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\NotFound.js":"33","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\AboutUs.js":"34","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Account.js":"35","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Profile.js":"36","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Blog\\BlogPost.js":"37","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Blog\\Blog.js":"38","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Blog\\BlogElement.js":"39","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Cart.js":"40","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Catalog\\CatalogPage.js":"41","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogContainer.js":"42","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\OrderConfirmed.js":"43","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Checkout\\Checkout.js":"44","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Checkout\\Payment.js":"45","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Paypal\\PayPalBtn.js":"46","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Contact\\ContactUs.js":"47","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Contact\\MsgSent.js":"48","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Map\\Map.js":"49","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Product\\ProductPage.js":"50","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\AdminPage.js":"51","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\Dashboard.js":"52","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\createAdminStore.js":"53","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\userReducer.jsx":"54","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Spinner\\Spinner.js":"55","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\invoiceReducer.jsx":"56","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Invoices.js":"57","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\addOns.js":"58","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\posts.js":"59","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\roles.js":"60","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\coupons.js":"61","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\products.js":"62","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\users.js":"63"},{"size":285,"mtime":1614703208857,"results":"64","hashOfConfig":"65"},{"size":614,"mtime":1614713412321,"results":"66","hashOfConfig":"65"},{"size":1808,"mtime":1613909612836,"results":"67","hashOfConfig":"65"},{"size":4842,"mtime":1614770419113,"results":"68","hashOfConfig":"65"},{"size":2787,"mtime":1615100033821,"results":"69","hashOfConfig":"65"},{"size":3075,"mtime":1617275008606,"results":"70","hashOfConfig":"65"},{"size":1028,"mtime":1613909415810,"results":"71","hashOfConfig":"65"},{"size":1003,"mtime":1613907455507,"results":"72","hashOfConfig":"65"},{"size":806,"mtime":1613909394745,"results":"73","hashOfConfig":"65"},{"size":268,"mtime":1613941414307,"results":"74","hashOfConfig":"65"},{"size":640,"mtime":1614797920567,"results":"75","hashOfConfig":"65"},{"size":425,"mtime":1612377825664,"results":"76","hashOfConfig":"65"},{"size":303,"mtime":1614797845565,"results":"77","hashOfConfig":"65"},{"size":972,"mtime":1613984863955,"results":"78","hashOfConfig":"65"},{"size":470,"mtime":1612475873171,"results":"79","hashOfConfig":"65"},{"size":1859,"mtime":1614784822104,"results":"80","hashOfConfig":"65"},{"size":590,"mtime":1614446798721,"results":"81","hashOfConfig":"65"},{"size":6808,"mtime":1617180687932,"results":"82","hashOfConfig":"65"},{"size":375,"mtime":1613330140853,"results":"83","hashOfConfig":"65"},{"size":1470,"mtime":1614715458021,"results":"84","hashOfConfig":"65"},{"size":728,"mtime":1614719800273,"results":"85","hashOfConfig":"65"},{"size":446,"mtime":1614612335083,"results":"86","hashOfConfig":"65"},{"size":1796,"mtime":1617274546483,"results":"87","hashOfConfig":"65"},{"size":604,"mtime":1615056189561,"results":"88","hashOfConfig":"65"},{"size":293,"mtime":1614433641313,"results":"89","hashOfConfig":"65"},{"size":378,"mtime":1615050888136,"results":"90","hashOfConfig":"65"},{"size":831,"mtime":1617180491263,"results":"91","hashOfConfig":"65"},{"size":3293,"mtime":1614809957278,"results":"92","hashOfConfig":"65"},{"size":4794,"mtime":1617180232076,"results":"93","hashOfConfig":"65"},{"size":3877,"mtime":1614772908842,"results":"94","hashOfConfig":"65"},{"size":3360,"mtime":1614772329776,"results":"95","hashOfConfig":"65"},{"size":2246,"mtime":1614770294828,"results":"96","hashOfConfig":"65"},{"size":695,"mtime":1614612628528,"results":"97","hashOfConfig":"65"},{"size":1469,"mtime":1614612668013,"results":"98","hashOfConfig":"65"},{"size":1907,"mtime":1615099882178,"results":"99","hashOfConfig":"65"},{"size":6057,"mtime":1614775379455,"results":"100","hashOfConfig":"65"},{"size":5233,"mtime":1617304389956,"results":"101","hashOfConfig":"65"},{"size":1110,"mtime":1617296839627,"results":"102","hashOfConfig":"65"},{"size":1708,"mtime":1617297448879,"results":"103","hashOfConfig":"65"},{"size":532,"mtime":1614613410525,"results":"104","hashOfConfig":"65"},{"size":1881,"mtime":1614785519798,"results":"105","hashOfConfig":"65"},{"size":4903,"mtime":1617274868521,"results":"106","hashOfConfig":"65"},{"size":2116,"mtime":1615066361782,"results":"107","hashOfConfig":"65"},{"size":24092,"mtime":1615055937676,"results":"108","hashOfConfig":"65"},{"size":986,"mtime":1615062354463,"results":"109","hashOfConfig":"65"},{"size":688,"mtime":1614613971930,"results":"110","hashOfConfig":"65"},{"size":5313,"mtime":1614614177946,"results":"111","hashOfConfig":"65"},{"size":434,"mtime":1614614093618,"results":"112","hashOfConfig":"65"},{"size":2628,"mtime":1614614159385,"results":"113","hashOfConfig":"65"},{"size":3099,"mtime":1617274669820,"results":"114","hashOfConfig":"65"},{"size":2534,"mtime":1617286192146,"results":"115","hashOfConfig":"65"},{"size":312,"mtime":1614770979841,"results":"116","hashOfConfig":"65"},{"size":1948,"mtime":1614770721932,"results":"117","hashOfConfig":"65"},{"size":497,"mtime":1614714268373,"results":"118","hashOfConfig":"65"},{"size":306,"mtime":1614754610185,"results":"119","hashOfConfig":"65"},{"size":730,"mtime":1615062217590,"results":"120","hashOfConfig":"65"},{"size":1269,"mtime":1617274468336,"results":"121","hashOfConfig":"65"},{"size":938,"mtime":1617285184170,"results":"122","hashOfConfig":"65"},{"size":3849,"mtime":1617285241111,"results":"123","hashOfConfig":"65"},{"size":1078,"mtime":1617285725137,"results":"124","hashOfConfig":"65"},{"size":1210,"mtime":1617281323957,"results":"125","hashOfConfig":"65"},{"size":5249,"mtime":1617285634304,"results":"126","hashOfConfig":"65"},{"size":5368,"mtime":1617290493194,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"149t31s",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\index.js",[],["257","258"],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\App.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Footer.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Header.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\routing\\Routes.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogElement.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Price.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Gallery.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\AlsoViewed.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Stock.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Platforms.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Rating.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Product\\Categories.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\functions\\compareFuncs.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogPrice.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CartButton\\CartButton.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Cart\\EmptyCart.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Cart\\CartTable.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\ScrollToTop\\ScrollToTop.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\firebase.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\actions\\index.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\constants\\action-types.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\store\\index.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\index.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\discountReducer.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\productReducer.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\SignUp.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\Login.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\auth\\ForgotPassword.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\NotFound.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\AboutUs.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Account.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Profile.js",["259"],"import React, {useRef, useState, useEffect} from \"react\";\r\nimport {Alert, Container, Card, Button } from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport {db} from '../../firebase'\r\n\r\nfunction Profile(props) {\r\n  const { currentUser , updateEmail } = useAuth();\r\n\r\n  const emailRef = useRef()\r\n  const fnameRef= useRef()\r\n  const lnameRef = useRef()\r\n  const phoneRef = useRef()\r\n  const streetRef = useRef()\r\n  const aptRef = useRef()\r\n  const cityRef = useRef()\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [myData, setMyData] = useState(\"\")\r\n  const [myKey, setMyKey] = useState(\"\")\r\n\r\n  useEffect(()=> {\r\n    const updateDatabase = ()=>{\r\n      db.on(\"value\", (snapshot) =>{\r\n          let myData = \"\"\r\n          myData = (snapshot.val().users);\r\n          for (const [key,value] of Object.entries(myData)){\r\n            if (value.id === currentUser.uid){\r\n              setMyData(value)\r\n              setMyKey(key)\r\n            }\r\n          }\r\n      })\r\n  }\r\n\r\n    updateDatabase()\r\n  \r\n  },[])\r\n\r\n  \r\n\r\n  function handleSubmit(){\r\n      const promises = []\r\n      setLoading(true)\r\n      setError(\"\")\r\n      if (emailRef.current.value !== currentUser.email){\r\n          promises.push(updateEmail(emailRef.current.value))\r\n      }\r\n      promises.push(db.child(\"users\").child(myKey).update(\r\n        {\r\n          \"email\": emailRef.current.value || currentUser.email,\r\n          \"lastname\": lnameRef.current.value || myData.lastname,\r\n          \"name\": fnameRef.current.value || myData.name,\r\n          \"id\":currentUser.uid,\r\n          \"phone\": phoneRef.current.value || \"\",\r\n          \"address\": {\r\n            \"street\": streetRef.current.value || \"\",\r\n            \"apt\": aptRef.current.value || \"\",\r\n            \"city\": cityRef.current.value || \"\"\r\n          }\r\n        }\r\n      ))\r\n\r\n      Promise.all(promises).then(()=>{\r\n      }).catch(()=>{\r\n          setError(\"not updated\")\r\n      }).finally(()=>{\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center py-5\">\r\n\r\n      <div className=\"col-4 me-3\">\r\n        <Card style={{ backgroundColor: \"rgb(246,248,250)\" }}>\r\n          <Card.Body className=\"text-center\">\r\n            <img className=\"rounded-circle\" alt=\"userPic\" width=\"100px\" src=\"/img/users/userPic.jpg\"></img>\r\n            <h4 className=\"mb-4\">{currentUser.email}</h4>\r\n            <Button className=\"w-100\">Upload Picture</Button>\r\n            <Link to=\"/account\">\r\n                <Button className=\"w-100 my-2 btn-danger\" type=\"submit\">Back to Account</Button>\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"col-8\">\r\n        <Card style={{ backgroundColor: \"rgb(246,248,250)\" }}>\r\n          <Card.Body className=\"text-center\">\r\n            <h2>Profile</h2>\r\n            <span>The information can be edited</span>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Body>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n            <form>\r\n              <div className=\"row g-2 my-2\">\r\n                <div className=\"col-md form-floating\">\r\n                    <input ref={fnameRef} type=\"text\" className=\"form-control\" id=\"firstName\" defaultValue={myData.name}/>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                </div>\r\n                <div className=\"col-md form-floating\">\r\n                    <input ref={lnameRef} type=\"text\" className=\"form-control\" id=\"lastName\" defaultValue={myData.lastname}/>\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row g-2 my-2\">\r\n                <div className=\"col-md form-floating\">\r\n                    <input ref={emailRef} type=\"text\" className=\"form-control\" id=\"email\" defaultValue={currentUser.email}/>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                </div>\r\n                <div className=\"col-md form-floating\">\r\n                    <input ref={phoneRef} type=\"text\" className=\"form-control\" id=\"phone\" defaultValue={myData.phone || \"\"}/>\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row g-2 my-2\">\r\n                <div className=\"col-md form-floating\">\r\n                    <input ref={streetRef} type=\"text\" className=\"form-control\" id=\"address1\" defaultValue={myData.address? (myData.address.street || \"\") : \"\"}/>\r\n                    <label htmlFor=\"address1\">Address</label>\r\n                </div>\r\n                <div className=\"row g-2 my-2\">\r\n                  <div className=\"col-md form-floating\">\r\n                      <input ref={aptRef} type=\"text\" className=\"form-control\" id=\"address2\" defaultValue={myData.address? (myData.address.apt || \"\") : \"\"}/>\r\n                      <label htmlFor=\"address2\">Address 2 (Apartment, studio or floor)</label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row g-2 my-2\">\r\n                    <div className=\"col-md form-floating\">\r\n                      <input ref={cityRef} type=\"text\" className=\"form-control\" id=\"city\" defaultValue={myData.address? (myData.address.city || \"\") : \"\"}/>\r\n                      <label htmlFor=\"city\">City</label>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card style={{ backgroundColor: \"rgb(246,248,250)\" }}>\r\n          <Card.Body className=\"text-center\">\r\n            <Button  onClick={handleSubmit} disabled={loading} className=\"float-end\">Save details</Button>\r\n          </Card.Body>\r\n\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.user.loggedIn\r\n})\r\n\r\nexport default connect(mapStateToProps)(Profile)","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Blog\\BlogPost.js",["260","261","262"],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Blog\\Blog.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Blog\\BlogElement.js",["263"],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Cart.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Catalog\\CatalogPage.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Catalog\\CatalogContainer.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\OrderConfirmed.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Checkout\\Checkout.js",["264","265","266"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {applyDiscount, getDiscounts, addTempInvoice} from '../../actions'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport {useAuth} from '../../contexts/AuthContext'\r\nimport {db} from '../../firebase'\r\n\r\nimport {EmptyCart} from '../../components/Cart/EmptyCart'\r\nimport './Checkout.css'\r\n\r\nfunction Checkout (props) {\r\n    const [myData, setMyData] = useState(\"\")\r\n    const {currentUser} = useAuth()\r\n\r\n    const billFnameRef = useRef()\r\n    const billLnameRef = useRef()\r\n    const phoneRef = useRef()\r\n    const emailRef = useRef()\r\n    const [billingValid, setBilling] = useState(\r\n        {\"fname\":\"\",\"lname\":\"\",\"phone\":\"\",\"email\":\"\"}\r\n    )\r\n\r\n    const shipFnameRef = useRef()\r\n    const shipLnameRef = useRef()\r\n    const streetRef = useRef()\r\n    const aptRef = useRef()\r\n    const cityRef = useRef()\r\n    const notesRef = useRef()\r\n    const [shippingValid, setShipping] = useState(\r\n        {\"fname\":\"\",\"lname\":\"\", \"street\":\"\",\"apt\":\"\",\"city\":\"\"}\r\n    )\r\n\r\n    const [shippingFee, setshippingFee] = useState(0)\r\n    const [allOkStatus, setAllOk] = useState(false)\r\n\r\n    let discountRef = useRef(null)\r\n    let priceOfAll = 0;\r\n    let coupon = props.discount\r\n\r\n    useEffect(()=>{\r\n        db.on(\"value\", (snapshot) =>{\r\n            let myData = \"\"\r\n            myData = (snapshot.val().users);\r\n            for (const [key,value] of Object.entries(myData)){\r\n              if (value.id === currentUser.uid)\r\n                setMyData(value)\r\n            }\r\n        })\r\n    },[])\r\n\r\n    function validateBilling(field){\r\n        let newValid = {...billingValid}\r\n        switch (field){\r\n            case \"fname\":\r\n                if (billFnameRef.current.value)\r\n                    newValid.fname = \"is-valid\"\r\n                else\r\n                    newValid.fname = \"is-invalid\"\r\n                break;\r\n            case \"lname\":\r\n                if (billLnameRef.current.value)\r\n                    newValid.lname = \"is-valid\"\r\n                else\r\n                    newValid.lname = \"is-invalid\"\r\n                break;\r\n            case \"phone\":\r\n                let mobilePattern = /^\\(?([0-9]{3})\\)?[-]?([0-9]{3})[-]?([0-9]{4})$/;\r\n                let homePattern = /^\\(?([0-9]{2})\\)?[-]?([0-9]{3})[-]?([0-9]{4})$/;\r\n                if (phoneRef.current.value.match(mobilePattern) || phoneRef.current.value.match(homePattern))\r\n                    newValid.phone = \"is-valid\"\r\n                else\r\n                    newValid.phone = \"is-invalid\"\r\n                break;\r\n            case \"email\":\r\n                let mailPattern = new RegExp(/^\\w+@\\w+(\\.[A-z]+){1,2}$/);\r\n                if (emailRef.current.value.match(mailPattern))\r\n                    newValid.email = \"is-valid\"\r\n                else\r\n                    newValid.email = \"is-invalid\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setBilling(newValid)\r\n    }\r\n\r\n    function validateShipping(field){\r\n        let newValid = {...shippingValid}\r\n        switch (field){\r\n            case \"fname\":\r\n                if (shipFnameRef.current.value)\r\n                    newValid.fname = \"is-valid\"\r\n                else\r\n                    newValid.fname = \"is-invalid\"\r\n                break;\r\n            case \"lname\":\r\n                if (shipLnameRef.current.value)\r\n                    newValid.lname = \"is-valid\"\r\n                else\r\n                    newValid.lname = \"is-invalid\"\r\n                break;\r\n            case \"street\":\r\n                if (streetRef.current.value)\r\n                    newValid.street = \"is-valid\"\r\n                else\r\n                    newValid.street = \"is-invalid\"\r\n                break;\r\n            case \"apt\":\r\n                if (aptRef.current.value)\r\n                    newValid.apt = \"is-valid\"\r\n                else\r\n                    newValid.apt = \"is-invalid\"\r\n                break;\r\n            case \"city\":\r\n                if (cityRef.current.value)\r\n                    newValid.city = \"is-valid\"\r\n                else\r\n                    newValid.city = \"is-invalid\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setShipping(newValid)\r\n    }\r\n\r\n    function checkAll(){\r\n        let allOk = true;\r\n        let newBilling = {...billingValid}\r\n        let newShipping = {...shippingValid}\r\n\r\n        for (const [key, value] of Object.entries(newBilling)) {\r\n            if (!value){\r\n                switch (key){\r\n                    case \"fname\":\r\n                        if (billFnameRef.current.value)\r\n                            newBilling.fname = \"is-valid\"\r\n                        else{\r\n                            newBilling.fname = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    case \"lname\":\r\n                        if (billLnameRef.current.value)\r\n                            newBilling.lname = \"is-valid\"\r\n                        else{\r\n                            newBilling.lname = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    case \"phone\":\r\n                        let mobilePattern = /^\\(?([0-9]{3})\\)?[-]?([0-9]{3})[-]?([0-9]{4})$/;\r\n                        let homePattern = /^\\(?([0-9]{2})\\)?[-]?([0-9]{3})[-]?([0-9]{4})$/;\r\n                        if (phoneRef.current.value.match(mobilePattern) || phoneRef.current.value.match(homePattern))\r\n                            newBilling.phone = \"is-valid\"\r\n                        else{\r\n                            newBilling.phone = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    case \"email\":\r\n                        let mailPattern = new RegExp(/^\\w+@\\w+(\\.[A-z]+){1,2}$/);\r\n                        if (emailRef.current.value.match(mailPattern))\r\n                            newBilling.email = \"is-valid\"\r\n                        else{\r\n                            newBilling.email = \"is-invalid\"\r\n                            allOk=false\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [key, value] of Object.entries(newShipping)) {\r\n            if (!value){\r\n                switch (key){\r\n                    case \"fname\":\r\n                        if (shipFnameRef.current.value)\r\n                            newShipping.fname = \"is-valid\"\r\n                        else{\r\n                            newShipping.fname = \"is-invalid\"\r\n                            allOk=false\r\n                        }\r\n                        break;\r\n                    case \"lname\":\r\n                        if (shipLnameRef.current.value)\r\n                            newShipping.lname = \"is-valid\"\r\n                        else{\r\n                            newShipping.lname = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    case \"street\":\r\n                        if (streetRef.current.value)\r\n                            newShipping.street = \"is-valid\"\r\n                        else{\r\n                            newShipping.street = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    case \"apt\":\r\n                        if (aptRef.current.value)\r\n                            newShipping.apt = \"is-valid\"\r\n                        else{\r\n                            newShipping.apt = \"is-invalid\"\r\n                            allOk=false\r\n                        }\r\n                        break;\r\n                    case \"city\":\r\n                        if (cityRef.current.value)\r\n                            newShipping.city = \"is-valid\"\r\n                        else{\r\n                            newShipping.city = \"is-invalid\"\r\n                            allOk=false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n            }\r\n        }\r\n        }\r\n        setBilling(newBilling)\r\n        setShipping(newShipping)\r\n\r\n        if (allOk === true){\r\n            let itemsAllData = []\r\n            props.chosenProducts.map((product)=>{\r\n                for (let obj of props.allProducts){\r\n                    if (obj.id === product.id){\r\n                        itemsAllData.push(\r\n                            {\r\n                                name:obj.name,\r\n                                unitPrice: obj.discount || obj.price,\r\n                                count:product.count,\r\n                                finalPrice: (obj.discount || obj.price)*product.count\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            })\r\n\r\n            props.addTempInvoice({\r\n                uid: currentUser.uid,\r\n                billName: billFnameRef.current.value+\" \"+billLnameRef.current.value,\r\n                email: emailRef.current.value,\r\n                phone:phoneRef.current.value,\r\n\r\n                shipName: shipFnameRef.current.value+\" \"+shipLnameRef.current.value,\r\n                address: streetRef.current.value +\" \"+aptRef.current.value,\r\n                city: cityRef.current.value,\r\n                notes: notesRef.current.value,\r\n\r\n                purchaseDetails:itemsAllData,\r\n                sum: priceOfAll.toFixed(2),\r\n                sumWithDiscount: coupon? (priceOfAll * coupon).toFixed(2): \"\",\r\n                shipping: (priceOfAll*(coupon || 1) < 100 ? Number(shippingFee) : 0).toFixed(2),\r\n                finalSum:(priceOfAll * (coupon || 1) + (priceOfAll*(coupon || 1) < 100 ? Number(shippingFee) : 0)).toFixed(2)\r\n            })\r\n        }\r\n\r\n        setAllOk(allOk)\r\n    }\r\n\r\n    async function clickDiscount(e){\r\n        e.preventDefault()\r\n        await props.getDiscounts()\r\n        props.applyDiscount(discountRef.current.value.toLowerCase())\r\n    }\r\n\r\n    return (\r\n        <div className=\"py-5\">\r\n            {props.loggedIn? \"\": <Redirect to=\"/login\"/>}\r\n            {allOkStatus? <Redirect to=\"/payment\"/> : \"\"}\r\n            {!props.chosenProducts? \r\n            <EmptyCart/>:\r\n            <div>\r\n                <h1 className=\"text-center\">Checkout</h1>\r\n                {!props.allProducts? <Spinner/>:\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <form>\r\n                                <h5 className=\"my-3\">Billing details</h5>\r\n                                <div className=\"row g-3\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"fname\" className=\"fw-bold form-label\">First name\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input ref={billFnameRef} onChange={()=>validateBilling(\"fname\")} id=\"fname\" type=\"text\" className={`form-control ${billingValid.fname}`} defaultValue={myData.name}/>\r\n                                        <div className=\"invalid-feedback\">Please fill your first name.</div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"lname\" className=\"fw-bold form-label\">Last name\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input ref={billLnameRef} onChange={()=>validateBilling(\"lname\")} id=\"lname\" type=\"text\" className={`form-control ${billingValid.lname}`} defaultValue={myData.lastname} />\r\n                                        <div className=\"invalid-feedback\">Please fill your last name.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"phone\" className=\"fw-bold form-label\">Phone Number\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input ref={phoneRef} onChange={()=>validateBilling(\"phone\")} id=\"phone\" type=\"text\" className={`form-control ${billingValid.phone}`} defaultValue={myData.phone}/>\r\n                                        <div className=\"invalid-feedback\">Invalid phone number.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"email\" className=\"fw-bold form-label\">Email Address<span className=\"text-danger\">*</span></label>\r\n                                        <input ref={emailRef} onChange={()=>validateBilling(\"email\")} id=\"email\" type=\"text\" className={`form-control ${billingValid.email}`} defaultValue={myData.email} />\r\n                                        <div className=\"invalid-feedback\">Invalid email address.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12 form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"newsletter\"/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"newsletter\">Subscribe to our monthly newsletter</label>\r\n                                    </div>\r\n                                </div>\r\n                                <h5 className=\"my-3\">Shipping details</h5>\r\n                                <div className=\"row g-3\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"fname2\" className=\"fw-bold form-label\">First name\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input id=\"fname2\" ref={shipFnameRef} onChange={()=>validateShipping(\"fname\")}  defaultValue={myData.name} type=\"text\" className={`form-control ${shippingValid.fname}`}/>\r\n                                        <div className=\"invalid-feedback\">Please fill the recepient's first name.</div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"lname2\" className=\"fw-bold form-label\">Last name\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input id=\"lname2\" ref={shipLnameRef} onChange={()=>validateShipping(\"lname\")}  defaultValue={myData.lastname} className={`form-control ${shippingValid.lname}`} type=\"text\"/>\r\n                                        <div className=\"invalid-feedback\">Please fill the recepient's last name.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"add1\" className=\"fw-bold form-label\">Address\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input id=\"add1\" ref={streetRef} onChange={()=>validateShipping(\"street\")}  \r\n                                            defaultValue={myData.address? myData.address.street : \"\"}\r\n                                            className={`form-control ${shippingValid.street}`} placeholder=\"123 Main St\" type=\"text\"/>\r\n                                        <div className=\"invalid-feedback\">Please fill the recepient's address.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"add2\" className=\"fw-bold form-label\">Address 2 (Apartment, studio or floor)\r\n                                            <span className=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input id=\"add2\" ref={aptRef} onChange={()=>validateShipping(\"apt\")} className={`form-control ${shippingValid.apt}`}\r\n                                        defaultValue={myData.address? myData.address.apt : \"\"}\r\n                                        type=\"text\"/>\r\n                                        <div className=\"invalid-feedback\">Please fill the recepient's address.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label htmlFor=\"city\" className=\"fw-bold form-label\">City<span className=\"text-danger\">*</span></label>\r\n                                        <input ref={cityRef} id=\"city\" onChange={()=>validateShipping(\"city\")} \r\n                                            defaultValue={myData.address? myData.address.city : \"\"}\r\n                                            className={`form-control ${shippingValid.city}`} type=\"text\"/>\r\n                                        <div className=\"invalid-feedback\">Please fill the recepient's city.</div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-floating\">\r\n                                            <textarea maxLength=\"200\" ref={notesRef} id=\"notes\" className=\"form-control\" style={{height: \"100px\"}}></textarea>\r\n                                            <label htmlFor=\"notes\">Additional Notes</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table table-hover my-3\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Item</th>\r\n                                        <th>Price</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.chosenProducts.map((product,key)=>{\r\n                                        for (let obj of props.allProducts){\r\n                                            if (obj.id === product.id){\r\n                                                let totalPrice = (( obj.discount || obj.price) * product.count).toFixed(2)\r\n                                                priceOfAll+= Number(totalPrice)\r\n                                                return(\r\n                                                    <tr key={key}>\r\n                                                        <td>{obj.name} x{product.count}</td>\r\n                                                        <td>${totalPrice}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                            return null;\r\n                                        })}\r\n                                    {coupon?\r\n                                    <>\r\n                                        <tr className=\"text-danger\">\r\n                                            <th>Total (before discount)</th>\r\n                                            <td>${priceOfAll.toFixed(2)}</td>\r\n                                        </tr>\r\n                                        <tr className=\"text-success\">\r\n                                            <th>Coupon Applied - You've saved</th>\r\n                                            <td>-${(priceOfAll*(coupon?(1-coupon):1)).toFixed(2)}</td>\r\n                                        </tr>\r\n                                    </> : <></>\r\n                                    }\r\n                                    <tr>\r\n                                        <th>Total before shipping</th>\r\n                                        <td>${(priceOfAll*(coupon?coupon:1)).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Shipping method</th>\r\n                                        <td>\r\n                                            <select className=\"form-select\" onChange={(e)=>setshippingFee(e.target.value)} defaultValue=\"0\">\r\n                                                <option value=\"0\">Pick-up  - $0</option>\r\n                                                <option value=\"5\">Unregistered mail - $5</option>\r\n                                                <option value=\"10\">Registered mail - $10</option>\r\n                                                <option value=\"20\">Delivery - $20</option>\r\n                                            </select>\r\n                                            <span className=\"form-text\">Free shipping for deals over 100$</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Total including shipping</th>\r\n                                        <td className=\"fw-bold\">$\r\n                                            <span>\r\n                                            {(priceOfAll * (coupon || 1) + (priceOfAll*(coupon || 1) < 100 ? Number(shippingFee) : 0)).toFixed(2)}\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                        \r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"row justify-content-center\">\r\n                                <button className=\"btn btn-primary btn-lg py-3 w-50\" onClick={()=>checkAll()}>\r\n                                    Confirm Order\r\n                                </button>\r\n                                <p className=\"text-center\">Still missing something? \r\n                                    <Link className=\"ps-1\" to=\"/store/\" style={{textDecoration:\"none\"}}>\r\n                                        Continue Shopping\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <form onSubmit={(e)=>clickDiscount(e)} className=\"row g-3\">\r\n                                    <div>\r\n                                        <h6>Apply Discount Code</h6>\r\n                                        <input className=\"me-1 mb-2 form-control\" ref={discountRef} type=\"text\"/>\r\n                                        <button className=\"btn btn-success\">Apply Code</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </div>}\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    discount:state.discount.discount,\r\n    allProducts: state.products.allProducts,\r\n    chosenProducts:state.products.chosenProducts,\r\n    loggedIn: state.user.loggedIn,\r\n})\r\n\r\nexport default connect(mapStateToProps, {applyDiscount, getDiscounts, addTempInvoice})(Checkout)","C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Checkout\\Payment.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Paypal\\PayPalBtn.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Contact\\ContactUs.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Contact\\MsgSent.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Map\\Map.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Product\\ProductPage.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\AdminPage.js",["267"],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\Dashboard.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\createAdminStore.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\userReducer.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Spinner\\Spinner.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\reducers\\invoiceReducer.jsx",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\pages\\Account\\Invoices.js",["268","269"],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\addOns.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\posts.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\roles.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\coupons.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\products.js",[],"C:\\Users\\Galpe\\Desktop\\Experis\\final-proj\\src\\components\\Admin\\adminTables\\users.js",[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":40,"column":5,"nodeType":"276","endLine":40,"endColumn":7,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":1,"column":27,"nodeType":"280","messageId":"281","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"282","line":17,"column":8,"nodeType":"276","endLine":17,"endColumn":10,"suggestions":"283"},{"ruleId":"278","severity":1,"message":"284","line":23,"column":11,"nodeType":"280","messageId":"281","endLine":23,"endColumn":21},{"ruleId":"274","severity":1,"message":"285","line":13,"column":6,"nodeType":"276","endLine":13,"endColumn":8,"suggestions":"286"},{"ruleId":"278","severity":1,"message":"287","line":45,"column":25,"nodeType":"280","messageId":"281","endLine":45,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":50,"column":7,"nodeType":"276","endLine":50,"endColumn":9,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":229,"column":47,"nodeType":"291","messageId":"292","endLine":229,"endColumn":49},{"ruleId":"278","severity":1,"message":"293","line":30,"column":7,"nodeType":"280","messageId":"281","endLine":30,"endColumn":19},{"ruleId":"278","severity":1,"message":"287","line":16,"column":27,"nodeType":"280","messageId":"281","endLine":16,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":26,"column":9,"nodeType":"276","endLine":26,"endColumn":11,"suggestions":"294"},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["297"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.title'. Either include it or remove the dependency array.",["298"],"'addComment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post.id'. Either include it or remove the dependency array.",["299"],"'key' is assigned a value but never used.",["300"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'dataProvider' is assigned a value but never used.",["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"302","fix":"308"},{"desc":"302","fix":"309"},"Update the dependencies array to be: [currentUser.uid]",{"range":"310","text":"311"},"Update the dependencies array to be: [props.match.params.title]",{"range":"312","text":"313"},"Update the dependencies array to be: [post.id]",{"range":"314","text":"315"},{"range":"316","text":"311"},{"range":"317","text":"311"},[1164,1166],"[currentUser.uid]",[745,747],"[props.match.params.title]",[444,446],"[post.id]",[1651,1653],[756,758]]