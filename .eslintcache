[{"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\index.js":"1","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\App.js":"2","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Cart.js":"3","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartColumns.js":"4","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\EmptyCart.js":"5","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartTotals.js":"6","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartList.js":"7","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\SideMenu.js":"8","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Drawer.js":"9","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\backDrop\\BackDrop.js":"10","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartItem.js":"11","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Toolbar.js":"12","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Menu.js":"13","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\firebase.js":"14","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartDropdown.js":"15","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Checkout.js":"16","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Succeeded.js":"17","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\PayPal.js":"18","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\headerNav\\Navbar.js":"19","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\ProductList.js":"20","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\productDetails\\Details.js":"21","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\footer\\Footer.js":"22","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Default.js":"23","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\modal\\Modal.js":"24","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\homepage\\Homepage.js":"25","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\about\\About.js":"26","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\blog\\Blog.js":"27","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\contact\\Contact.js":"28","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\AuthContext.js":"29","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\forgotPassword\\ForgotPassword.js":"30","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\router\\PrivateRoute.js":"31","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\context.js":"32","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\Product.js":"33","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Title.js":"34","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Button.js":"35","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\map\\Map.js":"36","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\RatingStars.js":"37","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Register.js":"38","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Login.js":"39","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Profile.js":"40","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\AdminApp.js":"41","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Account.js":"42","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Dashboard.js":"43","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CustomForm.js":"44","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\ProductsStore.js":"45","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Order.js":"46","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Spinner.js":"47","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Coupons.js":"48","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CardDashboard.js":"49","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Tickets.js":"50","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\OptionsBar.js":"51"},{"size":772,"mtime":1614327049209,"results":"52","hashOfConfig":"53"},{"size":2659,"mtime":1618172298636,"results":"54","hashOfConfig":"53"},{"size":1309,"mtime":1614326729786,"results":"55","hashOfConfig":"53"},{"size":1421,"mtime":1614326680221,"results":"56","hashOfConfig":"53"},{"size":361,"mtime":1612784175820,"results":"57","hashOfConfig":"53"},{"size":2168,"mtime":1617221687352,"results":"58","hashOfConfig":"53"},{"size":369,"mtime":1617194563701,"results":"59","hashOfConfig":"53"},{"size":983,"mtime":1612784175847,"results":"60","hashOfConfig":"53"},{"size":2401,"mtime":1614327853842,"results":"61","hashOfConfig":"53"},{"size":161,"mtime":1612784284915,"results":"62","hashOfConfig":"53"},{"size":1792,"mtime":1617194580926,"results":"63","hashOfConfig":"53"},{"size":980,"mtime":1612784175849,"results":"64","hashOfConfig":"53"},{"size":339,"mtime":1612784175846,"results":"65","hashOfConfig":"53"},{"size":592,"mtime":1614756365641,"results":"66","hashOfConfig":"53"},{"size":2474,"mtime":1617196499548,"results":"67","hashOfConfig":"53"},{"size":24186,"mtime":1618154957257,"results":"68","hashOfConfig":"53"},{"size":482,"mtime":1614323498045,"results":"69","hashOfConfig":"53"},{"size":2156,"mtime":1618172188013,"results":"70","hashOfConfig":"53"},{"size":6928,"mtime":1618172099573,"results":"71","hashOfConfig":"53"},{"size":7943,"mtime":1617190613816,"results":"72","hashOfConfig":"53"},{"size":4745,"mtime":1617692972475,"results":"73","hashOfConfig":"53"},{"size":1807,"mtime":1614324681509,"results":"74","hashOfConfig":"53"},{"size":857,"mtime":1614324549453,"results":"75","hashOfConfig":"53"},{"size":2512,"mtime":1614326044641,"results":"76","hashOfConfig":"53"},{"size":2603,"mtime":1617477734053,"results":"77","hashOfConfig":"53"},{"size":2974,"mtime":1614331189788,"results":"78","hashOfConfig":"53"},{"size":51317,"mtime":1618207451847,"results":"79","hashOfConfig":"53"},{"size":6634,"mtime":1617974251140,"results":"80","hashOfConfig":"53"},{"size":4900,"mtime":1615159501907,"results":"81","hashOfConfig":"53"},{"size":1768,"mtime":1618171005009,"results":"82","hashOfConfig":"53"},{"size":356,"mtime":1618171994763,"results":"83","hashOfConfig":"53"},{"size":14566,"mtime":1618172431076,"results":"84","hashOfConfig":"53"},{"size":4610,"mtime":1617192334546,"results":"85","hashOfConfig":"53"},{"size":442,"mtime":1614325261931,"results":"86","hashOfConfig":"53"},{"size":620,"mtime":1614324537590,"results":"87","hashOfConfig":"53"},{"size":2988,"mtime":1614587927201,"results":"88","hashOfConfig":"53"},{"size":938,"mtime":1614325251367,"results":"89","hashOfConfig":"53"},{"size":13576,"mtime":1618172556289,"results":"90","hashOfConfig":"53"},{"size":5344,"mtime":1617797421763,"results":"91","hashOfConfig":"53"},{"size":15130,"mtime":1618172498563,"results":"92","hashOfConfig":"53"},{"size":1930,"mtime":1618136789038,"results":"93","hashOfConfig":"53"},{"size":6250,"mtime":1618136841092,"results":"94","hashOfConfig":"53"},{"size":5545,"mtime":1618160180615,"results":"95","hashOfConfig":"53"},{"size":3348,"mtime":1614688518996,"results":"96","hashOfConfig":"53"},{"size":4185,"mtime":1618136719131,"results":"97","hashOfConfig":"53"},{"size":3107,"mtime":1618155545358,"results":"98","hashOfConfig":"53"},{"size":324,"mtime":1614862348369,"results":"99","hashOfConfig":"53"},{"size":1191,"mtime":1618172374994,"results":"100","hashOfConfig":"53"},{"size":1797,"mtime":1617800297749,"results":"101","hashOfConfig":"53"},{"size":2501,"mtime":1618136651082,"results":"102","hashOfConfig":"53"},{"size":1015,"mtime":1618135890062,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1p45bwo",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\index.js",[],["219","220"],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\App.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartColumns.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\EmptyCart.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartTotals.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartList.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\SideMenu.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Drawer.js",["221"],"import React, { useState, useEffect } from \"react\"\r\nimport \"./drawerStyle.css\";\r\nimport { auth } from \"../../firebase\"\r\n\r\n\r\nexport default function SideDrawer(props) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  let drawerClasses = [\"side-drawer\"];\r\n  let callRef = React.createRef();\r\n\r\n  if (props.show) {\r\n    drawerClasses = [\"side-drawer\", \"open\"];\r\n  }\r\n\r\n  let searchRefDrawer=()=>{\r\n      const node = callRef.current.value;\r\n      window.location.href = \"/search?q=\" + node;\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n   function userShow(){\r\n            if(currentUser)\r\n              return currentUser.email\r\n              else\r\n            return \"Visitor\"\r\n        }\r\n    function logout() {\r\n          return auth.signOut()\r\n    }\r\n    function userOptionsShow(){\r\n      if(currentUser)\r\n        return (<li><a href=\"/\" onClick={() => {logout() }}>Logout</a></li>)\r\n      else\r\n        return (<li><a href=\"/login\">Login</a> <a style={{marginLeft:\"60%\"}} href=\"/register\">Register</a> </li>)\r\n    }  \r\n    \r\n  return (\r\n    <nav className={drawerClasses.join(\" \")}>\r\n       {/* {userOptionsShow } */}\r\n\r\n      <ul>\r\n          <li className=\"input-group\" >\r\n            <input ref={callRef} type=\"text\" className=\"form-control\" placeholder=\"Search\"/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-secondary\" type=\"button\" onClick={searchRefDrawer} style={{height:'100%'}}>\r\n                <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <h3>Welcome&nbsp; {userShow()}</h3>\r\n          </li>\r\n          \r\n            {userOptionsShow()}\r\n            {/* <a href=\"/login\">Login</a> <a style={{marginLeft:\"60%\"}} href=\"/register\">Register</a> */}\r\n          \r\n          <li>\r\n            <a href=\"/\">Home</a><a style={{marginLeft:\"25%\"}} href=\"/Shop\">Shop</a><a style={{marginLeft:\"26%\"}} href=\"/cart\">Cart</a>       \r\n          </li>\r\n          <li>\r\n          <a href=\"/about\">About</a><a style={{marginLeft:\"25%\"}} href=\"/contact\">Contact</a><a style={{marginLeft:\"21%\"}} href=\"/blog\">Blog</a>\r\n          </li>\r\n          \r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\backDrop\\BackDrop.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Toolbar.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Menu.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\firebase.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartDropdown.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Checkout.js",["222","223","224"],"import {ProductConsumer} from '../../context/context';\r\nimport \"./checkout.css\";\r\nimport React, { Component } from 'react';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\nimport PayPal from \"./PayPal\";\r\nimport Title from '../../additionsComp/Title'\r\nimport axios from 'axios'\r\n\r\nlet shippingSelect;\r\nlet usedCoupon = false\r\n    export default class Checkout extends  Component{\r\n        constructor (props) {\r\n            super(props);\r\n            this.couponRef = React.createRef();\r\n            this.userReqRef = React.createRef();\r\n            this.setNewTotalShippment = this.setNewTotalShippment.bind(this);\r\n            this.nameValidation = this.nameValidation.bind(this);\r\n            this.emailValidation = this.emailValidation.bind(this);\r\n            this.phoneValidation = this.phoneValidation.bind(this);\r\n            this.addressValidation = this.addressValidation.bind(this);\r\n            this.postalCodeValidation = this.postalCodeValidation.bind(this);\r\n            this.choosePaymentCard = this.choosePaymentCard.bind(this);\r\n            this.state = {\r\n                couponDiscount:0, \r\n                country: '',\r\n                region: '' ,\r\n                continueToPayment:false,\r\n                coupons:[],\r\n                priceAfterCoupon:<ProductConsumer>{value =>value.cartTotal}</ProductConsumer>,\r\n                filldsArray : [{filld:\"name\",isFilled:false},\r\n                {filld:\"lastName\",isFilled:false},\r\n                {filld:\"email\",isFilled:false},\r\n                {filld:\"phoneNumber\",isFilled:false},\r\n                {filld:\"city\",isFilled:false},\r\n                {filld:\"address\",isFilled:false},\r\n                {filld:\"potalCode\",isFilled:false},]\r\n\r\n                \r\n\r\n            };\r\n     \r\n          }\r\n        componentDidMount(){\r\n            const fetchData = async () => {\r\n                const coupons = await axios.get(\"/api/coupon\" )//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } }\r\n                this.setState({\r\n                    coupons:coupons.data\r\n                })\r\n\r\n            }                \r\n            fetchData()\r\n        }\r\n          selectCountry (val) {\r\n            this.setState({ country: val });\r\n          }\r\n        \r\n          selectRegion (val) {\r\n            this.setState({ region: val });\r\n          }\r\n          \r\n          setNewTotalShippment(event,cartTotal){\r\n              if(this.state.priceAfterCoupon==null){\r\n                this.setState({priceAfterCoupon:cartTotal})\r\n              }\r\n                const couponNumber =this.couponRef.current.value;\r\n              if(event.target.id===\"registeredAddress\"){\r\n                this.setState({priceAfterCoupon: ((parseFloat(cartTotal)+20)-this.state.couponDiscount).toFixed(2)});\r\n                shippingSelect=\"choosed\"\r\n              }\r\n              if(event.target.id===\"postOffice\"){\r\n                this.setState({priceAfterCoupon: ((parseFloat(cartTotal)+10)-this.state.couponDiscount).toFixed(2)});\r\n                shippingSelect = \"choosed\"\r\n              }\r\n              if(event.target.id===\"inputCoupon\" ){\r\n\r\n                  if(usedCoupon){\r\n                    return;\r\n                  }\r\n                for(let i=0;i<this.state.coupons.length;i++){\r\n                    if(couponNumber==this.state.coupons[i].id){\r\n                        \r\n                        let dicount=((parseFloat(cartTotal)*parseFloat(this.state.coupons[i].couponSize))/100).toFixed(2);\r\n                        this.setState({couponDiscount: dicount})\r\n                       if(this.state.priceAfterCoupon == parseFloat(cartTotal)+10)\r\n                            this.setState({priceAfterCoupon: ((parseFloat(cartTotal)+10)-dicount).toFixed(2)});\r\n                        else if(this.state.priceAfterCoupon == parseFloat(cartTotal)+20)\r\n                            this.setState({priceAfterCoupon: ((parseFloat(cartTotal)+20)-dicount).toFixed(2)});\r\n                        else\r\n                        this.setState({priceAfterCoupon: ((parseFloat(cartTotal))-dicount).toFixed(2)});\r\n\r\n                        break\r\n                    }\r\n                }\r\n              }  \r\n            }\r\n\r\n            nameValidation(event){\r\n                let regex=/^[a-zA-Z]*$/;\r\n                let arr = [...this.state.filldsArray];\r\n                if(regex.test(event.target.value) && event.target.value.length>2)\r\n                {\r\n                    event.target.setAttribute(\"class\", \"form-control is-valid\")\r\n                    if(event.target.id===\"inputName\"){\r\n                        arr[0].isFilled = true;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                    else if(event.target.id===\"inputLastName\"){\r\n                        arr[1].isFilled = true;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                    else if(event.target.id===\"inputCity\"){\r\n                        arr[4].isFilled = true;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                }\r\n                else{\r\n                    event.target.setAttribute(\"class\", \"form-control is-invalid\")\r\n                    if(event.target.id===\"inputName\"){\r\n                        arr[0].isFilled = false;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                    else if(event.target.id===\"inputLastName\"){\r\n                        arr[1].isFilled = false;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                    else if(event.target.id===\"inputCity\"){\r\n                        arr[4].isFilled = false;\r\n                        this.setState({filldsArray: arr});\r\n                    }\r\n                }\r\n                \r\n            }\r\n            emailValidation(event){\r\n                let regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n                let arr = [...this.state.filldsArray];\r\n                if(regex.test(event.target.value))\r\n                {\r\n                    arr[2].isFilled = true;\r\n                    this.setState({filldsArray: arr});\r\n                    event.target.setAttribute(\"class\", \"form-control is-valid\")\r\n                }\r\n                else{\r\n                    arr[2].isFilled = false;\r\n                    this.setState({filldsArray: arr});\r\n                    event.target.setAttribute(\"class\", \"form-control is-invalid\")\r\n                }\r\n            }\r\n            phoneValidation(event){\r\n                let arr = [...this.state.filldsArray];\r\n                let regex=/^(([+]{0,1}\\d{2})|\\d?)[\\s-]?[0-9]{2}[\\s-]?[0-9]{3}[\\s-]?[0-9]{4}$/gm;\r\n                if(regex.test(event.target.value))\r\n                {\r\n                    event.target.setAttribute(\"class\", \"form-control is-valid\")\r\n                    arr[3].isFilled = true;\r\n                    this.setState({filldsArray: arr});\r\n                }\r\n                else{\r\n                    event.target.setAttribute(\"class\", \"form-control is-invalid\")\r\n                    arr[3].isFilled = false;\r\n                    this.setState({filldsArray: arr});\r\n\r\n                }\r\n            }\r\n            addressValidation(event){\r\n                let arr = [...this.state.filldsArray];\r\n                let regex=/^[a-zA-Z]+\\s[a-zA-Z0-9]+/;                \r\n                if(regex.test(event.target.value))\r\n                {\r\n                    event.target.setAttribute(\"class\", \"form-control is-valid\")\r\n                    arr[5].isFilled = true;\r\n                    this.setState({filldsArray: arr});\r\n                }\r\n                else{\r\n                    event.target.setAttribute(\"class\", \"form-control is-invalid\")\r\n                    arr[5].isFilled = false;\r\n                    this.setState({filldsArray: arr});\r\n                }\r\n            }\r\n            postalCodeValidation (event){\r\n                let arr = [...this.state.filldsArray];\r\n                let regex=/^[0-9]{6}(?:-[0-9]{4})?$/; \r\n                if(regex.test(event.target.value))\r\n                {\r\n                    event.target.setAttribute(\"class\", \"form-control is-valid\")\r\n                    arr[6].isFilled = true;\r\n                    this.setState({filldsArray: arr});\r\n                }\r\n                else{\r\n                    event.target.setAttribute(\"class\", \"form-control is-invalid\")\r\n                    arr[6].isFilled = false;\r\n                    this.setState({filldsArray: arr});\r\n                }\r\n            }\r\n            \r\n            choosePaymentCard(event){\r\n                this.setState({continueToPayment:true})\r\n            }\r\n\r\nrender() {\r\n    \r\n    const { country, region } = this.state;\r\n\r\n    return (\r\n\r\n    <div className=\"container bg-white\">\r\n                <Title name=\"check\" title=\"out\"  />\r\n\r\n        <div className=\" d-flex justify-content-center pb-5\">\r\n\r\n            <div className=\" col-md-7 ml-1\">\r\n                <div className=\"py-4 d-flex flex-row\">\r\n                    <h4><span></span><b>First</b><b style={{color:\"#5383d3\"}}>Motor</b></h4>\r\n                </div>\r\n                <h4>Billing information</h4>\r\n                <form>\r\n                    <div className=\" col-md-12 pt-2\">\r\n                        <div >\r\n                            <label htmlFor=\"inputName\" required>Name - must contain least 3 letters</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputName\" placeholder=\"Name\" required\r\n                             onChange={(e)=> {\r\n                                this.nameValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputLastName\" required>Last Name - must contain least 3 letters</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputLastName\" placeholder=\"Last Name\" required\r\n                            onChange={(e)=> {\r\n                                this.nameValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputEmail4\" required>Email</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" required\r\n                            onChange={(e)=> {\r\n                                this.emailValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputPhoneNumber\" required>Phone Number*</label>\r\n                            <input type=\"number\" className=\"form-control\" id=\"inputPhoneNumber\" placeholder=\"Phone Number\" required\r\n                            onChange={(e)=> {\r\n                                this.phoneValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputCompanyName\" >Company Name (Optional)</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputCompanyName\" placeholder=\"Company Name\"/>\r\n                        </div>  \r\n                    </div>\r\n                    \r\n                    <hr/>\r\n                    <h4>Country/Region*</h4>\r\n                    <div className=\" col-md-12 pt-2\">\r\n                        <div>\r\n                            <div>\r\n                            <CountryDropdown\r\n                                value={country}\r\n                                onChange={(val) => this.selectCountry(val)} />\r\n                            <RegionDropdown\r\n                            country={country}\r\n                            value={region}\r\n                            onChange={(val) => this.selectRegion(val)} />\r\n                            </div>\r\n                            <label htmlFor=\"inputCity\" required>City - must contain least 3 letters</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputCity\" placeholder=\"City\" required\r\n                            onChange={(e)=> {\r\n                                this.nameValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputAddress\" required>Address</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" required\r\n                            onChange={(e)=> {\r\n                                this.addressValidation(e);\r\n                                }}/>\r\n                            <label className=\"pt-2\" htmlFor=\"inputPostalCode\" required>Postal Code</label>\r\n                            <input type=\"number\" className=\"form-control\" id=\"inputPostalCode\" placeholder=\"Postal Code\" required\r\n                            onChange={(e)=> {\r\n                                this.postalCodeValidation(e);\r\n                                }}/>\r\n                            \r\n                        </div>  \r\n                    </div>\r\n                </form>\r\n                    <div className=\"pt-2\">\r\n                        <div className=\" mb-2 \" >\r\n                            <div className=\"row  justify-content-left pt-3\">\r\n                                <div className=\"col-1\">\r\n                                    <input className=\" text-left\" type=\"checkbox\"/>\r\n                                </div>\r\n                                <div className=\"col-11 p-0\">\r\n                                    <p>I want to receive updates to my email.</p>\r\n                                    <textarea ref={this.userReqRef} maxLength=\"50\" style={{resize: \"none\"}} rows=\"4\" cols=\"50\" placeholder=\"Add a special request for delivery\"\r\n                                    ></textarea>\r\n\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n\r\n                            <div className=\"ml-auto p-2\">\r\n                                 <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\"\r\n                                 onClick={(e)=>{this.choosePaymentCard(e)}}>Continue to payment</button>\r\n                            </div>\r\n                            <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"card-title mx-auto\"> Payment</div>\r\n                                             <span id=\"card-header\">Choose Paypal or Credit card:</span>\r\n                                             <div className=\"row row-1 pt-3\">\r\n\r\n                                            <ProductConsumer>\r\n                                            {value => {\r\n                                                 if(value.cartTotal!==0){\r\n                                                if(shippingSelect!==undefined && country!=='' && region!==''\r\n                                                    && this.state.filldsArray[0].isFilled \r\n                                                    && this.state.filldsArray[1].isFilled\r\n                                                    && this.state.filldsArray[2].isFilled\r\n                                                    && this.state.filldsArray[3].isFilled\r\n                                                    && this.state.filldsArray[4].isFilled\r\n                                                    && this.state.filldsArray[5].isFilled\r\n                                                    && this.state.filldsArray[6].isFilled\r\n                                                    && this.state.continueToPayment){\r\n                                                    return( \r\n                                                        // <PayPal  total={100} clearCart={value.clearCart} setOrder={value.setOrder} orderCart={value.cart}></PayPal>\r\n                                                        \r\n                                                        <PayPal \r\n                                                        textAreaReq = {this.userReqRef.current.value} total={parseFloat(this.state.priceAfterCoupon)} clearCart={value.clearCart} setOrder={value.setOrder} orderCart={value.cart}></PayPal>\r\n                                                )}\r\n                                                \r\n                                                else{\r\n                                                    // return(<PayPal setOrder={value.setOrder}></PayPal>)\r\n                                                    return( <div>\r\n                                                         <h1>Opps forgot form filled with uncorrect values</h1>\r\n                                                        <p>Please check if all requireds fields are filled and which shippment way you want</p>\r\n                                                        </div>)\r\n                                                }\r\n                                            }}\r\n\r\n                                            }\r\n                                            </ProductConsumer>\r\n                                             \r\n                                           </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n         \r\n                    </div>                   \r\n            </div>\r\n\r\n\r\n\r\n                    <div className=\"col-sm-3 col-md-4 offset-md-1 bg-light mobile\">\r\n                                    <div className=\"py-4 d-flex justify-content-end\">\r\n                                        <h6><a href=\"/cart\">Cancel and return to website</a></h6>\r\n                                    </div>\r\n                                    <div className=\"bg-light rounded d-flex flex-column\">\r\n                                        <div className=\"p-2 ml-3\">\r\n                                            <h4>Order Recap</h4>\r\n                                        </div>\r\n                                        <ProductConsumer>\r\n                                        {value => {return( \r\n                                            <React.Fragment>\r\n                                                <div style={{fontSize:\"20px\"}}>\r\n                                                    <div className=\"p-2 d-flex\">\r\n                                                        <div className=\"col-8\">Sub cart total</div>\r\n                                                        <div className=\"ml-auto\">${value.cartSubTotal}</div>\r\n                                                    </div>\r\n                                                    <div className=\"p-2 d-flex\">\r\n                                                        <div className=\"col-8\">Tax</div>\r\n                                                        <div className=\"ml-auto\">${value.cartTax}</div>\r\n                                                    </div>\r\n                                                    <div className=\"p-2 d-flex\">\r\n                                                        <label className=\"pt-2\" htmlFor=\"inputPostalCode\" >Coupon</label>\r\n                                                        <input ref={this.couponRef} type=\"text\" className=\"form-control\"  placeholder=\"Coupon Number\"/>\r\n                                                    </div>\r\n                                                    <div className=\"p-2 d-flex\">\r\n\r\n                                                        <button type=\"button\" id=\"inputCoupon\" className=\"btn btn-primary\" \r\n                                                         onClick={(e)=> {\r\n                                                            this.setNewTotalShippment(e, value.cartTotal) }}>check coupon</button>\r\n                                                        </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"bg-light\">\r\n                                                        <form className=\"form-control\" action=\"\">\r\n                                                        \r\n                                                            <p>Shipping:</p>\r\n                                                            \r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1  m-0 p-0\">\r\n                                                                    <input type=\"radio\" id=\"registeredAddress\" name=\"shipping\" \r\n                                                                    onClick={(e) => {\r\n                                                                        this.setNewTotalShippment(e, value.cartTotal) }}/>\r\n                                                                </div>\r\n                                                                <div className=\"col-11  m-0 p-0\" >\r\n                                                                    <label htmlFor=\"registeredAddress\">To registered address in this form +$20</label><br/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <br/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1  m-0 p-0\">\r\n                                                                    <input type=\"radio\" id=\"postOffice\" name=\"shipping\"\r\n                                                                    onClick={(e) => {\r\n                                                                        this.setNewTotalShippment(e, value.cartTotal) }}/>\r\n                                                                    \r\n                                                                </div>\r\n                                                                <div className=\"col-11  m-0 p-0\">\r\n                                                                    <label htmlFor=\"postOffice\">Self-pickup from the post office +$10</label><br/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"border-top px-4 mx-3\"></div>\r\n                                                            <div className=\"p-2 d-flex pt-3\">\r\n                                                                <div className=\"col-8\"><b>Total Price</b></div>\r\n                                                                <div className=\"ml-auto\"><b className=\"green\">${this.state.priceAfterCoupon}</b></div>\r\n                                                            </div>\r\n                                                        </form>  \r\n                                                    </div>   \r\n                                                    \r\n                                                </div>\r\n                                            </React.Fragment>\r\n\r\n                                        )}}\r\n                                        </ProductConsumer>\r\n                                        \r\n                                    </div>\r\n                    </div>\r\n            \r\n        </div>\r\n    </div>\r\n                     \r\n      \r\n     )\r\n }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Succeeded.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\PayPal.js",["225"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nexport default function Paypal(props) {\r\n  const paypal = useRef();\r\n  useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions, err) => {\r\n          \r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Cool looking table\",\r\n                amount: {\r\n                  currency_code: \"CAD\",\r\n                  value:props.total,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          props.setOrder(order ,props.orderCart ,props.textAreaReq,props.total);\r\n          props.clearCart();\r\n          \r\n          window.location.href = \"/succeeded\";\r\n        },\r\n        onError: (err) => {\r\n          console.log(err);\r\n          alert(\"Error!\", err);\r\n        },\r\n      })\r\n      .render(paypal.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={paypal}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useRef, useEffect } from \"react\";\r\n\r\n// export default function Paypal() {\r\n//   const paypal = useRef();\r\n\r\n//   useEffect(() => {\r\n//     window.paypal\r\n//       .Buttons({\r\n//         createOrder: (data, actions, err) => {\r\n//           return actions.order.create({\r\n//             intent: \"CAPTURE\",\r\n//             purchase_units: [\r\n//               {\r\n//                 description: \"Cool looking table\",\r\n//                 amount: {\r\n//                   currency_code: \"CAD\",\r\n//                   value: 650.0,\r\n//                 },\r\n//               },\r\n//             ],\r\n//           });\r\n//         },\r\n//         onApprove: async (data, actions) => {\r\n//           const order = await actions.order.capture();\r\n//           console.log(order);\r\n//         },\r\n//         onError: (err) => {\r\n//           console.log(err);\r\n//         },\r\n//       })\r\n//       .render(paypal.current);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div ref={paypal}></div>\r\n//     </div>\r\n//   );\r\n// }","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\headerNav\\Navbar.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\ProductList.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\productDetails\\Details.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\footer\\Footer.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Default.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\modal\\Modal.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\homepage\\Homepage.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\about\\About.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\blog\\Blog.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\contact\\Contact.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\AuthContext.js",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../../firebase\"\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport {db} from '../../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\nlet provider ;\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children, history }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password,firstNameRef,lastNameRef,emailRef, passwordRef,phoneNumberRef,stateRef,cityRef,zipRef,addressRef) {\r\n    return (auth.createUserWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n        auth.onAuthStateChanged(user=>{\r\n            db.ref().child('users').child(user.uid).set({\r\n              active:true,\r\n              address:addressRef,\r\n              city:cityRef,\r\n              country:stateRef,\r\n              email:emailRef,\r\n              firstName:firstNameRef,\r\n              id:user.uid,\r\n              lastName:lastNameRef,\r\n              password:passwordRef,\r\n              phoneNumber:phoneNumberRef,\r\n              postalCode:zipRef,\r\n              role:\"customer\",\r\n            })\r\n        })     \r\n        history.push('/')\r\n    })\r\n    .catch(() => {\r\n        console.log('Failed to create an account')\r\n    }));\r\n\r\n    \r\n    \r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n  \r\n  function loginGoogle(){\r\n    provider = new firebase.auth.GoogleAuthProvider();\r\n    auth\r\n  .signInWithPopup(provider)\r\n  .then((result) => {\r\n    /** @type {firebase.auth.OAuthCredential} */\r\n    var credential = result.credential;\r\n\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    var token = credential.accessToken;\r\n    // The signed-in user info.\r\n    var user = result.user;\r\n    window.location.href = \"/\" ;\r\n    // ...\r\n  }).catch((error) => {\r\n    // Handle Errors here.\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    var email = error.email;\r\n    // The firebase.auth.AuthCredential type that was used.\r\n    var credential = error.credential;\r\n    // ...\r\n  });\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  function loginFacebook(){\r\n\r\n  provider = new firebase.auth.FacebookAuthProvider();\r\n  firebase\r\n  .auth()\r\n  .signInWithPopup(provider)\r\n  .then((result) => {\r\n    /** @type {firebase.auth.OAuthCredential} */\r\n    var credential = result.credential;\r\n\r\n    // The signed-in user info.\r\n    var user = result.user;\r\n\r\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    var accessToken = credential.accessToken;\r\n    window.location.href = \"/\" ;\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    // Handle Errors here.\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    var email = error.email;\r\n    // The firebase.auth.AuthCredential type that was used.\r\n    var credential = error.credential;\r\n\r\n    // ...\r\n  });\r\n  }\r\n  function loginGitHub(){\r\n    provider = new firebase.auth.GithubAuthProvider();\r\n    provider.addScope(\"repo\");\r\n   \r\n    firebase\r\n    .auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      /** @type {firebase.auth.OAuthCredential} */\r\n      \r\n      var credential = result.credential;\r\n  \r\n      // This gives you a GitHub Access Token. You can use it to access the GitHub API.\r\n      var token = credential.accessToken;\r\n  \r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      // history.push( \"/\");\r\n      window.location.href = \"/\" ;\r\n      // ...\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      \r\n      // ...\r\n    });\r\n    }\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    loginGoogle,\r\n    loginFacebook,\r\n    loginGitHub,\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\forgotPassword\\ForgotPassword.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\router\\PrivateRoute.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\context.js",["244","245","246","247","248"],"import React, { Component } from 'react'\r\nconst ProductContext = React.createContext();\r\nconst axios = require('axios').default;\r\nlet cartSubTotal = 0, cartTax = 0, cartTotal = 0;\r\nlet cart = [];\r\nlet storeProducts =[];\r\nconst detailProduct = {\r\n            id: 1,\r\n            title: \"\",\r\n            img: \"\",\r\n            price: 0,\r\n            company: \"\",\r\n            info:\"\",\r\n            inCart: false,\r\n            count: 0,\r\n            total: 0\r\n          };\r\nclass ProductProvider extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            products:[],\r\n            origProducts:[],\r\n            filtersArray : [{isEnabled:false, type:\"helmet\"}, {isEnabled:false, type:\"bike\"},{isEnabled:false, type:\"cub\"},{isEnabled:false, type:\"scooter\"},{isEnabled:false, type:\"sale\"}],\r\n            detailProduct:detailProduct,\r\n            cart: cart,\r\n            modalOpen:false,\r\n            modalProduct:detailProduct,\r\n            cartSubTotal:cartSubTotal,\r\n            cartTax: cartTax,\r\n            cartTotal:cartTotal,\r\n            boardProducts:[],\r\n            itemsOrig:[],\r\n            raceType:false,\r\n            roadType:false,\r\n            mountainType:false,\r\n            sortValue:'HL',\r\n            pageNum:0,\r\n            first:0,\r\n            rows:10,\r\n            posts: [[{postsAndCommentsArr:\"\", like:0,}],[{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}],\r\n                    [{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}]],\r\n            orders: []        \r\n            \r\n            };\r\n\r\n       \r\n      }\r\n\r\n      areAnyFilterEnable = (filterArr) =>{\r\n        let found= false;\r\n        filterArr.map((filterItem)=> {\r\n            if (filterItem.isEnabled){\r\n                found= true;\r\n            }\r\n       })\r\n       return found;\r\n      }\r\n\r\n      shouldShow =(item, filterArr) =>{\r\n          let found = false;\r\n        if (!this.areAnyFilterEnable(filterArr)) {\r\n            return true;\r\n        }\r\n\r\n        filterArr.map((filterItem)=> {\r\n            if(filterItem.isEnabled&&filterItem.type === 'sale' && item.sale)\r\n                found = true;\r\n             if (filterItem.isEnabled&& filterItem.type === item.type ){\r\n                found = true;\r\n             }\r\n        })\r\n\r\n        return found;\r\n      }\r\n\r\n     setOrder = (order, orderCart,specialReq,total) =>{\r\n         let tempOrderArr = [...this.state.orders];\r\n         tempOrderArr.push(order);\r\n         this.setState({\r\n             orders:tempOrderArr\r\n         })\r\n        console.log(total)\r\n         axios.post(\"/api/order\",{order:order,specialReq:specialReq,orderCart:orderCart,cartTotal:total,userId:JSON.parse(localStorage.getItem(\"usernameID\"))}) \r\n         .then(\r\n             response => {\r\n                 console.log(response.statusText)\r\n             }\r\n         ).catch(\r\n             err => console.log(err)\r\n         )\r\n     }\r\n\r\n      setFilter = (filterName) => {\r\n        let arr = [...this.state.filtersArray];\r\n        \r\n        arr.forEach(item => {\r\n            if(item.type === filterName || item.type===filterName) {\r\n                item.isEnabled = !item.isEnabled;\r\n            }\r\n        });\r\n           this.setState(\r\n               {\r\n                   filtersArray:arr, \r\n                   products:this.state.origProducts.filter((item)=>{\r\n                        return this.shouldShow(item, arr);\r\n\r\n                   }),\r\n\r\n               }\r\n           )\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.dbLoad();\r\n        this.updatePrice();\r\n        this.setProducts();\r\n    }\r\n    dbLoad = () =>{\r\n        const fetchData = async () => {\r\n            const response = await axios.get(\"/api/product\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n            this.setState({\r\n                products: response.data,\r\n                origProducts: response.data\r\n            })\r\n            if(localStorage.cart !==undefined){\r\n                if (localStorage.cart.length !== 2) {\r\n                    storeProducts = [...this.state.origProducts];\r\n                    cart = JSON.parse(localStorage.cart);\r\n                    let total = JSON.parse(localStorage.totals);\r\n                    cartSubTotal = total.cartSubTotal;\r\n                    cartTax = total.cartTax;\r\n                    cartTotal = total.cartTotal;\r\n                    this.setState({cart , cartSubTotal,cartTax,cartTotal});\r\n                    for(let i=0;i<storeProducts.length;i++){\r\n                         for(let j=0;j<cart.length;j++){\r\n                            if(storeProducts[i]._id===cart[j]._id){\r\n                                storeProducts[i].inCart = cart[j].inCart;    \r\n                            }\r\n                         }\r\n                     }\r\n                     this.setState({products:storeProducts,origProducts:storeProducts})\r\n               }\r\n            } \r\n        }\r\n        fetchData()\r\n\r\n    }\r\n    setProducts = () => {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item => {\r\n            const singleItem ={...item};\r\n            tempProducts = [...tempProducts, singleItem];\r\n        });\r\n        this.setState(()=>{\r\n            return {products: tempProducts};\r\n        });\r\n    };\r\n\r\n    getItem = (id) =>{\r\n    const product = this.state.products.find(item => item._id===id);\r\n        return product;\r\n    };\r\n    handleDetail = (id) =>{\r\n        const product = this.getItem(id);\r\n        this.setState({detailProduct:product})\r\n}\r\n    addToCart = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        localStorage.cart = JSON.stringify([...this.state.cart , product]);\r\n        this.setState({products:tempProducts ,cart:[...this.state.cart , product]},()=> {this.addTotals()});\r\n        axios.post(\"/api/postCart\",{product:product}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    openModal = id =>{\r\n        const product = this.getItem(id);\r\n        this.setState({modalProduct:product, modalOpen:true})\r\n    }\r\n    closeModal = () => {\r\n        this.setState(()=>{\r\n            return {modalOpen:false};\r\n        })\r\n    }\r\n    increment = (id) =>{\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item._id ===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count +1;\r\n        product.total = product.count * product.price;\r\n        localStorage.cart = JSON.stringify([...tempCart]);\r\n        this.setState(()=>{return{cart:[...tempCart]}\r\n        },()=>{this.addTotals()})\r\n        axios.post(\"/api/postCart\",{product:product,action:\"increment\"}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n   decrement = (id) =>{\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item._id ===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        let removeFromCart=false\r\n        product.count = product.count - 1;\r\n        if(product.count ===0){\r\n            this.removeItem(id);\r\n            removeFromCart = true\r\n        }\r\n        else{\r\n            product.total = product.count*product.price;\r\n            localStorage.cart = JSON.stringify([...tempCart]);\r\n            this.setState(()=>{return{cart:[...tempCart]}\r\n            },()=>{this.addTotals()})\r\n        }\r\n        axios.post(\"/api/postCart\",{product:product,action:\"decrement\",removeFromCart:removeFromCart}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    removeItem = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        const selectedProduct = tempProducts.find(item=>item._id ===id);\r\n        let tempCart = [...this.state.cart];\r\n        tempCart = tempCart.filter(item=> item._id !== id);\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart=false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n        localStorage.cart = JSON.stringify([...tempCart]);\r\n\r\n        this.setState(()=>{\r\n            return{\r\n                cart:[...tempCart],\r\n                products:[...tempProducts]\r\n            }\r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n        axios.post(\"/api/postCart\",{product:selectedProduct,action:\"removeItem\"}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    clearCart = () =>{\r\n        localStorage.cart = [JSON.stringify([])];\r\n        localStorage.total = [JSON.stringify([])];\r\n        this.setState({cart:[]})\r\n        let arr = [...this.state.products];\r\n        arr.forEach(item => {\r\n            item.inCart = false;   \r\n        });    \r\n        this.setState({products:arr});\r\n            this.setProducts();\r\n            this.addTotals();\r\n            axios.post(\"/api/clearAllCart\",{userId:JSON.parse(localStorage.getItem(\"usernameID\"))}) \r\n            .then(\r\n                response => {\r\n                }\r\n            ).catch(\r\n                err => console.log(err)\r\n            )\r\n\r\n            const fetchData = async () => {\r\n                const response = await axios.get(\"/api/product\" )//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n                this.setState({\r\n                    products: response.data,\r\n                    origProducts: response.data\r\n                })\r\n            }\r\n            fetchData()\r\n        };\r\n        \r\n    \r\n    addTotals =() =>{\r\n        let subTotal =0;\r\n        this.state.cart.map(item =>{return(subTotal +=item.total*1)})\r\n        const tempTax = subTotal *0.17;\r\n        const tax = parseFloat(tempTax.toFixed(2))\r\n        const total = parseFloat(subTotal*1 +tax.toFixed(2)*1).toFixed(2);\r\n\r\n        localStorage.totals = JSON.stringify({\r\n            cartSubTotal: subTotal,\r\n            cartTax: tax,\r\n            cartTotal: total\r\n        });\r\n\r\n        this.setState(()=>{\r\n            return{\r\n                cartSubTotal: subTotal,\r\n                cartTax: tax,\r\n                cartTotal: total\r\n            }\r\n        })\r\n    };\r\n\r\n    getProducts = (search)=> {\r\n        return this.state.products.filter((item)=>{\r\n            return item.title.toLowerCase().indexOf(search.toLowerCase())!== -1;\r\n        });\r\n       \r\n        \r\n    }\r\n    getHomepageProducts = ()=> {\r\n        this.state.products = [...this.state.origProducts];\r\n        return this.state.products.filter((item)=>{\r\n            return item.sale;\r\n        });\r\n    }\r\n    \r\n    \r\n   setPriceFilter = (rangePrice) => { //does not work (slider)\r\n\r\n        this.state.products = [...this.state.origProducts];\r\n        return this.state.products.filter((item)=>{\r\n            if(rangePrice[0]<item.price && rangePrice[1]>item.price) {\r\n                        return item;\r\n                    }\r\n        });\r\n      \r\n    }\r\n    priceHighToLow = (highOrLow) =>{\r\n        let newArr = this.state.products;\r\n\r\n        newArr  = newArr.sort((a,b) => {\r\n\r\n            let priceA = a.price;\r\n            let priceB = b.price;\r\n            if(highOrLow ==='high')\r\n                return (priceA < priceB) ? 1 : ((priceB < priceA) ? -1 : 0)\r\n            else{\r\n                return (priceA > priceB) ? 1 : ((priceB > priceA) ? -1 : 0)\r\n\r\n            }\r\n\r\n        });\r\n\r\n        this.setState({products: newArr});\r\n\r\n      }\r\n\r\n\r\n      saleSort = () =>{\r\n        let newArr = [...this.state.products];\r\n\r\n        newArr = this.state.products.filter((item)=>{\r\n            return item.sale;\r\n        })\r\n        this.setState({products: newArr});\r\n\r\n      }\r\n\r\n      ratingSort = () =>{\r\n        let newArr = [...this.state.products];\r\n       \r\n        newArr  = newArr.sort((a,b) => {\r\n\r\n            let ratingA = a.rating;\r\n            let ratingB = b.rating;\r\n                return (ratingA < ratingB) ? 1 : ((ratingB < ratingA) ? -1 : 0)\r\n                \r\n      });\r\n        this.setState({products: newArr});\r\n    }\r\n\r\n\r\n    updatePrice =  () => {\r\n        let newArr = [...this.state.products];\r\n        for(let i=0;i<newArr.length;i++){\r\n            if(newArr[i].sale)\r\n                newArr[i].price = newArr[i].price- (newArr[i].price*0.2).toFixed(2);\r\n        }\r\n        this.setState({products:newArr})\r\n    }\r\n    updatePriceWithCoupon =  (val) => {\r\n        let tempPrice = this.state.cartTotal;\r\n        if(val===\"12345\"){\r\n            tempPrice = tempPrice-tempPrice*0.1;\r\n        }\r\n        this.setState({cartTotal:tempPrice})\r\n    }\r\n    loadComments = () =>{\r\n        return this.state.posts[0].postsAndCommentsArr\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n               ...this.state, \r\n               handleDetail:this.handleDetail,\r\n               addToCart:this.addToCart,\r\n               openModal:this.openModal,\r\n               closeModal:this.closeModal,\r\n               increment: this.increment,\r\n               decrement:this.decrement,\r\n               removeItem:this.removeItem,\r\n               clearCart:this.clearCart,\r\n               setFilter:this.setFilter,\r\n               getProducts: this.getProducts,\r\n               getHomepageProducts:this.getHomepageProducts,\r\n               setPriceFilter:this.setPriceFilter,\r\n               priceHighToLow:this.priceHighToLow,\r\n               saleSort:this.saleSort,\r\n               ratingSort:this.ratingSort,\r\n               updatePrice:this.updatePrice,\r\n               updatePriceWithCoupon:this.updatePriceWithCoupon,\r\n               loadComments:this.loadComments,\r\n               dbLoad:this.dbLoad,\r\n               setOrder: this.setOrder\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\n\r\nexport {ProductProvider,ProductConsumer};","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\Product.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Title.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Button.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\map\\Map.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\RatingStars.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Register.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Login.js",["249","250","251","252","253"],"import React, { useRef,useState ,useEffect} from 'react'\r\nimport './login.css';\r\nimport Title from '../additionsComp/Title'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../context/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n// import { auth } from \"../../firebase\"\r\n// import firebase from \"firebase/app\"\r\n//import \"firebase/auth\"\r\nimport axios from 'axios'\r\nexport default function Login(props) {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const { loginGoogle , loginFacebook , loginGitHub } = useAuth()\r\n    const history = useHistory();\r\n\r\n\r\n  //   useEffect(() => {\r\n  //     if (props.match.params.token){\r\n  //         localStorage.setItem(\"token\",JSON.stringify(props.match.params.token))\r\n  //     }\r\n\r\n  // }, [props])\r\n\r\n     function googleLogin (){\r\n       window.location.href = \"http://localhost:5000/auth/google\"\r\n      }\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // let Authorization = `bearer ${JSON.parse(localStorage.getItem(\"token\"))}`\r\n\r\n        try {\r\n          // setError(\"\")\r\n          // setLoading(true)\r\n          // await login(emailRef.current.value, passwordRef.current.value)\r\n          console.log(emailRef.current.value,passwordRef.current.value)\r\n          await axios.post(\"/auth/login\", {email:emailRef.current.value, password:passwordRef.current.value})\r\n          .then(\r\n            async (response)  =>{\r\n              console.log(response)\r\n              let userEmail = response.config.data\r\n              userEmail = JSON.parse(userEmail);\r\n                if (response.data.token){\r\n                    localStorage.setItem(\"token\",JSON.stringify(response.data.token))\r\n                    localStorage.setItem(\"username\",JSON.stringify(response.data.username))\r\n                    localStorage.setItem(\"usernameID\",JSON.stringify(response.data.userId))\r\n                    window.location.href = \"/\";\r\n\r\n                }\r\n                else{\r\n                    console.log(response.data.message)\r\n                }\r\n            }\r\n          )\r\n        } catch {\r\n          setError(\"Failed to log in\")\r\n        }\r\n        \r\n        setLoading(false)\r\n      }\r\n        return (\r\n            <>\r\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Open+Sans\" />\r\n            <Title name=\"log\" title=\"in\" />\r\n            <Card style = {{width:\"30%\" , marginLeft:\"33%\"}}>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\" >\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required name=\"password\" autoComplete=\"on\"/>\r\n                </Form.Group>\r\n                    <Button id=\"login\" disabled={loading} className=\"w-100 btn-success\" type=\"submit\">\r\n                    Log In\r\n                    </Button>\r\n              </Form>\r\n              <Button className=\"google-btn btn-warning mt-3 w-100\" \r\n                        onClick={(e)=> {\r\n                          googleLogin(e);\r\n                            }}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img alt=\"google-icon\" className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\r\n                        </div>\r\n                        <p className=\"btn-text\">Log in with google</p>\r\n                </Button>\r\n                <Button className=\"google-btn btn-primary mt-3 w-100\" onClick = {loginFacebook}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img alt=\"facebook-icon\" style = {{width:\"25px\" , height:\"25px\" , marginBottom:\"3px\"}}className=\"google-icon\" src=\"https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Facebook_colored_svg_copy-512.png\"/>\r\n                        </div>\r\n                        <p className=\"btn-text\">Log in with facebook</p>\r\n                </Button>\r\n                <Button className=\"google-btn btn-dark mt-3 w-100\" onClick = {loginGitHub}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img alt=\"github-icon\" style = {{width:\"25px\" , height:\"25px\" , marginBottom:\"3px\"}}className=\"google-icon\" src=\"https://image.flaticon.com/icons/png/512/25/25231.png\"/>\r\n                        </div>\r\n                        <p className=\"btn-text\">Log in with github</p>\r\n                </Button>\r\n              <div className=\"w-100 text-center mt-3\">\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n              <div className=\"w-100 text-center mt-2\">\r\n                    Need an account? <Link to=\"/register\">Sign Up</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          \r\n          </>\r\n            \r\n        )\r\n}\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Profile.js",["254","255","256"],"import React, { useRef, useState,useEffect } from \"react\"\r\nimport { Form, Button, Alert } from \"react-bootstrap\"\r\nimport './profile.css';\r\nimport axios from 'axios'\r\n\r\nexport default function Profile() {\r\n  const emailRef = useRef();\r\n    const passwordRef= useRef();\r\n    const passwordConfirmRef= useRef();\r\n    const firstNameRef= useRef();\r\n    const lastNameRef= useRef();\r\n    const phoneNumberRef= useRef();\r\n    const addressRef= useRef();\r\n    const cityRef= useRef();\r\n    const countryRef= useRef();\r\n    const postalCodeRef  = useRef()\r\n    const imgRef = useRef()\r\n  // const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  // const history = useHistory()\r\n  const [user, setUser] = useState(\"\")\r\n  // const [photo, setPhoto] = useState(\"\")\r\n  let userId;\r\n  useEffect(()=> {\r\n     userId = JSON.parse(localStorage.getItem(\"usernameID\"))\r\n    axios.get(`http://localhost:5000/api/user/${userId}`, {userId:userId}).then(response=>{\r\n      setUser(response.data)\r\n    })\r\n  },[])\r\n\r\n  async function handleSubmit(e) {\r\n    \r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    var formData = new FormData();\r\n     // var imagefile = imgRef.current.files[0]\r\n      // console.log(imgRef.current.files[0])\r\n      // formData.append(\"yourImage\", imagefile);\r\n      formData.append(\"id\", user.id);\r\n      formData.append(\"activity\", user.activity);\r\n      formData.append(\"email\", emailRef.current.value)\r\n      formData.append(\"password\", passwordRef.current.value)\r\n      formData.append(\"firstName\", firstNameRef.current.value)\r\n      formData.append(\"lastName\", lastNameRef.current.value)\r\n      formData.append(\"phone\", phoneNumberRef.current.value)\r\n      formData.append(\"state\", countryRef.current.value)\r\n      formData.append(\"city\", cityRef.current.value)\r\n      formData.append(\"zip\", postalCodeRef.current.value)\r\n      formData.append(\"address\", addressRef.current.value)\r\n      formData.append(\"cart\", user.cart)\r\n      formData.append(\"posts\", user.post)\r\n      //try {\r\n        setError(\"\")\r\n        console.log(user.id)\r\n        axios.put(`http://localhost:5000/api/user/${user.id}`, \r\n        {\r\n          id:user.id,\r\n          address:addressRef.current.value,\r\n          city:cityRef.current.value,\r\n          state:countryRef.current.value,\r\n          email:emailRef.current.value,\r\n          firstName:firstNameRef.current.value,\r\n          lastName:lastNameRef.current.value,\r\n          password:passwordRef.current.value,\r\n          phone:phoneNumberRef.current.value,\r\n          zip:postalCodeRef.current.value,\r\n          //yourImage:imgRef.current.files[0],\r\n          cart: user.cart,\r\n          posts:user.posts,\r\n          activity: user.activity\r\n           //formData\r\n        })//,{headers:{'Content-Type': 'multipart/form-data;boundary=<calculated when request is sent>'},'Authorization':'Bearer '+ localStorage.getItem('token') })//,'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') }}//{ 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } }\r\n      .then(() =>{\r\n        alert(\"Profile Updated\")\r\n      })\r\n      .catch(err=>{\r\n        console.log(err)\r\n      })\r\n     // } catch {\r\n       // setError(\"Failed to create an account - password or email already exist\")\r\n      //}\r\n      // .then(response=>{\r\n      //   console.log(response.data)\r\n      //   setUser(response.data)\r\n      //   // setPhoto(response.data.yourImage)\r\n        \r\n      //   setLoading(false)\r\n      // })\r\n    \r\n  }\r\n  function clear(){\r\n    document.getElementById(\"input-first-name\").value = '';\r\n    document.getElementById(\"input-last-name\").value = '';\r\n    document.getElementById(\"inputEmail\").value = \"\";\r\n    document.getElementById(\"inputPassword\").value = \"\";\r\n    document.getElementById(\"inputePasswordConfirm\").value = \"\";\r\n    document.getElementById(\"input-address\").value = \"\";\r\n    document.getElementById(\"input-city\").value = \"\";\r\n    document.getElementById(\"input-country\").value = \"\";\r\n    document.getElementById(\"input-postal-code\").value = \"\";\r\n    document.getElementById(\"input-phone\").value = \"\";\r\n\r\n    \r\n       \r\n  }\r\n  return (\r\n    <>\r\n\r\n          <div className=\"main-content\">\r\n            <div className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\" style={{minHeight: \"600px\", backgroundImage: \"\", backgroundSize: \"cover\" ,backgroundPosition: \"center top\"}}>\r\n              <span className=\"mask bg-gradient-default opacity-8\"></span>\r\n              <div className=\"container-fluid d-flex align-items-center\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-7 col-md-10\">\r\n                    <h1 className=\"display-2 text-white\">Hello &nbsp;\r\n                     {user.firstName}</h1>\r\n                    <p className=\"text-white mt-0 mb-5\">This is your profile page. You can see the progress you've made with your work and manage your projects or assigned tasks</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container-fluid mt--7\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-4 order-xl-2 mb-5 mb-xl-0\">\r\n                  <div className=\"card card-profile shadow\">\r\n                    <div className=\"row justify-content-center\">\r\n                      <div className=\"col-lg-3 order-lg-2\">\r\n                        <div className=\"card-profile-image mb-5\">\r\n                            <img  alt=\"profileImage\" src={`http://localhost:5000/uploads/${user.yourImage}`} className=\"rounded-circle\"/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-header text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\" style={{marginTop:\"100px\"}}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"card-profile-stats d-flex justify-content-center mt-md-6\">\r\n                            <div className=\"text-center\">\r\n                              <h3>\r\n                              {user.firstName +' '+ user.lastName}\r\n                              </h3>\r\n                              <div className=\"h5 font-weight-300\">\r\n                                <i className=\"ni location_pin mr-2\"></i>Bucharest, Romania\r\n                              </div>\r\n                              <div className=\"h5 mt-4\">\r\n                                <i className=\"ni business_briefcase-24 mr-2\"></i>Solution Manager - Creative Tim Officer\r\n                              </div>\r\n                              <div>\r\n                                <i className=\"ni education_hat mr-2\"></i>University of Computer Science\r\n                              </div>\r\n                            </div>\r\n                          </div> \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-8 order-xl-1\">\r\n                  <div className=\"card \">\r\n                    <div className=\"card-header bg-white border-0\">\r\n                      <div className=\"row align-items-center\">\r\n                        <div className=\"col-8\">\r\n                          <h2 className=\"mb-0\">My account</h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body bg-white\">\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                      <Form onSubmit={handleSubmit}>\r\n                        <h6 className=\"heading-small text-muted mb-4\">User information</h6>\r\n                        <div className=\"pl-lg-4\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group focused\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-first-name\">First name</label>\r\n                                <input ref={firstNameRef} type=\"text\" id=\"input-first-name\" className=\"form-control form-control-alternative\" placeholder=\"First name\" defaultValue={user.firstName} required/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-last-name\">Last name</label>\r\n                                <input ref={lastNameRef} type=\"text\" id=\"input-last-name\" className=\"form-control form-control-alternative\" placeholder=\"Last name\" defaultValue={user.lastName} required/>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group focused\">\r\n                                {/* <label className=\"form-control-label\" htmlFor=\"input-email\">Email address</label>\r\n                                <input type=\"email\" id=\"input-email\" className=\"form-control form-control-alternative\"  defaultValue={currentUser.email}/> */}\r\n                               <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control id=\"inputEmail\" type=\"email\" ref={emailRef} placeholder=\"email\" required defaultValue={user.email}/>\r\n                              </Form.Group>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group focused\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-phone\">Phone number</label>\r\n                                <input ref={phoneNumberRef} type=\"text\" id=\"input-phone\" className=\"form-control form-control-alternative\" required placeholder=\"Phone number\" defaultValue={user.phone}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group focused\">\r\n                              <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control id=\"inputPassword\" type=\"password\" placeholder=\"Password\" ref={passwordRef} required />\r\n                              </Form.Group>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                              <div className=\"form-group focused\">\r\n                              <Form.Group id=\"password-confirm\">\r\n                                <Form.Label>Password Confirmation</Form.Label>\r\n                                <Form.Control id=\"inputePasswordConfirm\" type=\"password\" placeholder=\"Confirm Password\" ref={passwordConfirmRef} required />\r\n                              </Form.Group>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <hr className=\"my-4\"/>\r\n                        <h6 className=\"heading-small text-muted mb-4\">Contact information</h6>\r\n                        <div className=\"pl-lg-4\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"form-group focused\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-address\">Address</label>\r\n                                <input id=\"input-address\" ref={addressRef}  className=\"form-control form-control-alternative\" required placeholder=\"Home Address\" defaultValue={user.address} type=\"text\"/>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                              <div className=\"form-group focused\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-city\">City</label>\r\n                                <input ref={cityRef} type=\"text\" id=\"input-city\" className=\"form-control form-control-alternative\" placeholder=\"City\" required defaultValue={user.city}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                              <div className=\"form-group focused\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-country\">Country</label>\r\n                                <input ref={countryRef} type=\"text\" id=\"input-country\" className=\"form-control form-control-alternative\" placeholder=\"Country\" required defaultValue={user.state}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-country\">Postal code</label>\r\n                                <input ref={postalCodeRef} type=\"text\" id=\"input-postal-code\" className=\"form-control form-control-alternative\" required defaultValue={user.zip}/>\r\n                              </div>\r\n                            </div>\r\n                            {/* <div className=\"col-lg-4\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-control-label\" htmlFor=\"input-country\">Image Profile</label>\r\n                                <input type=\"file\" ref={imgRef} className=\"form-control\" name=\"yourImage\" defaultValue={user.yourImage}/>\r\n                              </div>\r\n                            </div> */}\r\n                          </div>\r\n                          <div className=\"w-20 text-center mt-2\">                                \r\n                          <Button disabled={loading} className=\"btn\" type=\"submit\">\r\n                                  Update\r\n                           </Button>\r\n                            <Button style={{background:\"red\"}} onClick={clear}>Clear</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\AdminApp.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Account.js",["257","258"],"import  React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField, DeleteWithConfirmButton,EditButton,Edit,Create,SimpleForm,SelectInput,TextInput,NumberField,NumberInput,PasswordInput,required,minLength,\r\n    maxLength,regex,email,BooleanField,BooleanInput,SimpleShowLayout,Show,ArrayField,ImageField,ImageInput} from 'react-admin';\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\nimport axios from 'axios'\r\n\r\nconst validateFirstName = [required(), minLength(2), maxLength(15)];\r\nconst validateEmail =[required(), email()];\r\nconst validateZipCode = [required(),regex(/^\\d{6}$/, 'Must be a valid Zip Code - 6 numbers')];\r\nconst validatePhoneNumber = [required(),regex(/^(([+]{0,1}\\d{2})|\\d?)[\\s-]?[0-9]{2}[\\s-]?[0-9]{3}[\\s-]?[0-9]{4}$/, \r\n'Must be a valid phone number. Tested for:+94 77 531 2412, +94775312412, 077 531 2412, 0775312412 ')];\r\nconst validateAddress = [required(),regex(/^[a-zA-Z]+\\s[a-zA-Z0-9]+/, 'Must be a valid address')];\r\nconst validateCity = [required(),regex(/^[a-zA-Z]*$/, 'Must be a valid city')];\r\nconst validateCountry = [required(),regex(/^[a-zA-Z]*$/, 'Must be a valid country')];\r\nconst validatePassword = [required(),regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/, \r\n'Must be a valid password:Min 1 uppercase letter. Min 1 lowercase letter. Min 1 special character.Min 1 number.Min 8 characters. Max 30 characters.')];\r\n\r\nconst CartUserDetails = props => (\r\n    <Show {...props} title=\" cart lists\" >\r\n        <SimpleShowLayout>\r\n        <TextField source=\"firstName\" />\r\n            <ArrayField source=\"cart.items\">\r\n                 <Datagrid>\r\n                <TextField source=\"count\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\nexport const UsersList = props => {\r\n   return( \r\n   <List filters={<MyFilter />} {...props} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>}>\r\n\r\n                <Datagrid\r\n                      expand={<CartUserDetails />}>\r\n                    <TextField source=\"id\" />\r\n                    <ImageField source=\"yourImage\"/>\r\n                     {/* src={`http://localhost:5000/uploads/${user.yourImage}`} */}\r\n                    <TextField source=\"firstName\" />\r\n                    <TextField source=\"lastName\" />\r\n                    <EmailField source=\"email\"/>\r\n                    <NumberField source=\"phone\" />\r\n                    <TextField source=\"state\" />\r\n                    <TextField source=\"city\" />\r\n                    <TextField source=\"address\" />\r\n                    <NumberField source=\"zip\" />\r\n                    <TextField source=\"role\" />\r\n                    <BooleanField source=\"activity\"/>\r\n                    <EditButton />\r\n                    <DeleteWithConfirmButton/>\r\n                </Datagrid>\r\n            \r\n    </List>\r\n\r\n\r\n\r\n)};\r\n\r\nexport const UsersEdit = props => {\r\n   return( <Edit title=\"Edit User\" {...props} undoable={false}   toolbar={<CustomToolbar />}>\r\n        <SimpleForm >\r\n           <TextInput  disabled source=\"id\" />\r\n           {/* <ImageInput   source=\"yourImage\" onChange={(e)=>{ \r\n                   console.log(\"AGASFASFASFASFA\")\r\n                   const formData = new FormData();\r\n                   let file = document.getElementById(\"yourImage\").files[0]\r\n                   console.log( document.getElementById(\"yourImage\"))\r\n                    //formData.append(\"title\", this.state.title);\r\n                    formData.append(\"file\", file);\r\n                    axios.post(\"/api/uploadfile\", formData, {headers:{'Content-Type': 'multipart/form-data'}})\r\n                //    .then(res => console.log(res.data))\r\n                //    .catch(err => console.error(err));\r\n\r\n            }}>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>   */}\r\n           <TextInput label=\"First Name\" validate={validateFirstName}  source=\"firstName\" />\r\n           <TextInput label=\"Last Name\" validate={validateFirstName}  source=\"lastName\" />\r\n           <TextInput name=\"email\" validate={validateEmail} source=\"email\" />\r\n           <NumberInput   validate={validatePhoneNumber} source=\"phone\" />\r\n           <TextInput validate={validateCountry}   source=\"state\" />\r\n           <TextInput validate={validateCity}   source=\"city\" />\r\n           <TextInput validate={validateAddress}   source=\"address\" />\r\n            <NumberInput label=\"Zip Code\" validate={validateZipCode}  source=\"zip\" />\r\n           <SelectInput defaultValue=\"customer\" source=\"role\" choices={[\r\n                { id: 'Admin', name: 'Admin' },\r\n                { id: 'Customer', name: 'Customer' },\r\n                { id: 'Site Owner', name: 'Site Owner' },\r\n                ]} />\r\n            <BooleanInput source=\"active\"/>\r\n           \r\n        </SimpleForm>\r\n    </Edit>)\r\n};\r\n\r\nexport const UsersCreate = props => {\r\n   return( \r\n   <Create   title=\"Create a User\" {...props}>\r\n        <SimpleForm  >\r\n            <TextInput validate={validateFirstName}  source=\"firstName\"/>\r\n            <TextInput validate={validateFirstName}  source=\"lastName\"/>\r\n            <TextInput name=\"email\"  label=\"Email\" validate={validateEmail} source=\"email\"/>\r\n            <NumberInput  validate={validatePhoneNumber}  source=\"phone\" />\r\n            <PasswordInput  validate={validatePassword} source=\"password\" initiallyVisible />\r\n            <TextInput  validate={validateCountry} source=\"state\" />\r\n            <TextInput  validate={validateCity} source=\"city\" />\r\n            <TextInput  validate={validateAddress} source=\"address\" />\r\n            <NumberInput label=\"Zip Code\" validate={validateZipCode}  source=\"zip\" />\r\n            <SelectInput defaultValue=\"customer\" source=\"role\" choices={[\r\n                { id: 'Admin', name: 'Admin' },\r\n                { id: 'Customer', name: 'Customer' },\r\n                { id: 'Site Owner', name: 'Site Owner' },\r\n                ]} />\r\n            <BooleanInput source=\"activity\"/>   \r\n            {/* <ImageInput  source=\"yourImage\" >\r\n                <ImageField source=\"src\" title=\"title\" />\r\n           </ImageInput>  */}\r\n       </SimpleForm>\r\n    </Create>)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Dashboard.js",["259","260","261","262","263","264","265","266"],"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { Line ,Bar} from 'react-chartjs-2';\r\nimport { Card } from '@material-ui/core';\r\nimport DollarIcon from '@material-ui/icons/AttachMoney';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport CardDashboard from './CardDashboard'\r\nimport axios from 'axios'\r\nconst Dashboard = () => {\r\n  const [ordersIncome, setOrder] = useState(\"\")\r\n  const [AmontsOfItemsInCart, setAmontsOfItemsInCart] = useState(\"\")\r\n  const [amountOfUsers, setAmountOfUsers] = useState(\"\")\r\n  const [allProducts, setAllProducts] = useState(\"\")\r\n  const [numberOfHelmets, setnumberOfHelmets] = useState(\"\")\r\n  const [numberOfScooters, setAllScooters] = useState(\"\")\r\n  const [numberOfCubs, setAllCubs] = useState(\"\")\r\n  const [numberOfBikes, setAllBikes] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let allOrders = await axios.get(\"/api/order\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      allOrders = allOrders.data\r\n      let sum = 0;\r\n      for(let i=0;i<allOrders.length;i++){\r\n        sum = allOrders[i].payment + sum\r\n      }\r\n      console.log(typeof sum)\r\n      setOrder(Number.parseFloat(sum).toFixed(2));\r\n      let allUsers = await axios.get(\"/api/user\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      setAmountOfUsers(allUsers.data.length)\r\n      let allCarts = allUsers.data.map((user)=>{\r\n        return (user.cart)\r\n      })\r\n      let AmountOfProductsInCarts=0;\r\n      for(let i=0;i<allCarts.length;i++){\r\n        AmountOfProductsInCarts = AmountOfProductsInCarts+allCarts[i].items.length\r\n      }\r\n      setAmontsOfItemsInCart(AmountOfProductsInCarts)\r\n      let products = await axios.get(\"/api/product\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      products = products.data\r\n      setAllProducts(products)\r\n      let helmets = 0 , scooters=0,cubs=0,bikes=0;\r\n\r\n      for(let i =0;i<products.length;i++){\r\n        if(products[i].type=='helmet'){\r\n          helmets++;\r\n        }\r\n        else if(products[i].type=='cub'){\r\n          cubs++;\r\n        }\r\n        else if(products[i].type=='scooter'){\r\n          scooters++;\r\n        }\r\n        else if(products[i].type=='bike'){\r\n          bikes++;\r\n        }\r\n      }\r\n      setnumberOfHelmets(helmets)\r\n      setAllScooters(scooters)\r\n      setAllCubs(cubs)\r\n      setAllBikes(bikes)\r\n  }\r\n  fetchData()\r\n  })\r\n  const rand = () => Math.round(Math.random() * 10)\r\n  const colors = [\"white\", \"black\", \"green\", 'yellow', \"blue\", \"pink\", \"purple\" , \"brown\", \"Aqua\",\"orange\"]\r\n  const backgourdColors = [\"black\",\"white\", \"blue\" , \"green\", 'yellow', \"purple\", \"Aqua\",\"orange\"]\r\n    const data = {\r\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"],\r\n        datasets: [\r\n          {\r\n            label: \"Purchases for 2021\",\r\n            data: [rand(), rand(), rand(), rand()],\r\n            data: [10, 3, 7, 4],\r\n            fill: true,\r\n            // backgroundColor: backgourdColors[rand()],//\"rgba(64,220,36,0)\",\r\n            // borderColor: colors[rand()]\r\n             borderColor: \"gold\"\r\n          },\r\n          {\r\n            label: \"Purchases for 2020\",\r\n            // data: [rand(), rand(), rand(), rand()],\r\n            data: [4, 20, 6, 16],\r\n            fill: true,\r\n           // backgroundColor: \"rgba(220,64,36,0)\",\r\n           borderColor: \"silver\"\r\n          }\r\n\r\n        ]\r\n      };\r\n      const dataProducts = {\r\n        labels: [\"Helmats\", \"Scooters\", \"Bikes\", \"Cubs\"],\r\n        datasets: [\r\n          {\r\n            label: \"Products In Store\",\r\n            data: [numberOfHelmets, numberOfScooters,numberOfBikes, numberOfCubs],\r\n            fill: true,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n\r\n        ]\r\n      };\r\n      return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row justify-content-center\">\r\n                <CardDashboard icon={DollarIcon} title=\"All orders income in dollars\" subtitle={ordersIncome}  />\r\n                <CardDashboard icon={ShoppingCartIcon} title=\"Amount of products in carts\" subtitle={AmontsOfItemsInCart}/>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <CardDashboard icon={PeopleIcon} title=\"Number of users\" subtitle={amountOfUsers} />\r\n            </div>\r\n            <div className=\"my-2 row justify-content-center\">\r\n                <Card className=\"col-6\">\r\n                    <Line data={data} options={{\r\n                        title: { text:\"Orders\" ,display: true },\r\n                        scales: { yAxes: [ {ticks:{beginAtZero:true}} ] }\r\n                    }}/>    \r\n                </Card>\r\n\r\n                <Card className=\"col-6\">\r\n                    <Bar data={dataProducts} options={{\r\n                        title: { text:\"All products by types\" ,display: true },\r\n                        \r\n                    }}/>    \r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CustomForm.js",[],["267","268"],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\ProductsStore.js",["269","270","271"],"import * as React from \"react\";\r\n\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\n\r\nimport { List, Datagrid, TextField,EditButton, Edit, Create,SimpleForm,SelectInput,TextInput, NumberField,NumberInput,required, minLength,\r\n        maxLength,regex,DeleteWithConfirmButton,BooleanField,BooleanInput,ImageInput,ImageField } from 'react-admin';\r\nconst validatePrice = [required(),regex(/^\\d{0,8}(\\.\\d{1,4})?$/, \r\n'Must be a valid price number (contain only number).')];\r\nconst validateRating = [required(),regex(/[0-5]/, 'Must be a valid rating integer number between 0-5'),minLength(0), maxLength(5)];\r\nconst validateCompany =[required()]\r\nconst validateTitle =[required()]\r\nconst validateType =[required()]\r\nconst validateImg=[required()]\r\nconst validateInfo=[required()]\r\n\r\n\r\n\r\nexport const ProductsList = props => (\r\n    \r\n    <List filters={<MyFilter/>} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>} {...props}>\r\n                <Datagrid>\r\n                    <TextField source=\"id\" />\r\n                    <TextField source=\"title\"/>\r\n                    <ImageField source=\"img\"/>\r\n                    <NumberField source=\"price\" />\r\n                    <TextField source=\"company\" />\r\n                    <TextField source=\"type\"/>\r\n                    <TextField source=\"info\"/>\r\n                    <NumberField source=\"rating\"/>\r\n                    <BooleanField source=\"sale\"/>\r\n                    <TextField source=\"userId\"/>\r\n                    <EditButton />\r\n                    <DeleteWithConfirmButton/>    \r\n                </Datagrid>\r\n    </List>\r\n);\r\nexport const ProductsEdit = props => {\r\n    // const notify = useNotify();\r\n    // const refresh = useRefresh();\r\n    // const redirect = useRedirect();\r\n\r\n    // const onSuccess = () => {\r\n    //     notify(`Changes saved`)\r\n    //     redirect('/storeProducts');\r\n    //     refresh();\r\n    // };\r\n    var userId = localStorage.getItem(\"usernameID\");\r\n\r\n   return( <Edit  title=\"Edit Product\" {...props} undoable={false} toolbar={<CustomToolbar />}>\r\n        <SimpleForm >\r\n           <TextInput  disabled source=\"id\" />\r\n           <TextInput validate={validateCompany}  source=\"company\" />\r\n           <SelectInput validate={validateType}  source=\"type\" choices={[\r\n                { id: 'helmet', name: 'helmet' },\r\n                { id: 'bike', name: 'Bike' },\r\n                { id: 'scooter', name: 'scooter' },\r\n                ]} />\r\n            {/* <ImageInput validate={validateImg} required source=\"img\" >\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>            */}\r\n            <TextInput validate={validateInfo} required source=\"info\" />\r\n           <NumberInput validate={validatePrice} source=\"price\" />\r\n           <NumberInput validate={validateRating} source=\"rating\" />\r\n           <TextInput validate={validateTitle}  required source=\"title\" />\r\n           <BooleanInput defaultValue={false} source=\"sale\"/>\r\n           <TextInput disabled  source=\"userId\" />\r\n\r\n        </SimpleForm>\r\n    </Edit>)\r\n};\r\nexport const ProductsCreate = props => {\r\n    var userID = localStorage.getItem(\"usernameID\");\r\n    userID=JSON.parse(userID)\r\n   return( <Create  title=\"Create a Product\" {...props}>\r\n        <SimpleForm >\r\n        <TextInput validate={validateCompany}  source=\"company\" />\r\n        <TextInput validate={validateTitle}  source=\"title\" />\r\n        <SelectInput validate={validateType} source=\"type\" choices={[\r\n                { id: 'helmet', name: 'helmet' },\r\n                { id: 'bike', name: 'Bike' },\r\n                { id: 'scooter', name: 'scooter' },\r\n                ]} />\r\n        {/* <ImageInput validate={validateImg} required source=\"img\" >\r\n            <ImageField source=\"src\" title=\"title\" />\r\n        </ImageInput> */}\r\n        <TextInput validate={validateInfo} source=\"info\" />\r\n        <NumberInput  validate={validatePrice} source=\"price\" />\r\n        <NumberInput validate={validateRating} source=\"rating\" />\r\n        <BooleanInput defaultValue={false} source=\"sale\"/>\r\n        <TextInput   source= {userID} />\r\n       </SimpleForm>\r\n    </Create>)\r\n};\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Order.js",["272"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,ReferenceInput,\r\n    SelectInput,TabbedForm,FormTab,ArrayField,ImageField} from 'react-admin';\r\n\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\n\r\n\r\nexport const OrderList = props => (\r\n    <List {...props} filters={<MyFilter/>} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>}>\r\n        <Datagrid >\r\n            <TextField source=\"id\" label=\"order id\"/>\r\n            <TextField source=\"userOrder.firstName\" label=\"first name\"/>\r\n            <TextField source=\"userOrder.lastName\" label=\"last name\"/>\r\n            <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n            <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n            <TextField source=\"orderStatus\"/>\r\n            <TextField source=\"date\" label=\"date\"/>\r\n            <TextField source=\"time\" label=\"time\"/>\r\n            <TextField source=\"payment\" label=\"payment\"/> \r\n            <TextField source=\"specialReq\" label=\"specialReq\"/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const OrderEdit = props => {\r\n    return(\r\n        <Edit {...props} toolbar={<CustomToolbar />}>\r\n            <TabbedForm>\r\n\r\n                <FormTab label=\"cart\">\r\n                    <ArrayField source=\"cart\">\r\n                        <Datagrid >\r\n                            <TextField source=\"_id\" label=\"productID\"/>\r\n                            <TextField source=\"title\" label=\"title\"/>\r\n                            <ImageField source=\"img\" label=\"image\"/>\r\n                            <TextField source=\"count\" label=\"count\"/>\r\n                            <TextField source=\"price\" label=\"price\"/>\r\n                        </Datagrid>\r\n                    </ArrayField>\r\n                </FormTab>\r\n\r\n                <FormTab label=\"user order\">\r\n\r\n                    <TextField source=\"userOrder.firstName\" label=\"first name\"/>\r\n                    <TextField source=\"userOrder.lastName\" label=\"last name\"/>\r\n                    <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n                    <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n                    <TextField source=\"userOrder.city\" label=\"city\"/>\r\n                    <TextField source=\"userOrder.street\" label=\"street\"/>\r\n                    <TextField source=\"userOrder.zip\" label=\"zip\"/>\r\n                    \r\n                </FormTab>\r\n                <FormTab label=\"order details\">\r\n\r\n                    <TextField source=\"date\" label=\"date\"/>\r\n                    <TextField source=\"time\" label=\"time\"/>\r\n                    <TextField source=\"payment\" />\r\n                    <SelectInput  source=\"orderStatus\" choices={[\r\n                        { id: 'Processing', name: 'Processing' },\r\n                        { id: 'Ready', name: 'Ready' },\r\n                        { id: 'Delivered', name: 'Delivered' },\r\n                        ]} />  \r\n                    \r\n                </FormTab>\r\n\r\n            </TabbedForm>\r\n        </Edit>\r\n    );\r\n} \r\n\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Spinner.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Coupons.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CardDashboard.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Tickets.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\OptionsBar.js",[],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":7,"column":10,"nodeType":"279","messageId":"280","endLine":7,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":80,"column":36,"nodeType":"283","messageId":"284","endLine":80,"endColumn":38},{"ruleId":"281","severity":1,"message":"282","line":84,"column":55,"nodeType":"283","messageId":"284","endLine":84,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":86,"column":61,"nodeType":"283","messageId":"284","endLine":86,"endColumn":63},{"ruleId":"285","severity":1,"message":"286","line":36,"column":6,"nodeType":"287","endLine":36,"endColumn":8,"suggestions":"288"},{"ruleId":"277","severity":1,"message":"289","line":75,"column":9,"nodeType":"279","messageId":"280","endLine":75,"endColumn":14},{"ruleId":"277","severity":1,"message":"290","line":77,"column":9,"nodeType":"279","messageId":"280","endLine":77,"endColumn":13},{"ruleId":"277","severity":1,"message":"291","line":82,"column":9,"nodeType":"279","messageId":"280","endLine":82,"endColumn":18},{"ruleId":"277","severity":1,"message":"292","line":83,"column":9,"nodeType":"279","messageId":"280","endLine":83,"endColumn":21},{"ruleId":"277","severity":1,"message":"293","line":85,"column":9,"nodeType":"279","messageId":"280","endLine":85,"endColumn":14},{"ruleId":"277","severity":1,"message":"294","line":87,"column":9,"nodeType":"279","messageId":"280","endLine":87,"endColumn":19},{"ruleId":"277","severity":1,"message":"290","line":111,"column":9,"nodeType":"279","messageId":"280","endLine":111,"endColumn":13},{"ruleId":"277","severity":1,"message":"295","line":114,"column":9,"nodeType":"279","messageId":"280","endLine":114,"endColumn":20},{"ruleId":"277","severity":1,"message":"291","line":120,"column":9,"nodeType":"279","messageId":"280","endLine":120,"endColumn":18},{"ruleId":"277","severity":1,"message":"292","line":121,"column":9,"nodeType":"279","messageId":"280","endLine":121,"endColumn":21},{"ruleId":"277","severity":1,"message":"293","line":123,"column":9,"nodeType":"279","messageId":"280","endLine":123,"endColumn":14},{"ruleId":"277","severity":1,"message":"294","line":125,"column":9,"nodeType":"279","messageId":"280","endLine":125,"endColumn":19},{"ruleId":"277","severity":1,"message":"289","line":143,"column":11,"nodeType":"279","messageId":"280","endLine":143,"endColumn":16},{"ruleId":"277","severity":1,"message":"290","line":146,"column":11,"nodeType":"279","messageId":"280","endLine":146,"endColumn":15},{"ruleId":"277","severity":1,"message":"291","line":153,"column":11,"nodeType":"279","messageId":"280","endLine":153,"endColumn":20},{"ruleId":"277","severity":1,"message":"292","line":154,"column":11,"nodeType":"279","messageId":"280","endLine":154,"endColumn":23},{"ruleId":"277","severity":1,"message":"293","line":156,"column":11,"nodeType":"279","messageId":"280","endLine":156,"endColumn":16},{"ruleId":"277","severity":1,"message":"294","line":158,"column":11,"nodeType":"279","messageId":"280","endLine":158,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":54,"column":35,"nodeType":"298","messageId":"299","endLine":54,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":68,"column":35,"nodeType":"298","messageId":"299","endLine":68,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":328,"column":9,"nodeType":"302","endLine":328,"endColumn":19},{"ruleId":"300","severity":1,"message":"301","line":337,"column":9,"nodeType":"302","endLine":337,"endColumn":19},{"ruleId":"296","severity":1,"message":"303","line":338,"column":49,"nodeType":"298","messageId":"304","endLine":338,"endColumn":51},{"ruleId":"277","severity":1,"message":"305","line":1,"column":34,"nodeType":"279","messageId":"280","endLine":1,"endColumn":43},{"ruleId":"277","severity":1,"message":"306","line":14,"column":13,"nodeType":"279","messageId":"280","endLine":14,"endColumn":18},{"ruleId":"277","severity":1,"message":"307","line":17,"column":13,"nodeType":"279","messageId":"280","endLine":17,"endColumn":24},{"ruleId":"277","severity":1,"message":"308","line":18,"column":11,"nodeType":"279","messageId":"280","endLine":18,"endColumn":18},{"ruleId":"277","severity":1,"message":"309","line":46,"column":38,"nodeType":"279","messageId":"280","endLine":46,"endColumn":47},{"ruleId":"277","severity":1,"message":"310","line":17,"column":11,"nodeType":"279","messageId":"280","endLine":17,"endColumn":17},{"ruleId":"277","severity":1,"message":"311","line":20,"column":19,"nodeType":"279","messageId":"280","endLine":20,"endColumn":29},{"ruleId":"285","severity":1,"message":"312","line":26,"column":15,"nodeType":"313","endLine":26,"endColumn":61},{"ruleId":"277","severity":1,"message":"314","line":3,"column":97,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"315","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"316","line":14,"column":10,"nodeType":"279","messageId":"280","endLine":14,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":46,"column":28,"nodeType":"283","messageId":"284","endLine":46,"endColumn":30},{"ruleId":"281","severity":1,"message":"282","line":49,"column":33,"nodeType":"283","messageId":"284","endLine":49,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":52,"column":33,"nodeType":"283","messageId":"284","endLine":52,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":55,"column":33,"nodeType":"283","messageId":"284","endLine":55,"endColumn":35},{"ruleId":"277","severity":1,"message":"317","line":67,"column":9,"nodeType":"279","messageId":"280","endLine":67,"endColumn":15},{"ruleId":"277","severity":1,"message":"318","line":68,"column":9,"nodeType":"279","messageId":"280","endLine":68,"endColumn":24},{"ruleId":"319","severity":1,"message":"320","line":75,"column":13,"nodeType":"321","messageId":"284","endLine":75,"endColumn":17},{"ruleId":"273","replacedBy":"322"},{"ruleId":"275","replacedBy":"323"},{"ruleId":"277","severity":1,"message":"314","line":6,"column":75,"nodeType":"279","messageId":"280","endLine":6,"endColumn":85},{"ruleId":"277","severity":1,"message":"324","line":13,"column":7,"nodeType":"279","messageId":"280","endLine":13,"endColumn":18},{"ruleId":"277","severity":1,"message":"325","line":47,"column":9,"nodeType":"279","messageId":"280","endLine":47,"endColumn":15},{"ruleId":"277","severity":1,"message":"326","line":4,"column":64,"nodeType":"279","messageId":"280","endLine":4,"endColumn":78},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["329"],"'token' is assigned a value but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'accessToken' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'login' is assigned a value but never used.","'loginGoogle' is assigned a value but never used.","'history' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'imgRef' is assigned a value but never used.","'setLoading' is assigned a value but never used.","Assignments to the 'userId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'ImageInput' is defined but never used.","'axios' is defined but never used.","'allProducts' is assigned a value but never used.","'colors' is assigned a value but never used.","'backgourdColors' is assigned a value but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression",["327"],["328"],"'validateImg' is assigned a value but never used.","'userId' is assigned a value but never used.","'ReferenceInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},"Update the dependencies array to be: [props]",{"range":"332","text":"333"},[1037,1039],"[props]"]