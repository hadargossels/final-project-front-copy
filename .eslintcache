[{"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\index.js":"1","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reportWebVitals.js":"2","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\App.js":"3","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\MainPage\\mainPage.jsx":"4","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Footer\\footer.jsx":"5","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Header\\header.jsx":"6","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Gallery\\Gallery.jsx":"7","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Sorter\\Sorter.jsx":"8","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Filter\\Filter.jsx":"9","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\CheckBoxElement\\CheckBoxElement.jsx":"10","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Login\\Login.jsx":"11","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ItemPrice\\ItemPrice.jsx":"12","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\GalleryDisplay\\GalleryDisplay.jsx":"13","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\PlaceAnItem\\PlaceAnItem.jsx":"14","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ItemAbout\\ItemAbout.jsx":"15","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProductFullInfo\\ProductFullInfo.jsx":"16","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Carousel\\Carousel.jsx":"17","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProductShortDesc\\ProductShortDesc.jsx":"18","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Stars\\Stars.jsx":"19","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\HomePage\\home.jsx":"20","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\shopCart\\shopCart.jsx":"21","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\pendingOrders\\pendingOrders.jsx":"22","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\orderSummary\\orderSummary.jsx":"23","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\payment\\payment.jsx":"24","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\PalPal\\paypal.jsx":"25","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blog\\blog.jsx":"26","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blogPost\\blogPost.jsx":"27","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blogFullInfo\\blogFullInfo.jsx":"28","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\contactUs\\contactUs.jsx":"29","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\location\\location.jsx":"30","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\about\\about.jsx":"31","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\modalLogin\\login.jsx":"32","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\signUp\\signUp.jsx":"33","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\firebase.js":"34","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\auth.js":"35","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProtectedRoute\\protectedRout.jsx":"36","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\profile\\profile.jsx":"37","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\actions\\types.js":"38","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\dashboard.jsx":"39","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\users.js":"40","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reducers\\index.js":"41","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\createAdminStore.js":"42","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\store\\store.js":"43","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\products.js":"44","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\posts.js":"45","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reducers\\reducers.js":"46","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\actions\\actions.js":"47","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\orders.js":"48"},{"size":500,"mtime":1614110415218,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":996,"mtime":1614764043381,"results":"52","hashOfConfig":"50"},{"size":2936,"mtime":1615672176754,"results":"53","hashOfConfig":"50"},{"size":1002,"mtime":1613596375182,"results":"54","hashOfConfig":"50"},{"size":7965,"mtime":1615915616038,"results":"55","hashOfConfig":"50"},{"size":3268,"mtime":1615650970707,"results":"56","hashOfConfig":"50"},{"size":950,"mtime":1615713362978,"results":"57","hashOfConfig":"50"},{"size":2105,"mtime":1615716240100,"results":"58","hashOfConfig":"50"},{"size":569,"mtime":1612801048211,"results":"59","hashOfConfig":"50"},{"size":4207,"mtime":1615715962040,"results":"60","hashOfConfig":"50"},{"size":2009,"mtime":1615677263287,"results":"61","hashOfConfig":"50"},{"size":510,"mtime":1612474254720,"results":"62","hashOfConfig":"50"},{"size":805,"mtime":1612798597493,"results":"63","hashOfConfig":"50"},{"size":746,"mtime":1613297118839,"results":"64","hashOfConfig":"50"},{"size":5854,"mtime":1615714179648,"results":"65","hashOfConfig":"50"},{"size":1394,"mtime":1613296964797,"results":"66","hashOfConfig":"50"},{"size":614,"mtime":1612446692365,"results":"67","hashOfConfig":"50"},{"size":425,"mtime":1615714494809,"results":"68","hashOfConfig":"50"},{"size":7741,"mtime":1613469935442,"results":"69","hashOfConfig":"50"},{"size":3221,"mtime":1615677603487,"results":"70","hashOfConfig":"50"},{"size":4304,"mtime":1615678561268,"results":"71","hashOfConfig":"50"},{"size":1629,"mtime":1615713527379,"results":"72","hashOfConfig":"50"},{"size":11923,"mtime":1615916961128,"results":"73","hashOfConfig":"50"},{"size":1017,"mtime":1615713527379,"results":"74","hashOfConfig":"50"},{"size":758,"mtime":1613978006303,"results":"75","hashOfConfig":"50"},{"size":1484,"mtime":1613559187622,"results":"76","hashOfConfig":"50"},{"size":3471,"mtime":1613978046268,"results":"77","hashOfConfig":"50"},{"size":3388,"mtime":1613596082693,"results":"78","hashOfConfig":"50"},{"size":1044,"mtime":1613590935509,"results":"79","hashOfConfig":"50"},{"size":1925,"mtime":1615716168840,"results":"80","hashOfConfig":"50"},{"size":907,"mtime":1614028223848,"results":"81","hashOfConfig":"50"},{"size":4215,"mtime":1615679267137,"results":"82","hashOfConfig":"50"},{"size":710,"mtime":1614764043445,"results":"83","hashOfConfig":"50"},{"size":3013,"mtime":1615916807997,"results":"84","hashOfConfig":"50"},{"size":673,"mtime":1615915547988,"results":"85","hashOfConfig":"50"},{"size":4357,"mtime":1615715535292,"results":"86","hashOfConfig":"50"},{"size":199,"mtime":1615650713025,"results":"87","hashOfConfig":"50"},{"size":2035,"mtime":1615916507088,"results":"88","hashOfConfig":"50"},{"size":2794,"mtime":1615320725586,"results":"89","hashOfConfig":"50"},{"size":143,"mtime":1615650919747,"results":"90","hashOfConfig":"50"},{"size":1941,"mtime":1615650210924,"results":"91","hashOfConfig":"50"},{"size":296,"mtime":1614779564821,"results":"92","hashOfConfig":"50"},{"size":5808,"mtime":1615713527380,"results":"93","hashOfConfig":"50"},{"size":2784,"mtime":1615715672270,"results":"94","hashOfConfig":"50"},{"size":645,"mtime":1615669608254,"results":"95","hashOfConfig":"50"},{"size":1361,"mtime":1615713527380,"results":"96","hashOfConfig":"50"},{"size":3435,"mtime":1615726559507,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1wm8emx",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"100"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"100"},"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\index.js",[],["216","217"],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reportWebVitals.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\App.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\MainPage\\mainPage.jsx",["218"],"import React, { Component } from \"react\";\r\nimport \"./mainPage.css\";\r\nimport Gallery from \"../Gallery/Gallery\";\r\nimport Login from \"../Login/Login\";\r\nimport Home from \"../HomePage/home\";\r\n// import ShopElement from \"../shopCartElement/shopCartElement\"\r\nimport ShopCart from \"../shopCart/shopCart\"\r\nimport Payment from \"../payment/payment\"\r\nimport ProductFullInfo from \"../ProductFullInfo/ProductFullInfo\";\r\nimport Blog from \"../blog/blog\"\r\nimport BlogFullInfo from \"../blogFullInfo/blogFullInfo\"\r\nimport ContactUs from \"../contactUs/contactUs\"\r\nimport About from \"../about/about\"\r\nimport axios from 'axios';\r\nimport SignUp from '../signUp/signUp'\r\nimport Profile from '../profile/profile'\r\nimport {ProtectedRoute} from \"../ProtectedRoute/protectedRout\"\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/dashboard\";\r\n\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemsArray: [],\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <main className=\"bg-light \">\r\n        <div className=\"shadow\" style={{ minHeight: \"800px\" }}>\r\n          <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n            <Route\r\n              exact path=\"/catalog/:id\"\r\n              render={(matchProps) => (\r\n                <ProductFullInfo\r\n                  {...matchProps}\r\n                  {...this.props}\r\n                  itemsArray={this.props.itemsArray}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path={`/catalog?q=`} component={Gallery} />\r\n            <Route\r\n              path=\"/catalog\"\r\n              exact\r\n              render={(matchProps) => (\r\n                <Gallery\r\n                  {...matchProps}\r\n                  {...this.props}\r\n                  itemsArray={this.props.itemsArray}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signUp\" component={SignUp} />\r\n            <Route path=\"/shopcart\" component={ShopCart} />\r\n            <Route path=\"/payment\" component={Payment} />\r\n            <Route exact path=\"/blog\" component={Blog} />\r\n            <Route path=\"/blog/:id\" component={BlogFullInfo}/>\r\n            <Route path=\"/contactUs\" component={ContactUs}/>\r\n            <Route path=\"/about\" component={About}/>\r\n            <ProtectedRoute path=\"/dashboard\" component={Dashboard}/>\r\n            <ProtectedRoute exact path=\"/account/profile\" component={Profile}/>\r\n            <Route path=\"*\" component={()=> \"404 NOT FOUND\"}/>\r\n          </Switch>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    this.loadStore()\r\n  }\r\n\r\n  loadStore(){\r\n    axios.get(\"http://localhost:3000/itemsArray\").then(res => {\r\n            const itemsArray = res.data\r\n            this.setState({itemsArray})\r\n        })\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Footer\\footer.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Header\\header.jsx",["219"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport PendingOrders from \"../pendingOrders/pendingOrders\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport firebaseWrapper from \"../../auth\";\r\nimport { updateUserNavbar } from \"../../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberInBasket: 0,\r\n      orders: null,\r\n    };\r\n    this.addcallSearchRef = this.addcallSearchRef.bind(this);\r\n    this.callSearchRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadOrdersInProcess();\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        let data;\r\n\r\n        await db.ref().on(\"value\", async (snapshot) => {\r\n          \r\n          data = await snapshot.val().users;\r\n\r\n          data = await data[user.uid];\r\n\r\n          const name = (await data.userName) || data.email;\r\n          const role = await data.role;\r\n          \r\n          this.props.updateUserNavbar(name, role);\r\n          \r\n        });\r\n      }\r\n    });\r\n  }\r\n  loadOrdersInProcess() {\r\n    const orders = JSON.parse(localStorage.getItem(\"homefood-ordersInProcess\"));\r\n    const numberInBasket = orders ? orders.length : 0;\r\n    this.setState({ numberInBasket, orders });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <header id=\"head\">\r\n        {/* <Router> */}\r\n\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n          style={gradientTopButtom}\r\n        >\r\n          <h2 id=\"logo\" style={whiteText}>\r\n            Homemade food\r\n          </h2>\r\n          <div className=\"container-sm mx-auto\">\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarTogglerDemo01\"\r\n              aria-controls=\"navbarTogglerDemo01\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n              <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item active\">\r\n                  <NavLink className=\"nav-link\" to=\"/\" exact style={whiteText}>\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/blog\"\r\n                    exact\r\n                    style={whiteText}\r\n                  >\r\n                    Our blog\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <NavLink to=\"/catalog\" className=\"nav-link\" style={whiteText}>\r\n                    View dishes\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n              <form className=\"form-inline my-2 my-lg-0\">\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search your next meal\"\r\n                  aria-label=\"Search\"\r\n                  ref={this.callSearchRef}\r\n                  onChange={this.addcallSearchRef}\r\n                ></input>\r\n                <NavLink\r\n                  to={`/catalog?q=\"${this.state.request}\"`}\r\n                  style={{ color: \"red\" }}\r\n                >\r\n                  <button\r\n                    className=\"castomButtonHover btn btn-outline-light my-2 my-sm-0\"\r\n                    type=\"submit\"\r\n                  >\r\n                    GO!\r\n                  </button>\r\n                </NavLink>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          {this.props.userName ? (\r\n            <div className=\"loginOptions\">\r\n              <span className=\"text-white\">{`Hello, ${this.props.userName}`}</span>\r\n              <Dropdown id=\"profile\">\r\n                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                  <i className=\"p-1 text-white fas fa-user-circle fa-2x\" />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <NavLink className=\"text-dark\" to=\"/account/profile\">\r\n                      Profile\r\n                    </NavLink>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item>\r\n                    <NavLink className=\"text-dark\" to=\"/dashboard\">\r\n                      Dashboard\r\n                    </NavLink>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n\r\n              <div className=\"dropdown\">\r\n                <NavLink to=\"/shopcart\">\r\n                  <div className=\"dropdown-btn shopcart\">\r\n                    <i\r\n                      className=\"ml-2 p-1 fas fa-shopping-cart fa-2x\"\r\n                      style={whiteText}\r\n                    ></i>\r\n                    <span\r\n                      className=\"pr-3 \"\r\n                      style={{ color: \"white\", fontSize: \"23px\" }}\r\n                    >{`${this.state.numberInBasket}`}</span>\r\n                  </div>\r\n                  <div className=\"dropdown-content\">\r\n                    {this.showShortOrderInfo()}\r\n                  </div>\r\n                </NavLink>\r\n              </div>\r\n              <button\r\n                className=\"text-danger btn btn-light my-2 my-sm-0 orangeColor\"\r\n                onClick={() => {\r\n                  firebaseWrapper.logout();\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Log out\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"loginOptions\">\r\n              <NavLink to=\"/login\">\r\n                <button className=\"text-danger btn btn-light my-2 my-sm-0 orangeColor\">\r\n                  Log In\r\n                </button>\r\n              </NavLink>\r\n              <NavLink to=\"/signUp\">\r\n                <button className=\"castomButtonHover ml-2 btn btn-outline-light my-2 my-sm-0\">\r\n                  Sign Up\r\n                </button>\r\n              </NavLink>\r\n              <div className=\"dropdown\">\r\n                <NavLink to=\"/shopcart\">\r\n                  <div className=\"dropdown-btn shopcart\">\r\n                    <i\r\n                      className=\"ml-2 fas fa-shopping-cart fa-2x\"\r\n                      style={whiteText}\r\n                    ></i>\r\n                    <span\r\n                      style={{ color: \"white\", fontSize: \"23px\" }}\r\n                    >{`${this.state.numberInBasket}`}</span>\r\n                  </div>\r\n                  <div className=\"dropdown-content\">\r\n                    {this.showShortOrderInfo()}\r\n                  </div>\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n  showShortOrderInfo() {\r\n    const orders = this.state.orders;\r\n    if (orders)\r\n      return orders.map((order) => {\r\n        return (\r\n          <PendingOrders\r\n            key={Math.random()}\r\n            orderInfo={order.orderInfo}\r\n            fullItemInfo={order.fullItemInfo}\r\n          />\r\n        );\r\n      });\r\n  }\r\n  addcallSearchRef() {\r\n    this.setState({ request: this.callSearchRef.current.value });\r\n  }\r\n}\r\n\r\nconst whiteText = {\r\n  color: \"white\",\r\n};\r\nconst gradientTopButtom = {\r\n  background: \"linear-gradient(rgb(172, 18, 18) , rgb(255, 136, 0))\",\r\n};\r\nconst gradientButtomTop = {\r\n  background: \"linear-gradient(rgb(255, 136, 0), rgb(172, 18, 18))\",\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.global.userName,\r\n  userRole: state.global.userRole,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUserNavbar })(Header);\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Gallery\\Gallery.jsx",["220","221"],"import React, { Component } from \"react\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport GalleryDisplay from \"../GalleryDisplay/GalleryDisplay\";\r\nimport Sorter from \"../Sorter/Sorter\";\r\nimport queryString from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchProducts} from \"../../actions/actions\"\r\n\r\nclass Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filtredArray: [],\r\n      selectedElement: [],\r\n    };\r\n    this.filterArray = this.filterArray.bind(this);\r\n    this.sortMapByInOrder = this.sortMapByInOrder.bind(this);\r\n    this.selectElement = this.selectElement.bind(this);\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const {products} = this.props\r\n  \r\n    return (\r\n      \r\n      <React.Fragment>\r\n        <div className=\"filterResults mt-2 float-right\">\r\n          <Sorter\r\n            sortMapByInOrder={this.sortMapByInOrder}\r\n            itemsArray={products}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <Filter filterArray={this.filterArray} />\r\n          </div>\r\n\r\n          <div className=\"col-10\">\r\n            <div className=\"container pb-5 col-10\">\r\n              <div className=\"row\">\r\n                <GalleryDisplay\r\n                  galleryList={this.state.filtredArray}\r\n                  selectElement={this.state.selectElement}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    this.props.fetchProducts()\r\n    this.initFilter()\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if (this.props.location.search!==prevProps.location.search){\r\n      this.initFilter()\r\n    }\r\n  }\r\n  \r\n  initFilter() {\r\n    let search = queryString.parse(this.props.location.search)   \r\n    if (typeof search.q !== \"undefined\") {\r\n      search = search.q.slice(1, search.q.length - 1).toLowerCase()\r\n      if (!(search.split('').filter(ch => Number(ch)).length) && search!=\"\"){\r\n        let filtred = this.props.products.filter((val) => {\r\n          if (val.name.toLowerCase().includes(search)) {\r\n            return val;\r\n          } else if (val.desc.toLowerCase().includes(search)) {\r\n            return val;\r\n          }\r\n        })\r\n        this.setState({filtredArray:filtred})\r\n        // this.setState((state, props) => ({\r\n        //   filtredArray: [...state.filtredArray, { }]\r\n        // }));\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n  sortMapByInOrder(by, order) {\r\n    let list = this.state.filtredArray;\r\n    if (list) {\r\n      list.sort((a, b) => (a[by] > b[by] ? -1 * order : 1 * order));\r\n      this.setState({ filtredArray: list });\r\n    }\r\n  }\r\n  filterArray(tags) {\r\n    let tmpArr = [];\r\n    let arr = [...this.props.products];\r\n    for (const item of arr) {\r\n      for (const tag of tags) {\r\n        if (item[\"tags\"].includes(tag)) {\r\n          if (tmpArr.indexOf(item) === -1) {\r\n            tmpArr.push(item);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ filtredArray: tmpArr });\r\n  }\r\n  selectElement(selected) {\r\n    this.setState({ selectedElement: selected });\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  products: state.global.items\r\n}), {fetchProducts}) (Gallery);\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Sorter\\Sorter.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Filter\\Filter.jsx",["222"],"import React, { Component } from \"react\";\r\nimport \"./filter.css\";\r\nimport CheckBoxElement from \"../CheckBoxElement/CheckBoxElement\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../../actions/actions\";\r\nclass Filter extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tags : []\r\n    }\r\n    this.addTag = this.addTag.bind(this)\r\n  }\r\n  render() { \r\n    \r\n    \r\n    return (\r\n      <div className=\"h-100 \">\r\n        <div className=\"row align-items-center h-100 position-fixed\">\r\n          <div className=\"nav-filter\">\r\n            <CheckBoxElement name=\"kosher\" addTag={this.addTag} />\r\n            <CheckBoxElement name=\"parve\" addTag={this.addTag}/>\r\n            <CheckBoxElement name=\"meat\" addTag={this.addTag}/>\r\n            <CheckBoxElement name=\"fish\" addTag={this.addTag}/>\r\n            <CheckBoxElement name=\"dairy\" addTag={this.addTag}/>\r\n            <CheckBoxElement name=\"salad\" addTag={this.addTag}/>\r\n            <CheckBoxElement name=\"sweets\" addTag={this.addTag}/>\r\n            <br />\r\n            <br />\r\n            <NavLink to=\"/catalog\">\r\n              \r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger mb-5 pl-4 pr-4\"\r\n              id=\"searchNav\"\r\n              style={MenuColor}\r\n              onClick={() => {\r\n                this.props.filterProducts(this.props.products, this.state.tags)\r\n                this.props.filterArray(this.state.tags)\r\n              }}\r\n            >\r\n              Submit search\r\n            </button>\r\n          \r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  addTag(tag, e){\r\n    let tags = this.state.tags\r\n    if(e == true)\r\n      tags.push(tag)\r\n    else\r\n      tags.splice(tags.indexOf(tag),1)\r\n  }\r\n}\r\n\r\nconst MenuColor = {\r\n  color: \"rgb(226, 80, 31)\",\r\n  fontWeight: \"bold\",\r\n};\r\n\r\nexport default connect(state => ({\r\n  products: state.global.items,\r\n  filtred: state.global.items\r\n}),{filterProducts, sortProducts}) (Filter);\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\CheckBoxElement\\CheckBoxElement.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Login\\Login.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ItemPrice\\ItemPrice.jsx",["223"],"import React from \"react\";\r\nimport \"./itemPrice.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction ItemPrice({ numberOfUnitsToBuy, element, productState }) {\r\n  const starLikeStyle = {\r\n    color: \"red\",\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"mt-2 d-flex\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"foodQuant\"\r\n            id=\"numberOfItems\"\r\n            defaultValue={productState.numToBuy}\r\n            min={element.min}\r\n            max={element.max}\r\n            style={{ width: \"55px\" }}\r\n            onChange={(e) => {\r\n              if (e.target.value > element.max) e.target.value = element.max;\r\n              else numberOfUnitsToBuy(Number(e.target.value));\r\n            }}\r\n          />\r\n          <i\r\n            className=\"shopIcon fas fa-shopping-cart ml-3\"\r\n            style={starLikeStyle}\r\n            onClick={() => {\r\n              const order = {\r\n                orderInfo: {\r\n                  orderId: Math.round(Math.random()*Date.now()),\r\n                  quantity: productState.numToBuy,\r\n                  variation: productState.selectedVariation,\r\n                  additives: productState.selectedAdditives,\r\n                  notations: productState.notations\r\n                },\r\n                fullItemInfo: element,\r\n              };\r\n              let ordersInProcess = JSON.parse(localStorage.getItem(\"homefood-ordersInProcess\"))?JSON.parse(localStorage.getItem(\"homefood-ordersInProcess\")):[]\r\n              \r\n              ordersInProcess.push(order)\r\n              localStorage.setItem(\"homefood-ordersInProcess\", JSON.stringify(ordersInProcess))\r\n              window.location.reload()\r\n              }\r\n            }\r\n          ></i>\r\n        </div>\r\n        <p className=\"pb-5 text-secondary\">\r\n          <b>Total price: {(productState.price+productState.additivesPrice) * productState.numToBuy}₪</b>\r\n        </p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default ItemPrice;\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\GalleryDisplay\\GalleryDisplay.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\PlaceAnItem\\PlaceAnItem.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ItemAbout\\ItemAbout.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProductFullInfo\\ProductFullInfo.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Carousel\\Carousel.jsx",["224"],"import React from \"react\";\r\nimport './carousel.css'\r\nexport default function Carousel({pictures}) {\r\n  const scrolId = Math.random() + \"\";\r\n  \r\n  return (\r\n    <div className=\"carouselImageBox\">\r\n      <div id={scrolId} className=\"carousel slide\" data-ride=\"carousel\">\r\n        <div className=\"carousel-inner\" >\r\n          {pictures.map((cur, i) => imgSlide(cur, i))}\r\n          \r\n        </div>\r\n        \r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href={\"#\" + scrolId}\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href={\"#\" + scrolId}\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst imgSlide = (img, i) => {\r\n  \r\n  let classes = \"carousel-item\";\r\n  if (i === 0) classes += \" active\";\r\n  return (\r\n    <div className={classes} key={Math.random()}>\r\n      <img key={Math.random()} className=\"d-block w-100\" src={`/${img}`} />\r\n    </div>\r\n  );\r\n};\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProductShortDesc\\ProductShortDesc.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\Stars\\Stars.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\HomePage\\home.jsx",["225"],"import React, { Component } from \"react\";\r\nimport ItemAbout from \"../ItemAbout/ItemAbout\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newProducts: [\r\n        {\r\n          id: 1,\r\n          name: \"Chebureki\",\r\n          desc:\r\n            \"Cheburek is made from unleavened dough filled with ground meat, onions and spices, fried in oil. It is a common street food in Russia.\",\r\n          star: 5,\r\n          price: 10,\r\n          min: 10,\r\n          max: 100,\r\n          pictures: [\"img/cheb1.jpg\", \"img/cheb2.jpg\", \"img/cheb3.jpg\"],\r\n          additives: [{ onion: \"3\" }],\r\n          variations: [{ beef: \"12\" }, { mutton: \"15\" }, { chicken: 10 }],\r\n          alegens: [\"al1\", \"al2\"],\r\n          tags: [\"meat\", \"kosher\"],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Roast beef\",\r\n          desc:\r\n            \"Roast beef is a traditional English dish of beef which is roasted. Essentially prepared as a main meal, the leftovers are often used in sandwiches and sometimes are used to make hash.\",\r\n          star: 3,\r\n          price: 140,\r\n          min: 2,\r\n          max: 10,\r\n          pictures: [\"img/rb1.jpg\", \"img/rb2.jpg\", \"img/rb3.jpg\"],\r\n          additives: [{ onion: \"3\" }, { sauce: \"5\" }],\r\n          variations: [{ rare: \"140\" }, { mw: \"140\" }, { wd: 140 }],\r\n          alegens: [],\r\n          tags: [\"meat\", \"kosher\"],\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Humus\",\r\n          desc:\r\n            \"Hummus is a Middle Eastern dip, spread, or savory dish made from cooked, mashed chickpeas blended with tahini, lemon juice, and garlic.\",\r\n          star: 4,\r\n          price: 30,\r\n          min: 5,\r\n          max: 20,\r\n          pictures: [\"img/hummus.jpg\"],\r\n          additives: [{ onion: \"3\" }, { sauce: \"5\" }],\r\n          variations: [{ var1: \"30\" }, { var2: \"35\" }, { var3: 32 }],\r\n          alegens: [\"al1\", \"al2\"],\r\n          tags: [\"salad\", \"kosher\", \"parve\"],\r\n        },\r\n        {\r\n          id: 4,\r\n          name: \"Napoleon\",\r\n          desc:\r\n            \"Description. Napoleon Cake is a classic Russian cakes, made of very thin and flaky puff pastry cake layers and a smooth, rich and luscious pastry cream in between the layers.\",\r\n          star: 4,\r\n          price: 90,\r\n          min: 1,\r\n          max: 3,\r\n          pictures: [\"img/np1.jpg\", \"img/np2.jpg\"],\r\n          additives: [{ \"more sugar\": \"0\" }, { \"less sugar\": \"0\" }],\r\n          variations: [],\r\n          alegens: [\"milk\"],\r\n          tags: [\"sweets\", \"dairy\", \"kosher\"],\r\n        },\r\n        {\r\n          id: 5,\r\n          name: \"Salmon\",\r\n          desc:\r\n            \"If you pan-fry fish at home in a tablespoon of olive oil, most of the fat is healthy unsaturated fat, and you don't get any trans fat. \",\r\n          star: 5,\r\n          price: 50,\r\n          min: 4,\r\n          max: 20,\r\n          pictures: [\"img/sf1.jpg\", \"img/sf2.jpg\"],\r\n          additives: [{ onion: \"3\" }, { sauce: \"5\" }],\r\n          variations: [{ crispy: \"50\" }, { baked: \"60\" }, { oven: 55 }],\r\n          alegens: [],\r\n          tags: [\"fish\", \"kosher\", \"parve\"],\r\n        },\r\n        {\r\n          id: 6,\r\n          name: \"Shrimps\",\r\n          desc:\r\n            \"As with other seafood, shrimp is high in protein but low in food energy. A shrimp-based meal is also a significant source of cholesterol.\",\r\n          star: 4,\r\n          price: 40,\r\n          min: 1,\r\n          max: 50,\r\n          pictures: [\"img/Shrimps1.jpg\", \"img/Shrimps2.jpg\"],\r\n          additives: [{ onion: \"3\" }, { sauce: \"5\" }],\r\n          variations: [],\r\n          alegens: [],\r\n          tags: [\"fish\"],\r\n        },\r\n      ],\r\n      saleProducts: [],\r\n      topProducts: [\r\n        {\r\n          id: 6,\r\n          name: \"Sandwich\",\r\n          desc:\r\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit, dolorem\",\r\n          picture: \"img/sandwich-4k.jpg\",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Pizza\",\r\n          desc:\r\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit, dolorem\",\r\n          picture: \"img/sample-4k.jpg\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n         \r\n        <div className=\"carouselImageBox\">\r\n          <div id=\"rotate\" className=\"carousel slide\" data-ride=\"carousel\">\r\n            <div className=\"carousel-inner\">\r\n              {this.state.topProducts.map((cur, i) => this.imgSlide(cur, i))}\r\n            </div>\r\n            <a\r\n              className=\"carousel-control-prev\"\r\n              href={\"#rotate\"}\r\n              role=\"button\"\r\n              data-slide=\"prev\"\r\n            >\r\n              <span\r\n                className=\"carousel-control-prev-icon\"\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n              <span className=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a\r\n              className=\"carousel-control-next\"\r\n              href={\"#rotate\"}\r\n              role=\"button\"\r\n              data-slide=\"next\"\r\n            >\r\n              <span\r\n                className=\"carousel-control-next-icon\"\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n              <span className=\"sr-only\">Next</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      <div className=\"container \">\r\n          <h3 className=\"text-center\">NEW </h3>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"hover\" onClick={()=>{\r\n                let newProducts=[...this.state.newProducts]\r\n                \r\n                newProducts = newProducts.concat(newProducts.splice(0,4))\r\n                this.setState({newProducts})\r\n            }}>\r\n                <i className=\"fas fa-chevron-left\"></i></div>\r\n          {this.state.newProducts.map((el, i) => {\r\n              return (i<4?\r\n                    <div style={{width: \"20%\"}}>\r\n\r\n                        <ItemAbout\r\n                          key={Math.random()}\r\n                          element={el}\r\n                        />\r\n                        \r\n                          <NavLink to={`/catalog/${el.id}`} style={{color: \"red\"}}><b>Learn more...</b></NavLink>\r\n                    </div>\r\n                    :<React.Fragment/>\r\n              )\r\n          })}\r\n          <div className=\"hover\" onClick={()=>{\r\n              \r\n                let newProducts=[...this.state.newProducts]\r\n                let removed = newProducts.splice(-4)\r\n                newProducts = removed.concat(newProducts)\r\n                this.setState({newProducts})\r\n            }}>\r\n          <i className=\"fas fa-chevron-right\"></i></div>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  imgSlide = (cur, i) => {\r\n    let classes = \"carousel-item\";\r\n    if (i === 0) classes += \" active\";\r\n    return (\r\n      <div className={classes}>\r\n        <img className=\"d-block w-100\" src={`/${cur.picture}`} />\r\n        <div className=\"card-img-overlay\">\r\n          <div className=\"h-100 row align-items-center text-center text-white\">\r\n            <div className=\"col\">\r\n              <h1 className=\"card-title\">\r\n                <b>{cur.name}</b>\r\n              </h1>\r\n              <p className=\"card-text\">{cur.desc}</p>\r\n              <NavLink to={`/catalog/${cur.id}`} style={{color: \"red\"}}>\r\n                  \r\n              <button type=\"button \" className=\"btn btn-outline-light mb-3\">\r\n                Buy now\r\n              </button>\r\n              </NavLink>\r\n              <div className=\"top\">TOP prodact</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Home;\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\shopCart\\shopCart.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\pendingOrders\\pendingOrders.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\orderSummary\\orderSummary.jsx",["226"],"import React, { Component } from \"react\";\r\nimport Login from \"../Login/Login\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport authentication from \"../../auth\";\r\n\r\nclass OrderSummary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      showMadal: null\r\n    }\r\n    this.handleClose = this.handleClose.bind(this)\r\n    this.handleShow = this.handleShow.bind(this)\r\n  }\r\n  handleClose(){\r\n    this.setState({showMadal:false})\r\n  }\r\n  handleShow(){\r\n    if (authentication.isAuthenticated())\r\n      window.location.href = '/payment'\r\n      else{\r\n\r\n        this.setState({showMadal: true})\r\n        console.log(this.state.showMadal);\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Order Summary</h3>\r\n        \r\n        <div>\r\n          <span>\r\n            <b>{`Total ${this.props.totalSum}₪`}</b>\r\n          </span>\r\n        </div>\r\n\r\n        <Button variant=\"btn-danger\" onClick={this.handleShow} style={{color: \"white\", backgroundColor: \"rgb(226, 80, 31)\", width: \"220px\" }}>\r\n        Buy\r\n      </Button>\r\n\r\n      <Modal show={this.state.showMadal} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Login/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => window.location.href = '/payment'}>\r\n          Continue as guest\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nconst MenuColor = {\r\n  color: \"rgb(226, 80, 31)\",\r\n  fontWeight: \"bold\",\r\n};\r\nexport default OrderSummary;\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\payment\\payment.jsx",["227"],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\PalPal\\paypal.jsx",["228"],"  \r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\n\r\nexport default function PayPal({totalSum}){\r\n    const paypal = useRef();\r\n    useEffect(() => {\r\n      window.paypal\r\n        .Buttons({\r\n          createOrder: (data, actions, err) => {\r\n            return actions.order.create({\r\n              intent: \"CAPTURE\",\r\n              purchase_units: [\r\n                {\r\n                  description: \"homemade food\",\r\n                  amount: {\r\n                    currency_code: \"ILS\",\r\n                    value: totalSum,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n          },\r\n          onApprove: async (data, actions) => {\r\n            const order = await actions.order.capture();\r\n            console.log(order);\r\n          },\r\n          onError: (err) => {\r\n            console.log(err);\r\n          },\r\n        })\r\n        .render(paypal.current);\r\n    }, []);\r\n    \r\n    return(\r\n        <div>\r\n            <div ref={paypal}>{alert('hallo!!')}</div>\r\n        </div>\r\n    )\r\n    \r\n}",["229","230"],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blog\\blog.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blogPost\\blogPost.jsx",["231"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./blogPost.css\"\r\nclass BlogPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const post = this.props.post\r\n        return (\r\n            <Link to={`/blog/${post.id}`} style={{textDecoration:'none', color:'inherit'}}>\r\n\r\n            <div className=\"blogPost m-2\" style={this.props.count%2?color1:color2}>\r\n                <div className=\"pb-2 postDate\" style={this.props.count%2?bgColor1:bgColor2}>{post.postDate}</div>\r\n                <div className=\"p-2 postHeader\" style={{fontWeight:'bold', textTransform: 'capitalize'}}>{post.header}</div>\r\n                <div className=\"p-2 postDesc\" style={{fontStyle: 'italic'}}>{post.description}</div>\r\n                <div className=\"postPictures\">{post.pictures.map(img =>\r\n                    <img className=\"p-2\" src={img} key={Math.random()} style={{height:\"15vh\"}}/>\r\n                )}</div>\r\n            </div>\r\n            </Link> \r\n         );\r\n    }\r\n}\r\nconst color1 = {\r\n    border: \"solid 8px rgb(255, 136, 0)\",\r\n    borderRadius: \"10px\"\r\n}\r\nconst bgColor1 ={\r\n    backgroundColor: 'rgb(255, 136, 0)', color:'white', fontSize:'12px'\r\n} \r\nconst color2 = {\r\n    border: \"solid 8px rgb(172, 18, 18)\",\r\n    borderRadius: \"10px\"\r\n} \r\nconst bgColor2 ={\r\n    backgroundColor: 'rgb(172, 18, 18)', color:'white', fontSize:'12px'\r\n} \r\nexport default BlogPost;","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\blogFullInfo\\blogFullInfo.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\contactUs\\contactUs.jsx",["232"],"import React, { Component } from \"react\";\r\nimport Location from \"../location/location\"\r\n\r\n\r\nclass ContactUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isOpen: false\r\n    };\r\n    this.handleToggleClose = this.handleToggleClose.bind(this)\r\n        this.handleToggleOpen = this.handleToggleOpen.bind(this)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contactUs text-center mt-5 position-relative\">\r\n        <p>\r\n          This is a website support. If you have found a bug or problem or you\r\n          want to contact with the website creator, please fill the follow form.\r\n        </p>\r\n        <input\r\n          ref={(input) => (this.email = input)}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          style={{ width: \"250px\" }}\r\n          placeholder=\"email@domain.com\"\r\n        />{\" \"}\r\n        <br />\r\n        <textarea\r\n          ref={(area) => (this.area = area)}\r\n          className=\"mt-3\"\r\n          name=\"textarea\"\r\n          id=\"textarea\"\r\n          cols=\"60\"\r\n          rows=\"10\"\r\n          style={{ resize: \"none\" }}\r\n        />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.onClickSubmit();\r\n          }}\r\n          className=\"mt-3 btn btn-danger\"\r\n          type=\"submit\"\r\n          style={{ backgroundColor: \"rgb(226, 80, 31)\" }}\r\n        >\r\n          Submit\r\n        </button>\r\n        <div>address: Lorem, ipsum dolor.</div>\r\n        <div>more info, phone, etc</div>\r\n       \r\n\r\n          \r\n\r\n        <Location\r\n                    isMarkerShown\r\n                    isOpen={this.state.isOpen}\r\n                    handleToggleClose = {this.handleToggleClose}\r\n                    handleToggleOpen = {this.handleToggleOpen}\r\n                    loadingElement={<div>Loading....</div>}\r\n                    containerElement={<div style={{height: '100%'}} className=\"map\"></div>}\r\n                    mapElement={<div style={{height: '400px', width:'50%', margin:'auto'}} className=\"inner-map\"></div>}\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBVtHhDa2ErB1UuzEc1t3dXozBGaSHiQZk&v=3.exp&libraries=geometry,drawing,places\"\r\n                />\r\n          <br/>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n  handleToggleClose(){\r\n    this.setState({isOpen: false})\r\n}\r\nhandleToggleOpen(){\r\n    this.setState({isOpen: true})\r\n}\r\n  onClickSubmit() {\r\n    this.verifyInput();\r\n  }\r\n  verifyInput() {\r\n    let valid = 0;\r\n    function applyError(inputRef) {\r\n      inputRef.style.backgroundColor = \"rgb(253, 138, 138)\";\r\n      valid -= 1;\r\n    }\r\n    function cleanError(inputRef) {\r\n      inputRef.style.backgroundColor = \"white\";\r\n      valid++;\r\n    }\r\n    applyError(this.email);\r\n    applyError(this.area);\r\n    const lastAtPos = this.email.value.lastIndexOf(\"@\");\r\n    const lastDotPos = this.email.value.lastIndexOf(\".\");\r\n    if (\r\n      lastAtPos < lastDotPos &&\r\n      this.email.value.match(/@/g).length == 1 &&\r\n      lastAtPos > 0 &&\r\n      lastDotPos > 2 &&\r\n      this.email.value.length - lastDotPos > 2\r\n    ) {\r\n      cleanError(this.email);\r\n    } else {\r\n      alert(\"email has to be valid\");\r\n    }\r\n\r\n    if (this.area.value.length < 15) {\r\n      alert(\"Not enough info\");\r\n    } else {\r\n      cleanError(this.area);\r\n    }\r\n    return valid === 0 ? true : false;\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\location\\location.jsx",["233","234"],"import React, { Component } from 'react';\r\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker, InfoWindow } from \"react-google-maps\";\r\n\r\nconst Location = withScriptjs(\r\n    withGoogleMap(\r\n        props => (\r\n        <GoogleMap\r\n            defaultZoom={15}\r\n                defaultCenter={{ lat: 31.776918390835117, lng: 35.20546751144723}}\r\n                \r\n        >\r\n            \r\n            {props.isMarkerShown && <Marker position={{ lat: 31.776918390835117, lng: 35.20546751144723 }} onClick={() => props.handleToggleOpen()}>\r\n            {props.isOpen && (\r\n              <InfoWindow onCloseClick={() => props.handleToggleClose()}>\r\n                <div><h1>Homemade food</h1><p>phone: 414141414</p><p>address: Lorem ipsum dolor sit.</p><img src=\"https://cdn.singulart.com/artworks/v2/cropped/5877/main/fhd/713867_6ed990ab826a4975c232711091e55cdc.jpeg\" style={{width:\"180px\"}}/></div>\r\n              </InfoWindow>\r\n            )}\r\n                </Marker>}\r\n        </GoogleMap>\r\n        )\r\n    )\r\n)\r\n \r\nexport default Location;","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\about\\about.jsx",["235"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport './about.css'\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures:[] }\r\n    }\r\n    render() { \r\n        const pictures = this.state.pictures\r\n        return ( \r\n            <div className='center'>\r\n                <div>\r\n                    <h4>Why homefood is better then a restoran food?</h4>\r\n                    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Iusto consequatur modi commodi numquam illo cum rem eius molestiae provident optio hic saepe maiores, animi cumque nihil iure repellendus accusantium impedit!\r\n                    Error laborum nobis, beatae odio porro praesentium doloribus fuga velit. Voluptatum unde laboriosam maiores obcaecati nostrum vel tempore tenetur libero. Asperiores nemo natus mollitia praesentium accusantium illo assumenda sint alias!\r\n                    Asperiores quisquam qui distinctio cupiditate necessitatibus. Natus eveniet, sint vel dolorem a, rerum beatae numquam odit ipsa velit id excepturi impedit tenetur dolores blanditiis eos neque sed exercitationem error dolore!</p>\r\n                </div>\r\n                <div className='aboutPictures d-flex flex-wrap justify-content-around'>\r\n                    {pictures.map(pic => <img className=\"p-2\" src={pic} key={Math.random()} style={{height:\"15vh\"}}/>)}\r\n                </div>\r\n                <iframe title=\"our video\" \r\nsrc=\"https://www.youtube.com/embed/boTfxLdDv9I\" style={{height:'360px', width:'780px', margin:'auto'}}>\r\n</iframe>\r\n            </div>\r\n         );\r\n    }\r\n    componentDidMount(){\r\n        this.loadPictures()\r\n    }\r\n    loadPictures(){\r\n        axios.get('http://localhost:3000/aboutPictures').then(res => {\r\n            const pictures = res.data\r\n            this.setState({pictures})\r\n        })\r\n    }\r\n}\r\n \r\nexport default About;","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\modalLogin\\login.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\signUp\\signUp.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\firebase.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\auth.js",["236"],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\ProtectedRoute\\protectedRout.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\profile\\profile.jsx",["237"],"import React, { Component } from \"react\";\r\nimport { Card,  Form, Button,  Col } from \"react-bootstrap\";\r\nimport { auth } from \"../../firebase\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      city: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      // fname:\r\n      //   auth.currentUser.displayName.split(\" \")[0] !== \"undefined\"\r\n      //     ? auth.currentUser.displayName.split(\" \")[0]\r\n      //     : \"\",\r\n      // lname:\r\n      //   auth.currentUser.displayName.split(\" \").slice(1)[0] !== \"undefined\"\r\n      //     ? auth.currentUser.displayName.split(\" \").slice(1)[0]\r\n      //     : \"\",\r\n      //   city:auth.currentUser.city\r\n    });\r\n\r\n  }\r\n  onUpdateUserProfile() {\r\n    let user = auth.currentUser;\r\n    \r\n    user.updateProfile({\r\n        displayName: `${this.state.fname} ${this.state.lname}`,\r\n        city: this.state.city\r\n    });\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"mt-4 d-flex flex-md-wrap justify-content-around\">\r\n        <Card\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ width: \"48%\" }}\r\n        >\r\n          <Card.Body>\r\n            <Form className=\"text-center\">\r\n              <Form.Row>\r\n                <img\r\n                  src=\"https://randomuser.me/api/portraits/lego/6.jpg\"\r\n                  className=\"rounded-circle\"\r\n                  style={{ width: \"100px\" }}\r\n                />\r\n              </Form.Row>\r\n              {/* <Form.Label>{auth.currentUser.displayName!=='undefined undefined'?auth.currentUser.displayName:\"\"}</Form.Label> */}\r\n              <Form.Label>{auth.currentUser.displayName}</Form.Label>\r\n              <Form.Label>{auth.currentUser.city}</Form.Label>\r\n            </Form>\r\n          </Card.Body>\r\n          <Card.Footer style={{ backgroundColor: \"white\" }}>\r\n            Upload Picture\r\n          </Card.Footer>\r\n        </Card>\r\n\r\n        <Card style={{ width: \"48%\" }}>\r\n          <Card.Header as=\"h3\" style={{ backgroundColor: \"white\" }}>\r\n            Profile\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={this.state.fname}\r\n                onChange={(e) => this.setState({ fname: e.target.value })}\r\n                required\r\n              />\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={this.state.lname}\r\n                onChange={(e) => this.setState({ lname: e.target.value })}\r\n                required\r\n              />\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                defaultValue={auth.currentUser.email}\r\n                required\r\n              />\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formCity\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    defaultValue=\"Choose...\"\r\n                    onChange={(e) => this.setState({city:e.target.value})}\r\n                  >\r\n                    <option>Choose...</option>\r\n                    <option value=\"Tel-Aviv\">Tel-Aviv</option>\r\n                    <option value=\"Ramat-Gan\">Ramat-Gan</option>\r\n                    <option value=\"Rishon Lezion\">Rishon Lezion</option>\r\n                    <option value=\"Holon\">Holon</option>\r\n                    <option value=\"Givataim\">Givataim</option>\r\n                    <option value=\"Bat-Yam\">Bat-Yam</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Form>\r\n          </Card.Body>\r\n          <Card.Footer style={{ backgroundColor: \"white\" }}>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"float-right\"\r\n              style={{ backgroundColor: \"rgb(226, 80, 31)\" }}\r\n              type=\"submit\"\r\n              onClick={this.onUpdateUserProfile()}\r\n            >\r\n              SAVE DETAILS\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\actions\\types.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\dashboard.jsx",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\users.js",["238"],"import * as React from \"react\";\r\nimport auth from \"../../auth\";\r\nimport { useMutation, useRedirect, required, ExportButton, CreateButton, RefreshButton, BooleanInput, EditButton, Filter, Edit, SimpleForm, ReferenceInput, SelectInput, TextInput, List, Datagrid, TextField, EmailField, DeleteButton, Create, PasswordInput} from 'react-admin';\r\nconst UserActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton {...props}/>\r\n        <ExportButton {...props}/>\r\n        <CreateButton {...props}/>\r\n    </div>\r\n);\r\nconst UserFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"User\" source=\"id\" reference=\"users\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n)\r\n\r\n    \r\n\r\nexport const UserEdit = props => (\r\n    <Edit {...props}  undoable={false}>\r\n        <SimpleForm >\r\n            <TextInput disabled source=\"email\" />\r\n            <TextInput source=\"userName\" />\r\n            <BooleanInput label=\"Enabled\" source=\"active\" />\r\n            <SelectInput source=\"role\" choices={[\r\n                { id: 'admin', name: 'admin' },\r\n                { id: 'seller', name: 'seller' },\r\n                { id: 'client', name: 'client' },\r\n            ]} />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\nexport const UserCreate = props => {\r\n    const [mutate] = useMutation();\r\n    const redirect = useRedirect()\r\n    const save = React.useCallback(\r\n        async (values) => {\r\n            await auth.signup(values.email, values.pass, values.userName, values.roleId)\r\n            redirect(\"/users\")\r\n        },\r\n        [mutate],\r\n    );\r\n    return (\r\n    <Create {...props}  undoable={false}>\r\n        <SimpleForm save={save}>\r\n            <TextInput validate={required()} source=\"userName\" />\r\n            <EmailField validate={required()} source=\"email\" />\r\n            <PasswordInput validate={required()} source=\"pass\"/>\r\n            <BooleanInput label=\"Enabled\" source=\"active\" />\r\n            <SelectInput validate={required()} source=\"role\" choices={[\r\n                { id: 'admin', name: 'admin' },\r\n                { id: 'seller', name: 'seller' },\r\n                { id: 'client', name: 'client' },\r\n            ]} />\r\n        </SimpleForm>\r\n    </Create>\r\n)};\r\n\r\nexport const UserList = props => (\r\n\r\n    <List filters={<UserFilter/>} actions={<UserActionsButtons/>} {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            \r\n            <TextField source=\"userName\" />\r\n            <TextField source=\"role\"/>\r\n            <TextField label=\"Enabled\" source=\"active\"/>\r\n            <EmailField source=\"email\" />\r\n            \r\n            <EditButton />\r\n            <DeleteButton mutationMode={false}/>\r\n        </Datagrid>\r\n    </List>\r\n\r\n);","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reducers\\index.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\createAdminStore.js",["239","240"],"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk'\r\nimport {reducers} from './reducers/reducers'\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport {\r\n    adminReducer,\r\n    adminSaga,\r\n    USER_LOGOUT,\r\n} from 'react-admin';\r\n\r\nexport default ({\r\n    authProvider,\r\n    dataProvider,\r\n    history,\r\n}) => {\r\n    const initialState = {};\r\n    const reducer = combineReducers({\r\n        admin: adminReducer,\r\n        router: connectRouter(history),\r\n        products: reducers\r\n        // add your own reducers here\r\n    });\r\n    const resettableAppReducer = (state, action) =>\r\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n    const saga = function* rootSaga() {\r\n        yield all(\r\n            [\r\n                adminSaga(dataProvider, authProvider),\r\n                // add your own sagas here\r\n            ].map(fork)\r\n        );\r\n    };\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const composeEnhancers =\r\n        (process.env.NODE_ENV === 'development' &&\r\n            typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n                trace: true,\r\n                traceLimit: 25,\r\n            })) ||\r\n        compose;\r\n  \r\n    const store = createStore(\r\n        resettableAppReducer,\r\n        \r\n        { /* set your initial state here */ },\r\n        composeEnhancers(\r\n            applyMiddleware(\r\n                sagaMiddleware,\r\n                routerMiddleware(history),\r\n                thunk\r\n                // add your own middlewares here\r\n            ),\r\n            // add your own enhancers here\r\n        ),        \r\n    );\r\n    sagaMiddleware.run(saga);\r\n    return store;\r\n};","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\store\\store.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\products.js",["241"],"import * as React from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  DateInput,\r\n  useMutation,\r\n  useRedirect,\r\n  BooleanField,\r\n  ArrayInput,\r\n  ImageField,\r\n  SimpleFormIterator,\r\n  required,\r\n  ExportButton,\r\n  CreateButton,\r\n  RefreshButton,\r\n  BooleanInput,\r\n  EditButton,\r\n  Filter,\r\n  Edit,\r\n  SimpleForm,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  TextInput,\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DeleteButton,\r\n  Create,\r\n  CheckboxGroupInput,\r\n  NumberInput,\r\n  ImageInput,\r\n} from \"react-admin\";\r\nconst ProductsActionsButtons = (props) => (\r\n  <div>\r\n    <RefreshButton {...props} />\r\n    <ExportButton {...props} />\r\n    <CreateButton {...props} />\r\n  </div>\r\n);\r\nconst ProductsFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"Product\" source=\"id\" reference=\"Products\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const ProductEdit = (props) => (\r\n  <Edit {...props} undoable={false}>\r\n    <SimpleForm>\r\n      <DateInput disabled source=\"createdAt\" />\r\n      <BooleanInput label=\"available\" source=\"available\" />\r\n      <TextInput source=\"name\" />\r\n      <TextInput\r\n        multiline\r\n        source=\"desc\"\r\n        label=\"Description\"\r\n        style={{ width: \"100%\" }}\r\n      />\r\n      <NumberInput validate={required()} source=\"price\" />\r\n      <NumberInput\r\n        validate={required()}\r\n        label=\"minimum order of\"\r\n        source=\"min\"\r\n      />\r\n      <NumberInput\r\n        validate={required()}\r\n        label=\"maximum order of\"\r\n        source=\"max\"\r\n      />\r\n      <CheckboxGroupInput\r\n        validate={required()}\r\n        source=\"tags\"\r\n        choices={[\r\n          { id: \"meat\", name: \"Meat\" },\r\n          { id: \"kosher\", name: \"Kosher\" },\r\n          { id: \"parve\", name: \"Parve\" },\r\n          { id: \"fish\", name: \"Fish\" },\r\n          { id: \"dairy\", name: \"Dairy\" },\r\n          { id: \"salad\", name: \"Salad\" },\r\n          { id: \"sweets\", name: \"Sweets\" },\r\n        ]}\r\n      />\r\n      <ArrayInput source=\"alegens\">\r\n        <SimpleFormIterator>\r\n          <TextInput label=\"Alergen\" />\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n      <ImageInput\r\n        source=\"pictures\"\r\n        multiple={true}\r\n        label=\"Pictures\"\r\n        accept=\"image/*\"\r\n      >\r\n        <ImageField source=\"src\" title=\"title\" />\r\n      </ImageInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\nexport const ProductCreate = (props) => {\r\n  const [mutate] = useMutation();\r\n  const redirect = useRedirect();\r\n  const save = React.useCallback(\r\n    (value) => {\r\n      const today = new Date();\r\n      const createdAt = `${\r\n        today.getMonth() + 1\r\n      }/${today.getDate()}/${today.getFullYear()}`;\r\n      const id = Math.floor(Math.random() * Date.now());\r\n      console.log(value);\r\n      db.ref(\"products/\" + id).set({\r\n        createdAt,\r\n        id,\r\n        stars: 0,\r\n        ...value,\r\n      });\r\n      redirect(\"/products\");\r\n    },\r\n    [mutate]\r\n  );\r\n  return (\r\n    <Create {...props} undoable={false}>\r\n      <SimpleForm save={save}>\r\n        <TextInput validate={required()} source=\"name\" resettable />\r\n        <TextInput\r\n          multiline\r\n          source=\"desc\"\r\n          label=\"Description\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <BooleanInput label=\"available\" source=\"available\" />\r\n        <NumberInput validate={required()} source=\"price\" />\r\n        <NumberInput\r\n          validate={required()}\r\n          label=\"minimum order of\"\r\n          source=\"min\"\r\n        />\r\n        <NumberInput\r\n          validate={required()}\r\n          label=\"maximum order of\"\r\n          source=\"max\"\r\n        />\r\n        <CheckboxGroupInput\r\n          validate={required()}\r\n          source=\"tags\"\r\n          choices={[\r\n            { id: \"meat\", name: \"Meat\" },\r\n            { id: \"kosher\", name: \"Kosher\" },\r\n            { id: \"parve\", name: \"Parve\" },\r\n            { id: \"fish\", name: \"Fish\" },\r\n            { id: \"dairy\", name: \"Dairy\" },\r\n            { id: \"salad\", name: \"Salad\" },\r\n            { id: \"sweets\", name: \"Sweets\" },\r\n          ]}\r\n        />\r\n        <SimpleForm>\r\n        <ArrayInput source=\"alegens\">\r\n          <SimpleFormIterator>\r\n            <TextInput label=\"Alergen\" validate={required()} />\r\n          </SimpleFormIterator>\r\n        </ArrayInput>\r\n        <ArrayInput source=\"additives\">\r\n          <SimpleFormIterator>\r\n            <TextInput\r\n              source=\"additive\"\r\n              validate={required()}\r\n              label=\"Additive\"\r\n            />\r\n            <NumberInput source=\"price\" validate={required()} label=\"price\" />\r\n          </SimpleFormIterator>\r\n        </ArrayInput>\r\n        <ArrayInput source=\"variations\">\r\n          <SimpleFormIterator>\r\n            <TextInput\r\n              source=\"variation\"\r\n              validate={required()}\r\n              label=\"variation\"\r\n            />\r\n            <NumberInput source=\"price\" validate={required()} label=\"price\" />\r\n          </SimpleFormIterator>\r\n        </ArrayInput>\r\n       \r\n        </SimpleForm>\r\n       \r\n        <ImageInput\r\n          validate={required()}\r\n          multiple={true}\r\n          source=\"pictures\"\r\n          label=\"Pictures\"\r\n          accept=\"image/*\"\r\n        >\r\n          <ImageField source=\"src\" title=\"title\" />\r\n        </ImageInput>\r\n        \r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport const ProdutcsList = (props) => (\r\n  <List\r\n    filters={<ProductsFilter />}\r\n    actions={<ProductsActionsButtons />}\r\n    {...props}\r\n  >\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"price\" />\r\n      <BooleanField source=\"available\" />\r\n      <EditButton />\r\n      <DeleteButton mutationMode={false} />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\posts.js",["242"],"import * as React from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\nimport {\r\n  DateInput,\r\n  useMutation,\r\n  useRedirect,\r\n  ImageField,\r\n  required,\r\n  ExportButton,\r\n  CreateButton,\r\n  RefreshButton,\r\n  EditButton,\r\n  Filter,\r\n  Edit,\r\n  SimpleForm,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  TextInput,\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DeleteButton,\r\n  Create,\r\n  ImageInput,\r\n  DateField,\r\n} from \"react-admin\";\r\nconst PostsActionsButtons = (props) => (\r\n  <div>\r\n    <RefreshButton {...props} />\r\n    <ExportButton {...props} />\r\n    <CreateButton {...props} />\r\n  </div>\r\n);\r\nconst PostsFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"Post\" source=\"id\" reference=\"Posts\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\n\r\nexport const PostCreate = (props) => {\r\n  const [mutate] = useMutation();\r\n  const redirect = useRedirect();\r\n  const save = React.useCallback(\r\n    (value) => {\r\n      const today = new Date();\r\n      const createdAt = `${\r\n        today.getMonth() + 1\r\n      }/${today.getDate()}/${today.getFullYear()}`;\r\n      const id = Math.floor(Math.random() * Date.now());\r\n      \r\n      db.ref(\"posts/\" + id).set({\r\n        createdAt,\r\n        id,\r\n        ...value,\r\n      });\r\n      redirect(\"/posts\");\r\n    },\r\n    [mutate]\r\n  );\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm save={save}>\r\n        <TextInput validate={required()} source=\"header\" resettable />\r\n        <RichTextInput\r\n          validate={required()}\r\n          source=\"description\"\r\n          label=\"Description\"\r\n        />\r\n        <ImageInput\r\n          multiple={true}\r\n          source=\"pictures\"\r\n          label=\"Pictures\"\r\n          accept=\"image/*\"\r\n        >\r\n          <ImageField source=\"src\" title=\"title\" />\r\n        </ImageInput>\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\nexport const PostsList = (props) => (\r\n  <List filters={<PostsFilter />} actions={<PostsActionsButtons />} {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"header\" />\r\n      <DateField source=\"createdAt\" />\r\n      <EditButton />\r\n      <DeleteButton mutationMode={false} />\r\n    </Datagrid>\r\n  </List>\r\n);\r\nexport const PostEdit = (props) => (\r\n  <Edit {...props} undoable={false}>\r\n    <SimpleForm>\r\n      <DateInput disabled source=\"createdAt\" />\r\n      <TextInput source=\"header\" />\r\n      <RichTextInput source=\"description\" label=\"Description\" />\r\n      <ImageInput\r\n        multiple={true}\r\n        source=\"pictures\"\r\n        label=\"Pictures\"\r\n        accept=\"image/*\"\r\n      >\r\n        <ImageField source=\"src\" title=\"title\" />\r\n      </ImageInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\reducers\\reducers.js",[],"E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\actions\\actions.js",["243"],"import axios from 'axios'\r\nimport  *  as types from './types'\r\nexport const fetchProducts = () => dispatch =>{\r\n    axios.get(\"http://localhost:3000/itemsArray\").then(res => {\r\n            dispatch({\r\n                type: types.FETCH_PRODUCTS,\r\n                payload: res.data\r\n            })\r\n            \r\n        })\r\n}\r\nexport const filterProducts = (products, tags) => dispatch =>{\r\n    dispatch({\r\n        type: types.FILTER_PRODUCTS,\r\n        payload: {\r\n            items: tags.length===0? products:\r\n            products.filter(product => {\r\n                \r\n                for(const tag of tags){\r\n                    if (product.tags.indexOf(tag)>=0)\r\n                        return product\r\n                }\r\n                \r\n            })\r\n            \r\n        }\r\n    })\r\n}\r\nexport const sortProducts = (filtredProducts, by, order) => dispatch =>{\r\n    const sortedProducts = filtredProducts.slice()\r\n    if (sortedProducts.length > 0){\r\n        sortedProducts.sort((a, b) => (a[by] > b[by] ? -1 * order : 1 * order));\r\n    }\r\n    dispatch({\r\n        type: types.SORT_PRODUCTS,\r\n        payload:{\r\n            items : sortedProducts\r\n        }\r\n    })\r\n}\r\nexport const updateUserNavbar = (name, role) => dispatch => {\r\n    dispatch({\r\n        type: types.UPDATE_USER_NAVBAR,\r\n        payload: {\r\n            name, role\r\n        }\r\n    })\r\n}","E:\\Full Stack Experis\\JS\\React\\final project front end\\reactapp\\src\\components\\dashboard\\orders.js",["244","245","246"],"import * as React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n    SimpleShowLayout,\r\n  ExportButton,\r\n  CreateButton,\r\n  RefreshButton,\r\n  EditButton,\r\n  Filter,\r\n  Edit,\r\n  SimpleForm,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  TextInput,\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EmailField,\r\n  ArrayField,\r\n  SingleFieldList,\r\n  Show,\r\n  ShowButton,\r\n} from \"react-admin\";\r\nconst OrdersActionsButtons = (props) => (\r\n  <div>\r\n    <RefreshButton {...props} />\r\n    <ExportButton {...props} />\r\n    <CreateButton {...props} />\r\n  </div>\r\n);\r\nconst OrdersFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n    <ReferenceInput label=\"Order\" source=\"id\" reference=\"Orders\" allowEmpty>\r\n      <SelectInput optionText=\"name\" />\r\n    </ReferenceInput>\r\n  </Filter>\r\n);\r\nexport  const ShowOrder = (props) => (\r\n  \r\n    <Show {...props}>\r\n      \r\n        <SimpleShowLayout>\r\n\r\n        {console.log(props.id)}\r\n            <TextField source=\"status\"/>\r\n            <h4>About order</h4>\r\n            <TextField source=\"orderInfo.productId\" />\r\n            <TextField source=\"orderInfo.quantity\" />\r\n            <TextField source=\"orderInfo.variation\" />\r\n            \r\n            {/* <ArrayField source=\"orderInfo.additives\">\r\n        <SingleFieldList>\r\n          <TextInput label=\"additives\" />\r\n        </SingleFieldList>\r\n      </ArrayField> */}\r\n            <TextField\r\n        multiline\r\n        source=\"orderInfo.notations\"\r\n        \r\n        style={{ width: \"100%\" }}\r\n      />\r\n            <TextField label=\"Order Date\" source=\"orderDate\" />\r\n            <h4>Customer</h4>\r\n            <EmailField source=\"customer.email\" />\r\n            <TextField source=\"customer.name\" />\r\n            <TextField source=\"customer.tel\" />\r\n            <h4>Address</h4>\r\n            <TextField source=\"address.city\" />\r\n            <TextField source=\"address.street\" />\r\n            <TextField source=\"address.appartmant\" /> \r\n        </SimpleShowLayout>\r\n    </Show>\r\n)\r\nexport const EditOrder = (props) => (\r\n    <Edit {...props}  undoable={false}>\r\n      <SimpleForm >\r\n        <TextInput source=\"id\" disabled/>\r\n        <TextInput source=\"totalSum\" disabled/>\r\n        \r\n        <SelectInput source=\"status\" choices={[\r\n                  { id: 'Unconfirmed', name: 'Unconfirmed' },\r\n                  { id: 'Rejected', name: 'Rejected' },\r\n                  { id: 'Confirmed', name: 'Confirmed' },\r\n                  { id: 'InProgress', name: 'In progress' },\r\n                  { id: 'OnTheWay', name: 'Ontheway' },\r\n                  { id: 'Ready', name: 'Ready' }\r\n              ]} />\r\n          </SimpleForm >\r\n          </Edit>\r\n  );\r\nexport const ListOrders = (props) => (\r\n  <List filters={<OrdersFilter />} actions={<OrdersActionsButtons />} {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"totalSum\" />\r\n      <TextField source=\"status\" />\r\n      {/* <SelectInput source=\"status\" choices={[\r\n                { id: 'Unconfirmed', name: 'Unconfirmed' },\r\n                { id: 'Rejected', name: 'Rejected' },\r\n                { id: 'Confirmed', name: 'Confirmed' },\r\n                { id: 'InProgress', name: 'In progress' },\r\n                { id: 'OnTheWay', name: 'Ontheway' },\r\n                { id: 'Ready', name: 'Ready' }\r\n            ]} /> */}\r\n        <ShowButton/>    \r\n        <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\n",{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":18,"column":34,"nodeType":"253","messageId":"254","endLine":18,"endColumn":40},{"ruleId":"251","severity":1,"message":"255","line":226,"column":7,"nodeType":"253","messageId":"254","endLine":226,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":67,"column":72,"nodeType":"258","messageId":"259","endLine":67,"endColumn":74},{"ruleId":"260","severity":1,"message":"261","line":68,"column":56,"nodeType":"262","messageId":"263","endLine":68,"endColumn":58},{"ruleId":"256","severity":1,"message":"264","line":54,"column":10,"nodeType":"258","messageId":"259","endLine":54,"endColumn":12},{"ruleId":"251","severity":1,"message":"265","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":49,"column":7,"nodeType":"268","endLine":49,"endColumn":76},{"ruleId":"266","severity":1,"message":"267","line":197,"column":9,"nodeType":"268","endLine":197,"endColumn":66},{"ruleId":"251","severity":1,"message":"269","line":60,"column":7,"nodeType":"253","messageId":"254","endLine":60,"endColumn":16},{"ruleId":"256","severity":1,"message":"264","line":118,"column":46,"nodeType":"258","messageId":"259","endLine":118,"endColumn":48},{"ruleId":"270","severity":1,"message":"271","line":33,"column":8,"nodeType":"272","endLine":33,"endColumn":10,"suggestions":"273"},{"ruleId":"247","replacedBy":"274"},{"ruleId":"249","replacedBy":"275"},{"ruleId":"266","severity":1,"message":"267","line":19,"column":21,"nodeType":"268","endLine":19,"endColumn":97},{"ruleId":"256","severity":1,"message":"264","line":96,"column":43,"nodeType":"258","messageId":"259","endLine":96,"endColumn":45},{"ruleId":"251","severity":1,"message":"276","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"266","severity":1,"message":"267","line":16,"column":105,"nodeType":"268","endLine":16,"endColumn":246},{"ruleId":"266","severity":1,"message":"267","line":21,"column":42,"nodeType":"268","endLine":21,"endColumn":118},{"ruleId":"251","severity":1,"message":"277","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":47,"column":17,"nodeType":"268","endLine":51,"endColumn":19},{"ruleId":"270","severity":1,"message":"278","line":44,"column":9,"nodeType":"272","endLine":44,"endColumn":17,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":13,"column":1,"nodeType":"282","endLine":64,"endColumn":3},{"ruleId":"251","severity":1,"message":"283","line":18,"column":11,"nodeType":"253","messageId":"254","endLine":18,"endColumn":23},{"ruleId":"270","severity":1,"message":"278","line":119,"column":5,"nodeType":"272","endLine":119,"endColumn":13,"suggestions":"284"},{"ruleId":"270","severity":1,"message":"278","line":62,"column":5,"nodeType":"272","endLine":62,"endColumn":13,"suggestions":"285"},{"ruleId":"260","severity":1,"message":"261","line":17,"column":37,"nodeType":"262","messageId":"263","endLine":17,"endColumn":39},{"ruleId":"251","severity":1,"message":"286","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"287","line":19,"column":3,"nodeType":"253","messageId":"254","endLine":19,"endColumn":13},{"ruleId":"251","severity":1,"message":"288","line":20,"column":3,"nodeType":"253","messageId":"254","endLine":20,"endColumn":18},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'gradientButtomTop' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalSum'. Either include it or remove the dependency array.","ArrayExpression",["291"],["289"],["290"],"'Component' is defined but never used.","'firebase' is defined but never used.","React Hook React.useCallback has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["292"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'initialState' is assigned a value but never used.",["293"],["294"],"'Form' is defined but never used.","'ArrayField' is defined but never used.","'SingleFieldList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"297","fix":"299"},{"desc":"297","fix":"300"},"Update the dependencies array to be: [totalSum]",{"range":"301","text":"302"},"Update the dependencies array to be: [redirect]",{"range":"303","text":"304"},{"range":"305","text":"304"},{"range":"306","text":"304"},[910,912],"[totalSum]",[1653,1661],"[redirect]",[3016,3024],[1417,1425]]