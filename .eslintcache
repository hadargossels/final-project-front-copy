[{"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\index.js":"1","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\App.js":"2","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\reportWebVitals.js":"3","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Home.js":"4","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\RecipeProduct.js":"5","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Header.js":"6","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Cart.js":"7","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Contact.js":"8","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Account.js":"9","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Product.js":"10","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Catalog.js":"11","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\CheckOut.js":"12","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Recipes.js":"13","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\NotFound.js":"14","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Footer.js":"15","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\ScrollToTop.js":"16","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyAdmin.js":"17","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\protected.route.js":"18","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\HomeElement.js":"19","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\firebase.js":"20","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\auth.js":"21","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Rating.js":"22","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\ItemCart.js":"23","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\OrderConfirmation.js":"24","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Sortbar.js":"25","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Paypal.js":"26","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Spinner.js":"27","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyDashboard.js":"28","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Map.jsx":"29","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\PaypalButton.js":"30","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Users.js":"31","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Products.js":"32","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Coupons.js":"33","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Orders.js":"34","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Recipes.js":"35","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\BlogStorage.js":"36","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Dashboard.js":"37","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyActiveField.js":"38","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\ActivationButton.js":"39"},{"size":441,"mtime":1617554665012,"results":"40","hashOfConfig":"41"},{"size":2557,"mtime":1615738510194,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":7653,"mtime":1617559146856,"results":"44","hashOfConfig":"41"},{"size":10827,"mtime":1614964214109,"results":"45","hashOfConfig":"41"},{"size":19780,"mtime":1617559073861,"results":"46","hashOfConfig":"41"},{"size":7682,"mtime":1615738664145,"results":"47","hashOfConfig":"41"},{"size":10947,"mtime":1617561411541,"results":"48","hashOfConfig":"41"},{"size":9360,"mtime":1617558264931,"results":"49","hashOfConfig":"41"},{"size":19828,"mtime":1617574520825,"results":"50","hashOfConfig":"41"},{"size":5855,"mtime":1617568223677,"results":"51","hashOfConfig":"41"},{"size":29693,"mtime":1616263651520,"results":"52","hashOfConfig":"41"},{"size":2575,"mtime":1614958079520,"results":"53","hashOfConfig":"41"},{"size":393,"mtime":1613906899998,"results":"54","hashOfConfig":"41"},{"size":468,"mtime":1613897093390,"results":"55","hashOfConfig":"41"},{"size":372,"mtime":1613161935535,"results":"56","hashOfConfig":"41"},{"size":365,"mtime":1614796567150,"results":"57","hashOfConfig":"41"},{"size":1046,"mtime":1614985563520,"results":"58","hashOfConfig":"41"},{"size":5321,"mtime":1617561520558,"results":"59","hashOfConfig":"41"},{"size":767,"mtime":1614777901431,"results":"60","hashOfConfig":"41"},{"size":771,"mtime":1614856554969,"results":"61","hashOfConfig":"41"},{"size":451,"mtime":1612811552913,"results":"62","hashOfConfig":"41"},{"size":4511,"mtime":1617561903976,"results":"63","hashOfConfig":"41"},{"size":15246,"mtime":1617562626692,"results":"64","hashOfConfig":"41"},{"size":9938,"mtime":1613992907156,"results":"65","hashOfConfig":"41"},{"size":710,"mtime":1617562694453,"results":"66","hashOfConfig":"41"},{"size":295,"mtime":1614986190379,"results":"67","hashOfConfig":"41"},{"size":2042,"mtime":1615046538508,"results":"68","hashOfConfig":"41"},{"size":2180,"mtime":1617561929861,"results":"69","hashOfConfig":"41"},{"size":1290,"mtime":1617562925711,"results":"70","hashOfConfig":"41"},{"size":3853,"mtime":1614877724694,"results":"71","hashOfConfig":"41"},{"size":3840,"mtime":1615629615970,"results":"72","hashOfConfig":"41"},{"size":2622,"mtime":1614959935564,"results":"73","hashOfConfig":"41"},{"size":5012,"mtime":1615062058265,"results":"74","hashOfConfig":"41"},{"size":3279,"mtime":1614955560270,"results":"75","hashOfConfig":"41"},{"size":1463,"mtime":1614964989050,"results":"76","hashOfConfig":"41"},{"size":307,"mtime":1614796474639,"results":"77","hashOfConfig":"41"},{"size":585,"mtime":1614691636068,"results":"78","hashOfConfig":"41"},{"size":560,"mtime":1614757227990,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"abetby",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\index.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\App.js",[],["171","172"],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\reportWebVitals.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Home.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\RecipeProduct.js",["173","174","175","176","177","178","179"],"\r\n\r\nimport React, { Component } from 'react'\r\nimport './RecipeProduct.css';\r\nimport {db} from '../firebase'\r\n\r\n\r\n\r\n\r\n// const recipesArr= require(\"../dataBase/recipesData.json\")\r\n\r\nexport default class RecipeProduct extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            recipe:\"\",\r\n            validForm:\"\",\r\n            counter:0,\r\n            arrayOfMassege:[],\r\n        }\r\n\r\n        this.textMassegeRef= React.createRef()\r\n        this.textInputRef= React.createRef()\r\n        this.mailMassegeRef= React.createRef()\r\n        this.mailRef= React.createRef()\r\n        this.userMassegeRef= React.createRef()\r\n        this.userLnameRef= React.createRef()\r\n        this.userFnameRef= React.createRef()\r\n\r\n        this.inputValid=this.inputValid.bind(this)\r\n        this.updateMassegeList=this.updateMassegeList.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getDataFromFirebase()\r\n        \r\n        this.textMassegeRef.current.style.visibility=\"hidden\"\r\n        this.mailMassegeRef.current.style.visibility=\"hidden\"\r\n        this.userMassegeRef.current.style.visibility=\"hidden\"\r\n    }\r\n    getDataFromFirebase(){\r\n\r\n        let myData = \"\"\r\n        \r\n        db.on('value',async (snapshot)=>{\r\n          if(snapshot.val()!=null){\r\n  \r\n              myData = (snapshot.val())\r\n  \r\n          for (const [key, value] of Object.entries(myData)) {\r\n              myData[key] = Object.keys(myData[key]).map((iKey) => myData[key][iKey])\r\n            }\r\n            this.setState({arr:myData.recipes})\r\n            const recipeTemp=myData.recipes.filter((item)=>{\r\n                return (item[\"title\"]==this.props.match.params.RecipeName)\r\n            })\r\n            await this.setState({recipe:recipeTemp[0]})\r\n            this.updateMassegeList()\r\n           } \r\n        })\r\n    }\r\n\r\n    myFunction() {\r\n        var x = document.getElementById(\"myLinks\");\r\n        if (x.style.display === \"block\") {\r\n          x.style.display = \"none\";\r\n        } else {\r\n          x.style.display = \"block\";\r\n        }\r\n      }\r\n\r\n      ////////////////////////////////////////////////////////       valid        /////////////////////////////////\r\n\r\n    inputValid(){\r\n\r\n        let flag=true\r\n        let tempArray=[]\r\n        let today\r\n\r\n        const textInput =this.textInputRef.current\r\n        const textMassege =this.textMassegeRef.current\r\n\r\n        const mailInput = this.mailRef.current\r\n        const mailMassege = this.mailMassegeRef.current\r\n\r\n        const fnameInput= this.userFnameRef.current\r\n        const lnameInput= this.userLnameRef.current\r\n        const userMassage= this.userMassegeRef.current\r\n\r\n        /////////////    check email   ///////////\r\n\r\n        let array=mailInput.value.split(\"@\");\r\n\r\n        if((mailInput.value.includes(\"@\")) && (array.length==2)&&(array[1].includes(\".\"))){\r\n            array=array[1].split(\".\");\r\n            if(array.length>=2)\r\n                mailMassege.style.visibility=\"hidden\"\r\n            else{\r\n                mailMassege.style.visibility=\"visible\"\r\n                flag=false\r\n            }\r\n            }else{\r\n                mailMassege.style.visibility=\"visible\"\r\n                flag=false\r\n            }\r\n        /////////////    check user   ///////////\r\n\r\n            if(lnameInput.value.length<2 || fnameInput.value.length<2){\r\n                flag=false\r\n                userMassage.style.visibility=\"visible\"\r\n            }\r\n            else\r\n                userMassage.style.visibility=\"hidden\"\r\n\r\n        /////////////    check text   ///////////\r\n\r\n        if(textInput.value.length<2){\r\n            flag=false\r\n            textMassege.style.visibility=\"visible\"\r\n        }\r\n        else\r\n        textMassege.style.visibility=\"hidden\"\r\n\r\n\r\n        this.setState({validForm:flag})\r\n\r\n        if(flag){\r\n            \r\n            today=new Date()\r\n\r\n            let dd = String(today.getDate()).padStart(2, '0');\r\n            let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            let yyyy = today.getFullYear();\r\n            let hh = today.getHours();\r\n            let m = today.getMinutes();\r\n            if(m<10)\r\n                m=\"0\"+m\r\n            if(hh<10)\r\n                hh=\"0\"+hh\r\n            let hour= hh+ ':' +m\r\n            \r\n            today = dd + '/' + mm + '/' + yyyy;\r\n\r\n            let count=this.state.counter\r\n            let massege={id:this.state.counter,fname:fnameInput.value,lname:lnameInput.value,mail:mailInput.value,textMassege:textInput.value,titleBlog:this.state.recipe.title,date:today,time:hour}\r\n            count++\r\n            tempArray.unshift(massege)\r\n            db.child('blogStorage').child(massege.id).set(massege)\r\n\r\n            this.setState({counter:count})\r\n            this.setState({arrayOfMassege:tempArray})\r\n            window.alert(\"ההודעה נוספה בהצלחה\")\r\n            this.myFunction()\r\n        }\r\n    }\r\n\r\n     updateMassegeList(){\r\n\r\n        let storage\r\n        let myData = \"\"\r\n        \r\n        db.on('value', (snapshot)=>{\r\n            if(snapshot.val()!=null){\r\n    \r\n                myData = (snapshot.val())\r\n    \r\n            for (const [key, value] of Object.entries(myData)) {\r\n                myData[key] = Object.keys(myData[key]).map((iKey) => myData[key][iKey])\r\n              }\r\n              storage = (myData.blogStorage)? myData.blogStorage : []\r\n            } \r\n          })\r\n\r\n        let tempArray\r\n        let revtempArray\r\n\r\n        if(storage[0]){\r\n                this.setState({counter:storage.length})\r\n                tempArray=storage.filter((item)=>{\r\n                    return (item[\"titleBlog\"]===this.state.recipe.title)\r\n             })\r\n             revtempArray=tempArray.reverse()\r\n        }\r\n        \r\n        this.setState({arrayOfMassege:revtempArray})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"myContainerRecipesProduct\">\r\n                <h1 className=\"mb-3\">{this.state.recipe.title}</h1>\r\n                <div className=\"imageRecipe\">\r\n                    <img src={this.state.recipe.img} alt={this.state.recipe.alt}></img>\r\n                </div>\r\n                <div className=\"fs-3 mt-3\">\r\n                    {this.state.recipe.description}\r\n                </div>\r\n\r\n                <div className=\"myRowText\">\r\n                    <div className=\"fs-4 colText\">\r\n                        <h3 className=\"mb-3\">מרכיבים:</h3>\r\n                        {this.state.recipe && this.state.recipe.ingredients.map((el, key) => (\r\n                                <p key={key} >{el}</p>\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"fs-4 colText\">\r\n                        <h3 className=\"mb-3\"> אופן ההכנה:</h3>\r\n                        {this.state.recipe.preparation}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <h3>🙂 מוזמנים לשתף איך יצא לכם</h3>\r\n                        \r\n                            \r\n                        <div className=\"topnav m-5\" >\r\n                            <a className=\"active\" onClick={()=>this.myFunction()}>לחץ כאן להוספת תגובה</a>\r\n\r\n                            <div className=\"formRecipe fs-4 mb-3\" id=\"myLinks\">\r\n                                \r\n                                    <div className=\"form-group row \">\r\n                                        <div className=\"col\">\r\n                                            <input type=\"text\" name=\"fname\" id=\"fname\" required className=\"form-control\"  placeholder=\"שם פרטי *\" ref={this.userFnameRef}/>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"col\" >\r\n                                            <input type=\"text\" name=\"lname\" id=\"lname\" required className=\"form-control\" placeholder=\"שם משפחה *\" ref={this.userLnameRef}/>\r\n                                        </div>\r\n\r\n                                        <p id=\"usercheck\" style={{color: \"red\"}} className=\"vlidMassege m-0\" ref={this.userMassegeRef}> **חובה למלא שם פרטי ומשפחה תיקניים  </p>\r\n                                                \r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"form-group \">\r\n                                        \r\n                                        <input type=\"email\" name=\"email\" id=\"email\" required className=\"form-control\" placeholder='דוא\"ל *'  ref={this.mailRef}/>\r\n                                        <p id=\"mailcheck\" style={{color: \"red\"}} ref={this.mailMassegeRef} className=\"vlidMassege m-0\"> **חובה למלא מייל תקין  </p>\r\n                                                \r\n                                    </div>\r\n\r\n                                    <div className=\"form-group  \">\r\n                                        <textarea required className=\"form-control \" placeholder=\" הודעה *\" rows=\"10\" ref={this.textInputRef}></textarea>\r\n                                        <p id=\"usercheck\" style={{color: \"red\"}} ref={this.textMassegeRef} className=\"vlidMassege mb-4\">**חובה למלא תוכן הודעה  </p>\r\n                                    </div>\r\n\r\n\r\n                                    <input type=\"button\" id=\"submitbtn\" value=\"הגב\" className=\"btn btn-dark\"onClick={this.inputValid}/>\r\n                                </div>\r\n\r\n                                <div className=\"massegeList mt-3\">\r\n\r\n                                {(this.state.arrayOfMassege)&& this.state.arrayOfMassege.map((el, key)=>(\r\n\r\n                                        <div className=\"formRecipe fs-4 mb-3\" key={key}>\r\n                                            <div className=\"rowComment\">\r\n                                                <div className=\"detailMassege\">\r\n                                                    שם : {el.fname} {el.lname}   <br/>\r\n                                                    תאריך : {el.date}  <br/>\r\n                                                    שעה :  {el.time}\r\n                                                </div>\r\n\r\n                                                <div className=\"theMassege\">\r\n                                                    {el.textMassege}\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                ))}\r\n\r\n                                </div>\r\n                            \r\n                        </div>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Header.js",["180","181","182","183","184","185","186","187","188","189","190","191"],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Cart.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Contact.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Account.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Product.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Catalog.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\CheckOut.js",["192","193","194","195","196","197","198","199","200","201","202"],"\r\nimport React, { Component } from 'react'\r\nimport {NavLink } from 'react-router-dom';\r\nimport './CheckOut.css';\r\nimport OrderConfirmation from './OrderConfirmation';\r\nimport Paypal from './Paypal';\r\nimport {db} from '../firebase'\r\nimport {auth} from '../firebase'\r\nimport 'firebase/auth'\r\nimport \"firebase/database\";\r\n\r\nlet coupons=[]\r\n// const coupons= require(\"../dataBase/couponData.json\")\r\n\r\n\r\nexport default class CheckOut extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n\r\n            arrItems:[],\r\n            temporaryAmount:\"\",\r\n            shipping:\"\",\r\n            total:\"\",\r\n            couponCurrect:\"\",\r\n            totalBeforeCoupon:\"\",\r\n            couponUsed:false,\r\n            discount:\"\",\r\n            validForm:\"\",\r\n            validPay:\"\",\r\n            detailUser:\"\",\r\n            cardType:\"\",\r\n            userId:'',\r\n            user:'',\r\n        }\r\n        this.couponRef = React.createRef()\r\n        this.couponMessageRef= React.createRef()\r\n        this.totBeforeCouponRef = React.createRef()\r\n\r\n        this.mailRef = React.createRef()\r\n        this.mailMassegeRef = React.createRef()\r\n        this.userFnameRef = React.createRef()\r\n        this.userLnameRef = React.createRef()\r\n        this.userMassegeRef = React.createRef()\r\n        this.phoneInputRef = React.createRef()\r\n        this.phoneMassegeRef= React.createRef()\r\n        this.validityRef=React.createRef()\r\n        this.validityMassegeRef=React.createRef()\r\n        this.cardMassegeRef=React.createRef()\r\n        this.cityRef=React.createRef()\r\n        this.cityMessageRef=React.createRef()\r\n        this.addressRef=React.createRef()\r\n        this.addressMessageRef=React.createRef()\r\n        this.houseTypeRef=React.createRef()\r\n        this.zipRef=React.createRef()\r\n        this.cardDetails=React.createRef()\r\n        this.termsInputRef=React.createRef()\r\n        this.termsMassegeRef=React.createRef()\r\n        \r\n\r\n        this.calculator=this.calculator.bind(this)\r\n        this.checkCoupon=this.checkCoupon.bind(this)\r\n        this.inputValid=this.inputValid.bind(this)\r\n        this.validPayment = this.validPayment.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getDataFromFirebase()\r\n        this.mailMassegeRef.current.style.display=\"none\"\r\n        this.userMassegeRef.current.style.display=\"none\"\r\n        this.cityMessageRef.current.style.display=\"none\"\r\n        this.addressMessageRef.current.style.display=\"none\"\r\n        this.phoneMassegeRef.current.style.display=\"none\"\r\n        this.termsMassegeRef.current.style.display=\"none\"\r\n\r\n        this.loadItemsFromLocalStorage()\r\n        this.calculator()\r\n\r\n    }\r\n\r\n    async getDataFromFirebase(){\r\n\r\n        let myData = \"\"\r\n        \r\n        db.on('value',async (snapshot)=>{\r\n          if(snapshot.val()!=null){\r\n  \r\n              myData = (snapshot.val())\r\n  \r\n          for (const [key, value] of Object.entries(myData)) {\r\n              myData[key] = Object.keys(myData[key]).map((iKey) => myData[key][iKey])\r\n            }\r\n            coupons=myData.coupons\r\n           } \r\n        })\r\n\r\n\r\n        let userData\r\n        let userUid\r\n\r\n       await auth.onAuthStateChanged(user=>{\r\n          if(user)\r\n           this.setState({userId:user.uid})\r\n       })\r\n       console.log()\r\n       userUid=this.state.userId\r\n       db.on('value', (snapshot)=>{\r\n         if(snapshot.val()!=null){\r\n           userData=snapshot.val().users[userUid]\r\n           this.setState({user: userData})\r\n \r\n           if(this.userFnameRef.current){\r\n                this.userFnameRef.current.value=userData.firstName\r\n                this.userLnameRef.current.value=userData.lastName\r\n                this.phoneInputRef.current.value=userData.phone\r\n                this.mailRef.current.value=userData.email\r\n                this.addressRef.current.value=userData.address.street\r\n                this.cityRef.current.value=userData.address.city\r\n                this.houseTypeRef.current.value=userData.address.type\r\n                this.zipRef.current.value=userData.address.zipcode\r\n           }\r\n          \r\n         } \r\n       })\r\n    }\r\n\r\n    loadItemsFromLocalStorage(){\r\n\r\n        const storage=JSON.parse(localStorage.getItem(\"cartStorage\")||\"[]\")\r\n        this.setState({arrItems:storage})\r\n\r\n    }\r\n    calculator(){\r\n\r\n        let ship\r\n        let sumOfItem=0\r\n        let storage=JSON.parse(localStorage.getItem(\"cartStorage\")||\"[]\")\r\n\r\n        for (const iterator of storage) {\r\n            sumOfItem+=iterator.count*iterator.price\r\n        }\r\n\r\n        this.setState({temporaryAmount:sumOfItem})\r\n\r\n        if(sumOfItem>=400){\r\n            this.setState({shipping: \"--\"})\r\n            this.setState({total:sumOfItem})\r\n        }else{\r\n            ship=20\r\n            this.setState({shipping:ship})\r\n            this.setState({total:(sumOfItem+ship)})\r\n        }\r\n            \r\n    }\r\n\r\n    async checkCoupon(){\r\n\r\n        const coupon = this.couponRef.current\r\n        const couponMessage=this.couponMessageRef.current\r\n        let flag=false\r\n        let calculateDisc\r\n        let tot\r\n        const totBefore=this.totBeforeCouponRef.current\r\n\r\n        if(coupons[0]){\r\n            for (const item of coupons) {\r\n                if(item.serialNumber===coupon.value){\r\n                    await this.setState({couponCurrect:item})\r\n                    flag=true\r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        if(flag){\r\n            couponMessage.innerHTML=`הקופון הוזן בהצלחה קיבלת ${this.state.couponCurrect.discountPercentage}%  הנחה`\r\n            couponMessage.style.color=\"green\"\r\n\r\n            calculateDisc= Math.floor(this.state.total*(1-this.state.couponCurrect.discountPercentage/100)) \r\n            tot=this.state.total\r\n            totBefore.innerHTML=`${tot}₪`\r\n            let disc=Math.floor((this.state.couponCurrect.discountPercentage/100)*this.state.total)\r\n            \r\n            this.setState({discount:disc})\r\n            this.setState({totalBeforeCoupon:tot})\r\n            this.setState({total:calculateDisc})\r\n            this.setState({couponUsed:true})\r\n\r\n\r\n        }else{\r\n            this.setState({discount:\"\"})\r\n            this.setState({couponCurrect:\"\"})\r\n\r\n            if(this.state.couponUsed){\r\n\r\n                let temp= this.state.totalBeforeCoupon\r\n                this.setState({couponUsed:false})\r\n                this.setState({total:temp})\r\n                this.setState({totalBeforeCoupon:\"\"})\r\n\r\n            }\r\n            couponMessage.innerHTML=`שגיאה בהזנת הקופון`\r\n            couponMessage.style.color=\"red\"\r\n            totBefore.innerHTML=\"\"\r\n            setTimeout(() => {\r\n                couponMessage.innerHTML=\"\"\r\n            }, 3000);\r\n        }\r\n\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////       valid Form       /////////////////////////////////\r\n\r\n    async inputValid(){\r\n\r\n        let flag=true\r\n\r\n        const mailInput = this.mailRef.current\r\n        const mailMassege = this.mailMassegeRef.current\r\n\r\n        const fnameInput= this.userFnameRef.current\r\n        const lnameInput= this.userLnameRef.current\r\n        const userMassage= this.userMassegeRef.current\r\n\r\n        const cityInput = this.cityRef.current\r\n        const cityMassege =this.cityMessageRef.current\r\n\r\n        const addressInput =this.addressRef.current\r\n        const addressMessage =this.addressMessageRef.current\r\n\r\n        const phoneInput= this.phoneInputRef.current\r\n        const phoneMassage= this.phoneMassegeRef.current\r\n\r\n        const zipInput= this.zipRef.current\r\n\r\n\r\n        const termInput= this.termsInputRef.current\r\n        const termMessage= this.termsMassegeRef.current\r\n\r\n        /////////////    check email   ///////////\r\n\r\n        let array=mailInput.value.split(\"@\");\r\n\r\n        if((mailInput.value.includes(\"@\")) && (array.length==2)&&(array[1].includes(\".\"))){\r\n            array=array[1].split(\".\");\r\n            if(array.length>=2)\r\n                mailMassege.style.display=\"none\"\r\n            else{\r\n                mailMassege.style.display=\"inline\"\r\n                flag=false\r\n            }\r\n            }else{\r\n                mailMassege.style.display=\"inline\"\r\n                flag=false\r\n            }\r\n        /////////////    check user   ///////////\r\n\r\n            if(lnameInput.value.length<2 || fnameInput.value.length<2){\r\n                flag=false\r\n                userMassage.style.display=\"inline\"\r\n            }\r\n            else\r\n                userMassage.style.display=\"none\"\r\n\r\n        /////////////    check city   ///////////\r\n\r\n        if(cityInput.value.length<2){\r\n            flag=false\r\n            cityMassege.style.display=\"inline\"\r\n        }\r\n        else\r\n            cityMassege.style.display=\"none\"\r\n\r\n        /////////////    check address   ///////////\r\n\r\n        if(addressInput.value.length<2){\r\n            flag=false\r\n            addressMessage.style.display=\"inline\"\r\n        }\r\n        else\r\n            addressMessage.style.display=\"none\"\r\n\r\n        /////////////    check phone   ///////////\r\n           \r\n        if(phoneInput.value[0] !=0 || phoneInput.value[1]!=5 || phoneInput.value.length!==10){\r\n            phoneMassage.style.display=\"inline\"\r\n            flag=false\r\n        }\r\n        else\r\n            phoneMassage.style.display=\"none\"\r\n\r\n       \r\n        \r\n        /////////////    check term   ///////////\r\n\r\n        if(!termInput.checked){\r\n            termMessage.style.display=\"inline\"\r\n            flag=false\r\n        }else{\r\n            termMessage.style.display=\"none\"\r\n        }\r\n\r\n        if(flag){\r\n\r\n            let userDetail={fname:fnameInput.value,lname:lnameInput.value,email:mailInput.value,city:cityInput.value,address:addressInput.value,houseType:this.houseTypeRef.current.value,zip:zipInput.value,phone:phoneInput.value}\r\n            localStorage.setItem(\"userDetails\",JSON.stringify(userDetail))\r\n            this.setState({detailUser:userDetail})\r\n        }\r\n\r\n        await this.setState({validForm:flag})\r\n\r\n        if(flag){\r\n            this.validityMassegeRef.current.style.display=\"none\"\r\n            this.cardMassegeRef.current.style.display=\"none\"\r\n            this.cardDetails.current.style.display=\"none\"\r\n        }\r\n    }\r\n\r\n\r\n    //////////////////////// valid Pay    ///////////////////////////////////\r\n       \r\n    validPayment(){\r\n\r\n        let flag=true\r\n        const cardMassege= this.cardMassegeRef.current\r\n\r\n        const validityInput= this.validityRef.current\r\n        const validityMassege= this.validityMassegeRef.current\r\n\r\n\r\n        /////////////    chose type of payment   ///////////\r\n\r\n        if(!this.state.cardType){\r\n            cardMassege.style.display=\"inline\"\r\n            flag=false\r\n        }else{\r\n            cardMassege.style.display=\"none\"\r\n        }\r\n\r\n\r\n\r\n        if(this.state.cardType===\"mastercard\" || this.state.cardType===\"visa\" || this.state.cardType===\"amex\"){\r\n\r\n            /////////////    check validity   ///////////\r\n\r\n            if(validityInput.value.includes(\"/\") && validityInput.value.length===5){\r\n\r\n                let arr=validityInput.value.split(\"/\")\r\n                if(Number.isInteger(arr[0]*1) && Number.isInteger(arr[1]*1))\r\n                    validityMassege.style.display=\"none\"\r\n                else{\r\n                    flag=false\r\n                    validityMassege.style.display=\"inline\"\r\n                }\r\n\r\n            }else{\r\n                validityMassege.style.display=\"inline\"\r\n                flag=false\r\n            }\r\n            \r\n\r\n        }else if(this.state.cardType===\"paypal\"){\r\n            if(!(localStorage.getItem(\"order\")===\"correct\"))\r\n            flag=false\r\n        }else{\r\n            flag=false\r\n        }\r\n\r\n        this.setState({validPay:flag})\r\n\r\n        if(flag){\r\n\r\n            let today=new Date()\r\n\r\n            let dd = String(today.getDate()).padStart(2, '0');\r\n            let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            let yyyy = today.getFullYear();\r\n            let hh = today.getHours();\r\n            let m = today.getMinutes();\r\n            if(m<10)\r\n                m=\"0\"+m\r\n            if(hh<10)\r\n                hh=\"0\"+hh\r\n            let hour= hh+ ':' +m\r\n            \r\n            today = dd + '/' + mm + '/' + yyyy;\r\n\r\n            let myData = \"\"\r\n            let orderLng\r\n        \r\n            db.on('value', (snapshot)=>{\r\n                if(snapshot.val()!=null){\r\n        \r\n                    myData = (snapshot.val())\r\n        \r\n                for (const [key, value] of Object.entries(myData)) {\r\n                    myData[key] = Object.keys(myData[key]).map((iKey) => myData[key][iKey])\r\n                  }\r\n                  orderLng = (myData.orders)? myData.orders.length : 0\r\n                } \r\n              })\r\n\r\n\r\n            let data = {id:orderLng,cart:this.state.arrItems,userOrder:this.state.detailUser,payment:this.state.total,date:{date:today,time:hour},doneAndSend:false}\r\n\r\n            auth.onAuthStateChanged(user=>{\r\n  \r\n                if(user){\r\n                    db.child('orders').child(orderLng).set(data)\r\n                }\r\n             })\r\n        }\r\n    }\r\n    \r\n    valiNumber(e) {\r\n        e.value=e.value.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1');\r\n        }\r\n\r\n        cardType(e){\r\n\r\n            this.setState({cardType:e})\r\n\r\n            if(e===\"mastercard\" || e===\"visa\" || e===\"amex\")\r\n                this.cardDetails.current.style.display=\"inline\"\r\n            else \r\n                this.cardDetails.current.style.display=\"none\"\r\n\r\n        }\r\n      \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(!this.state.validPay)? <div className=\"myContainerCart\">\r\n                \r\n                <div className=\"statusOrder\">\r\n\r\n                    <div className=\"container p-0\">\r\n                            <div className=\"card\">\r\n                            \r\n                                <div className=\"card-body\">\r\n                                    <div className=\"steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x\">\r\n                                    <div className=\"step completed m-0\">\r\n                                        <div className=\"step-icon-wrap\">\r\n                                        <div className=\"step-icon \"><i className=\"pe-7s-cart \"></i></div>\r\n                                        </div>\r\n                                        <h4 className=\"step-title fs-5\">עגלת קניות</h4>\r\n                                    </div>\r\n                                    <div className=\"step completed m-0\">\r\n                                        <div className=\"step-icon-wrap\">\r\n                                        <div className=\"step-icon\"><i className=\"pe-7s-config\"></i></div>\r\n                                        </div>\r\n                                        <h4 className=\"step-title fs-5\">פרטי ההזמנה</h4>\r\n                                    </div>\r\n                                    <div className=\"step m-0\">\r\n                                        <div className=\"step-icon-wrap\">\r\n                                        <div className=\"step-icon\"><i className=\"pe-7s-medal\"></i></div>\r\n                                        </div>\r\n                                        <h4 className=\"step-title fs-5\">ההזמנה הושלמה</h4>\r\n                                    </div>\r\n                                \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btnRow mb-3\">\r\n                    <NavLink to=\"/Catalog\" ><button type=\"button\" style={{backgroundColor:\"rgb(155,23,80)\"}}> <b>חזרה לחנות</b></button></NavLink>\r\n                    <NavLink to=\"/Cart\" ><button type=\"button\" style={{backgroundColor:\"rgb(93,0,29)\"}}> <b> חזרה לעגלה </b></button></NavLink>\r\n                </div>\r\n\r\n                <div className=\"myRowCart\">\r\n                                        \r\n                    <div id=\"myForm\">\r\n                        <hr style={{height:\"5px\"}}></hr>\r\n                        <div className=\"formToOrder m-5 fs-4\">\r\n                            <h3>פרטי משלוח:</h3>\r\n                            <div className=\"form-group row \">\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"fname\">\r\n                                        שם פרטי:  *\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"fname\" id=\"fname\" required className=\"form-control\" ref={this.userFnameRef}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"col\" >\r\n                                    <label htmlFor=\"lname\">\r\n                                        שם משפחה:  *\r\n                                    </label>\r\n                                    <input type=\"text\" name=\"lname\" id=\"lname\" required className=\"form-control\"  ref={this.userLnameRef}/>\r\n                                    \r\n                                </div>\r\n                                <p id=\"usercheck\" style={{color: \"red\"}} className=\"vlidMassege\" ref={this.userMassegeRef}>\r\n                                        **חובה למלא שם פרטי ושם משפחה תיקניים  \r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">\r\n                                    מייל:  *\r\n                                </label>\r\n                                <input type=\"email\" name=\"email\" id=\"email\" required className=\"form-control\" ref={this.mailRef}/>\r\n                                <p id=\"mailcheck\" style={{color: \"red\"}} ref={this.mailMassegeRef} className=\"vlidMassege\">\r\n                                        **חובה למלא מייל תקין  \r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"city\">\r\n                                    עיר:  *\r\n                                </label>\r\n                                <input type=\"city\" name=\"city\" id=\"city\" required className=\"form-control\" ref={this.cityRef}/>\r\n                                <p id=\"citycheck\" style={{color: \"red\"}} ref={this.cityMessageRef} className=\"vlidMassege\">**חובה למלא את שם העיר </p>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                                \r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"address\">\r\n                                        כתובת:  *\r\n                                    </label>\r\n                                    <input type=\"address\" name=\"address\" id=\"address\" required className=\"form-control\" placeholder=\"מספר בית ושם רחוב\" ref={this.addressRef}/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"typeAddress\">\r\n                                        \r\n                                    </label>\r\n                                    <input type=\"text\" name=\"typeAddress\" id=\"typeAddress\" className=\"form-control\" placeholder=\"דירה/בית פרטי/יח' דיור...\" ref={this.houseTypeRef}/>\r\n                                </div>\r\n                                <p id=\"addresscheck\" style={{color: \"red\"}} ref={this.addressMessageRef} className=\"vlidMassege\">** חובה למלא כתובת </p>\r\n                            </div>\r\n                        \r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"zip\">\r\n                                    מיקוד:\r\n                                </label>\r\n                                <input type=\"zip\" name=\"zip\" id=\"zip\" className=\"form-control\" maxLength=\"7\" onChange={(e)=>this.valiNumber(e.target)} ref={this.zipRef}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group \">\r\n                                <label htmlFor=\"phone\">\r\n                                    פלאפון:  *\r\n                                </label>\r\n                                <input type=\"phone\" name=\"phone\" id=\"phone\" required className=\"form-control\" maxLength=\"10\" onChange={(e)=>this.valiNumber(e.target)} ref={this.phoneInputRef}/>\r\n                                <p id=\"usercheck\" style={{color: \"red\"}} ref={this.phoneMassegeRef} className=\"vlidMassege\">\r\n                                    **חובה למלא מספר פלאפון תקין  \r\n                                </p>\r\n\r\n                                <br/>\r\n                                <label id=\"Conditions\" className=\"containerCheckBox\">קראתי ואני מסכים לתנאי השימוש *\r\n                                    <input type=\"checkbox\" required className=\"form-control\" ref={this.termsInputRef}/>\r\n                                    <span className=\"checkmark\"></span><br/>\r\n                                    <p id=\"termscheck\" style={{color: \"red\"}} className=\"vlidMassege\" ref={this.termsMassegeRef}> ** חובה לאשר את התקנון שלא קיים  </p>\r\n                                </label>\r\n                \r\n                                <button id=\"submitbtn\" className=\"btn btn-primary pe-4 ps-4\" onClick={this.inputValid}>שלח</button>\r\n                            </div>\r\n\r\n                            <hr/>\r\n                            {(this.state.validForm)? <div>\r\n                            <h3> אמצעי תשלום:</h3>\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"payment-info\">\r\n                                    <span className=\"type d-block mt-3 mb-1\"> סוג כרטיס / פייפל</span>\r\n                                    <label className=\"radio\"> <input type=\"radio\" name=\"card\" value=\"mastercard\" onClick={(e)=>this.cardType(e.target.value)}/> <span><img width=\"50\" src=\"https://img.icons8.com/color/48/000000/mastercard.png\" /></span> </label>\r\n                                    <label className=\"radio\"> <input type=\"radio\" name=\"card\" value=\"visa\" onClick={(e)=>this.cardType(e.target.value)}/> <span><img width=\"50\" src=\"https://img.icons8.com/officel/48/000000/visa.png\" /></span> </label>\r\n                                    <label className=\"radio\"> <input type=\"radio\" name=\"card\" value=\"amex\" onClick={(e)=>this.cardType(e.target.value)}/> <span><img width=\"50\" src=\"https://img.icons8.com/ultraviolet/48/000000/amex.png\" /></span> </label>\r\n                                    <label className=\"radio\"> <input type=\"radio\" name=\"card\" value=\"paypal\" onClick={(e)=>this.cardType(e.target.value)}/> <span><img width=\"50\" src=\"https://img.icons8.com/officel/48/000000/paypal.png\" /></span> </label>\r\n                                    <br/> <p id=\"usercheck\" style={{color: \"red\"}} className=\"vlidMassege\" ref={this.cardMassegeRef}> ** נא לבחור אמצעי תשלום  </p>\r\n\r\n                                    \r\n                                    <div ref={this.cardDetails}>\r\n                                        <div><label className=\"credit-card-label\">שם בעל הכרטיס:</label><input type=\"text\" className=\"form-control credit-inputs\" placeholder=\"ישראל ישראלי\" required/></div>\r\n                                        <div><label className=\"credit-card-label\">מספר כרטיס: </label><input type=\"text\" className=\"form-control credit-inputs\" placeholder=\"0000 0000 0000 0000\" required onChange={(e)=>this.valiNumber(e.target)}/></div>\r\n                                        <div className=\"row \">\r\n                                            <div className=\"col-md-6\"><label className=\"credit-card-label\">תוקף הכרטיס:</label><input type=\"text\" className=\"form-control credit-inputs\" placeholder=\"12/24\" required maxLength=\"5\"ref={this.validityRef}/></div>\r\n                                            <div className=\"col-md-6\"><label className=\"credit-card-label\">CVV:</label><input type=\"text\" className=\"form-control credit-inputs\" placeholder=\"342\" required maxLength=\"3\" onChange={(e)=>this.valiNumber(e.target)}/></div>\r\n                                            <p id=\"usercheck\" style={{color: \"red\"}} className=\"vlidMassege\" ref={this.validityMassegeRef}> **  תוקף הכרטיס חייב להכיל  /  </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {(this.state.cardType===\"paypal\")&& <Paypal numberItem={this.state.arrItems.length} total={this.state.total}/>}\r\n\r\n                                    <hr className=\"line\"/>\r\n                                    <div className=\"d-flex justify-content-between information\"><span>סה\"כ לתשלום:</span><span>{this.state.total}₪</span></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button id=\"submitbtn\" className=\"btn btn-primary pe-4 ps-4\" onClick={this.validPayment}>שלם</button>\r\n                            </div>:<div></div>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                        \r\n\r\n\r\n\r\n                    <div className=\"chechoutList\">\r\n                        <hr className=\"mb-4\" style={{height:\"5px\"}}/>\r\n                         <div className=\"card-body\" >\r\n\r\n                            <h4 className=\"mb-3\">פרטי הזמנה </h4>\r\n\r\n                            <ul className=\"list-group list-group-flush p-0\" >\r\n                                <li className=\" d-flex justify-content-between align-items-center px-0 pb-0\">\r\n                                    מוצר\r\n                                    <span>סכום ביניים</span>\r\n                                </li>\r\n                                <hr/>\r\n                                {this.state.arrItems.map((el, key) => (\r\n                                    <li className=\" d-flex justify-content-between align-items-center px-0 pb-0 \" key={key}>\r\n                                      {el.title} {el.count}: \r\n                                    <span>{el.price*el.count}₪</span>\r\n                                </li>\r\n\r\n                                    ))}\r\n\r\n                                <br/><br/>\r\n                                <li className=\"d-flex justify-content-between align-items-center px-0\">\r\n                                    סכום ביניים\r\n                                    <span>{this.state.total}₪</span>\r\n                                </li>\r\n                                <hr/>\r\n                                <li className=\"d-flex justify-content-between align-items-center px-0\">\r\n                                    משלום\r\n                                    <span>{this.state.shipping}₪</span>\r\n                                </li>\r\n\r\n                                    {(this.state.discount) ? <li className=\"d-flex justify-content-between align-items-center px-0 mb-2\">הנחת קופון<span>{this.state.discount}₪-</span></li> :<span></span>}\r\n                                \r\n                                <li className=\"d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\r\n                                    <div>\r\n                                            <strong>סה\"כ לתשלום</strong>\r\n                                            <strong>\r\n                                            <p className=\"mb-0\">(כולל מע\"מ)</p>\r\n                                            </strong>\r\n                                    </div>\r\n                                <span><strong>{this.state.total}₪<span ref={this.totBeforeCouponRef} style={{color:\"red\",textDecoration:\"line-through\",marginLeft:\"8px\"}}></span></strong></span>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <div className=\" mb-3\">\r\n                                <div className=\"card-body\"><h5 className=\"mb-3\">הוספת קופון</h5>\r\n                                    \r\n                                        <input type=\"text\" id=\"discount-code1\" ref={this.couponRef} className=\"form-control font-weight-light\" placeholder=\" הכנס קופון\"/>\r\n                                        <p className=\"mb-0 mt-1\" ref={this.couponMessageRef}></p>\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-block waves-effect waves-light mb-4 mt-3\" onClick={this.checkCoupon}>החלת קופון </button>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>: <OrderConfirmation userDetail={this.state.detailUser} numberItem={this.state.arrItems.length} sumItem={this.state.temporaryAmount} shipping={this.state.shipping} total={this.state.total} discountBool={this.state.couponUsed} discount={this.state.discount}/>}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Recipes.js",["203","204","205"],"\r\nimport React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player'\r\nimport { Link} from 'react-router-dom';\r\nimport {db} from '../firebase'\r\nimport './Recipes.css';\r\n\r\n\r\n\r\n// const recipesArr= require(\"../dataBase/recipesData.json\")\r\n\r\nexport default class Recipes extends Component {\r\n\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            \r\n            arr:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDataFromFirebase()\r\n    }\r\n    getDataFromFirebase(){\r\n\r\n        let myData = \"\"\r\n        \r\n        db.on('value',async (snapshot)=>{\r\n          if(snapshot.val()!=null){\r\n  \r\n              myData = (snapshot.val())\r\n  \r\n          for (const [key, value] of Object.entries(myData)) {\r\n              myData[key] = Object.keys(myData[key]).map((iKey) => myData[key][iKey])\r\n            }\r\n            await this.setState({arr:myData.recipes})\r\n            this.fixDate()\r\n           } \r\n        })\r\n    }\r\n\r\n    fixDate(){\r\n\r\n        let array= this.state.arr\r\n        array.map((el, key) => {\r\n            let tempArr=el.date.split(\"-\")\r\n            el.date=`${tempArr[2]}/${tempArr[1]}/${tempArr[0][2]}${tempArr[0][3]}`\r\n        })\r\n        this.setState({arr:array})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"myContainerRecipes\">\r\n\r\n                    <h1>מתכונים</h1>\r\n                    <div className='player-wrapper'>\r\n                        <ReactPlayer className='react-player ' width='100%' height='100%' url='https://www.youtube.com/watch?v=-ZnK6OgRqqY&ab_channel=BluebellRecipes' />\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n\r\n                        <div className=\"row m-2\">\r\n\r\n                            {(this.state.arr[0]) && this.state.arr.map((el, key) => (\r\n                                <Link className={((key+1)%9===1 || (key+1)%9===5 || (key+1)%9===8)?\"col-lg-3 mb-4 col-sm-5 \":((key+1)%9===2 || (key+1)%9===4 || (key+1)%9===0)? \"col-lg-5  mb-4 col-sm-5\":\"col-lg-4  mb-4 col-sm-5\" } \r\n                                key={key} to={\"/Recipes/\"+el.title}>\r\n                                    \r\n                                    <div className=\"image\"><div className=\"dateBanner\">{el.date}</div><div className=\"titleBanner\">{el.title}</div><img src={el.img} alt={el.alt}></img></div>\r\n                                </Link>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\NotFound.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Footer.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\ScrollToTop.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyAdmin.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\protected.route.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\HomeElement.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\firebase.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\auth.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Rating.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\ItemCart.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\OrderConfirmation.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Sortbar.js",["206","207","208"],"\r\nimport React, { Component } from 'react';\r\nimport {useWindowSize,} from '@react-hook/window-size'\r\nimport './Sortbar.css';\r\n\r\n// let sliderC = new Slider(\"#ex12c\", { id: \"slider12c\", min: 0, max: 10, range: true, value: [3, 7] });\r\n\r\n\r\n\r\nclass Sortbar extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            width:\"\",\r\n            \r\n        }\r\n\r\n        this.fillter1Ref= React.createRef()\r\n        this.fillter2Ref= React.createRef()\r\n        this.fillter3Ref= React.createRef()\r\n        this.fillter4Ref= React.createRef()\r\n        this.valiPrice=this.valiPrice.bind(this)\r\n        this.handleResize=this.handleResize.bind(this)\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n      }\r\n\r\n    componentDidMount(){\r\n\r\n        const fillterHide1= this.fillter1Ref.current\r\n        const fillterHide2= this.fillter2Ref.current\r\n        const fillterHide3= this.fillter3Ref.current\r\n        const fillterHide4= this.fillter4Ref.current\r\n\r\n        window.addEventListener('resize', this.handleResize)\r\n\r\n        if(window.innerWidth< 500){\r\n            fillterHide1.style.borderTop=\"rgb(94, 93, 93) solid 2px\"\r\n            fillterHide1.style.display=\"none\"\r\n            fillterHide2.style.display=\"none\"\r\n            fillterHide3.style.display=\"none\"\r\n            fillterHide4.style.display=\"none\"\r\n        }\r\n\r\n    }\r\n    \r\n    valiPrice(e) {\r\n        e.value=e.value.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1');\r\n        let max=Number(document.querySelector(\"#priceMax\").value)\r\n        let min=Number(document.querySelector(\"#priceMin\").value)\r\n\r\n        if(min>max && max !=\"\"){\r\n            \r\n            document.querySelector(\"#invalid\").innerHTML= \"המחיר המקסימילי חייב להיות גדול מהמחיר המינימלי\"\r\n        }else{\r\n            document.querySelector(\"#invalid\").innerHTML= \"\"\r\n            this.props.filteringPrice(min,max)\r\n        }\r\n\r\n\r\n      }\r\n\r\n      handleResize(){\r\n\r\n        const fillterHide1= this.fillter1Ref.current\r\n        const fillterHide2= this.fillter2Ref.current\r\n        const fillterHide3= this.fillter3Ref.current\r\n        const fillterHide4= this.fillter4Ref.current\r\n\r\n        if(fillterHide1){\r\n            if(window.innerWidth> 500){\r\n\r\n                fillterHide1.style.display=\"block\"\r\n                fillterHide2.style.display=\"block\"\r\n                fillterHide3.style.display=\"block\"\r\n                fillterHide4.style.display=\"block\"\r\n                fillterHide1.style.borderTop=\"rgb(94, 93, 93) solid 0px\"\r\n    \r\n            }else{\r\n                fillterHide1.style.borderTop=\"rgb(94, 93, 93) solid 2px\"\r\n                fillterHide1.style.display=\"none\"\r\n                fillterHide2.style.display=\"none\"\r\n                fillterHide3.style.display=\"none\"\r\n                fillterHide4.style.display=\"none\"\r\n            }\r\n        }\r\n      }\r\n      \r\n      myFunction() {\r\n\r\n        const fillterHide1= this.fillter1Ref.current\r\n        const fillterHide2= this.fillter2Ref.current\r\n        const fillterHide3= this.fillter3Ref.current\r\n        const fillterHide4= this.fillter4Ref.current\r\n        \r\n        if (fillterHide1.style.display === \"block\") {\r\n\r\n            fillterHide1.style.display=\"none\"\r\n            fillterHide2.style.display=\"none\"\r\n            fillterHide3.style.display=\"none\"\r\n            fillterHide4.style.display=\"none\"\r\n            fillterHide1.style.borderTop=\"rgb(94, 93, 93) solid 0px\"\r\n\r\n          \r\n        } else {\r\n\r\n            fillterHide1.style.display=\"block\"\r\n            fillterHide2.style.display=\"block\"\r\n            fillterHide3.style.display=\"block\"\r\n            fillterHide4.style.display=\"block\"\r\n            fillterHide1.style.borderTop=\"rgb(94, 93, 93) solid 2px\"\r\n        }\r\n      }\r\n\r\n\r\n   render(){\r\n\r\n    return(\r\n         \r\n            \r\n            <div className=\"sortBar\">\r\n                <div className=\"sort\">\r\n                    <label htmlFor=\"sortBy\">מיין לפי:</label><br/>\r\n                    <select name=\"sortBy\" onChange={(e)=>this.props.sortFunc(e.target.value)}>\r\n                        <option>העדכני ביותר</option>\r\n                        <option>הפופלרי ביותר</option>\r\n                        <option>מהזול ליקר</option>\r\n                        <option> מהיקר לזול</option>\r\n\r\n                    </select>\r\n                    \r\n                </div>\r\n\r\n                <a className=\"activeBtn\" onClick={()=>this.myFunction()}> פילטר <i className=\"fas fa-sliders-h\"></i> </a>\r\n                \r\n                <div className=\"filter\" ref={this.fillter1Ref}>\r\n\r\n                    <div className=\"[ form-group ]\" style={{\"marginTop\":\"20px\"}}>\r\n                        <input type=\"checkbox\" name=\"milk\" id=\"milk\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"milk\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"milk\" className=\"[ btn btn-default active ]\">חלבי</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"[ form-group ]\">\r\n                        <input type=\"checkbox\" name=\"parve\" id=\"parve\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"parve\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"parve\" className=\"[ btn btn-default active ]\">פרווה</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"filter\"  ref={this.fillter2Ref}>\r\n\r\n                    <div className=\"[ form-group ]\" style={{\"marginTop\":\"20px\"}}>\r\n                        <input type=\"checkbox\" name=\"fruit\" id=\"fruit\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"fruit\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"fruit\" className=\"[ btn btn-default active ]\">פירותי</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"[ form-group ]\">\r\n                        <input type=\"checkbox\" name=\"withoutfruit\" id=\"withoutfruit\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"withoutfruit\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"withoutfruit\" className=\"[ btn btn-default active ]\">ללא פירות</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"filter\"  ref={this.fillter3Ref}>\r\n\r\n                    <div className=\"[ form-group ]\" style={{\"marginTop\":\"20px\"}}>\r\n                        <input type=\"checkbox\" name=\"glutenFree\" id=\"glutenFree\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"glutenFree\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"glutenFree\" className=\"[ btn btn-default active ]\">ללא גלוטן</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"[ form-group ]\">\r\n                        <input type=\"checkbox\" name=\"shugerFree\" id=\"shugerFree\" autoComplete=\"off\" onClick={(e)=>this.props.addFilter(e.target)}/>\r\n                        <div className=\"[ btn-group ]\">\r\n                            <label htmlFor=\"shugerFree\" className=\"[ btn btn-primary ]\">\r\n                                <span className=\"[ glyphicon glyphicon-ok ]\">✔</span>\r\n                                <span> </span>\r\n                            </label>\r\n                            <label htmlFor=\"shugerFree\" className=\"[ btn btn-default active ]\">ללא סוכר</label>\r\n                        </div>    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"priceFilter\"  ref={this.fillter4Ref}>\r\n\r\n                    <p><b> טווח מחירים:</b></p>\r\n\r\n                        <label htmlFor=\"priceMin\">מחיר מינימלי:</label>\r\n                        <input type=\"text\" name=\"priceMin\" id=\"priceMin\" maxLength=\"3\" onChange={(e)=>this.valiPrice(e.target)}/>\r\n                        <label htmlFor=\"priceMax\">מחיר מקסימלי:</label>\r\n                        <input type=\"text\" name=\"priceMax\" id=\"priceMax\" maxLength=\"3\" onChange={(e)=>this.valiPrice(e.target)}/>\r\n                        <p id=\"invalid\"></p>\r\n        \r\n                </div>\r\n\r\n            </div>\r\n        \r\n        \r\n      );\r\n      \r\n   }\r\n}\r\n   export default Sortbar;","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Paypal.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Spinner.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyDashboard.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\Map.jsx",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\PaypalButton.js",["209"],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Users.js",["210","211","212","213","214","215","216"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,ReferenceField,EditButton,Edit,Create,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput, DeleteButton,Filter,BooleanInput,AutocompleteInput,email,required,RefreshButton,\r\n    ExportButton,CreateButton,FilterButton} from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\nimport ActivationButton from './ActivationButton';\r\n\r\n\r\n\r\n\r\n// const UserActionsButtons = props => (\r\n    \r\n//     <div>\r\n//         <RefreshButton {...props}/>\r\n//         <ExportButton {...props}/>\r\n//         <CreateButton {...props}/>\r\n//     </div>\r\n// );\r\n\r\nexport const UserList = props => (\r\n    \r\n    <List {...props} filters={<UserFilter />} >\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"firstName\" />\r\n            <TextField source=\"lastName\" />\r\n            <EmailField source=\"email\" />\r\n            <TextField source=\"phone\" />\r\n            <TextField source=\"address.street\" />\r\n            <TextField source=\"address.city\" />\r\n            <TextField source=\"address.type\" />\r\n            <TextField source=\"address.zipcode\" />\r\n            <TextField source=\"role\" />\r\n            <MyActiveField source=\"active\" />\r\n            <EditButton />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"firstName\" />\r\n            <TextInput source=\"lastName\" />\r\n            <TextInput type=\"email\" source=\"email\" validate={[required(), email()]} />\r\n            <TextInput source=\"phone\" />\r\n            <TextInput source=\"address.street\" />\r\n            <TextInput source=\"address.city\" />\r\n            <TextInput source=\"address.type\" />\r\n            <TextInput source=\"address.zipcode\" />\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n            <AutocompleteInput source=\"role\" choices={[\r\n                { id: 'user', name: 'User' },\r\n                { id: 'admin', name: 'Admin' },\r\n            ]} />\r\n            {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput> */}\r\n                \r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\nexport const UserCreate = props => (\r\n        <Create {...props}>\r\n            <SimpleForm>\r\n                <TextInput source=\"id\" />\r\n                <TextInput source=\"firstName\" />\r\n                <TextInput source=\"lastName\" />\r\n                <TextInput source=\"email\" />\r\n                <TextInput source=\"phone\" />\r\n                <TextInput source=\"address.street\" />\r\n                <TextInput source=\"address.city\" />\r\n                <TextInput source=\"address.type\" />\r\n                <TextInput source=\"address.zipcode\" />\r\n                <BooleanInput label=\"active\" source=\"active\" />\r\n                <AutocompleteInput source=\"role\" choices={[\r\n                    { id: 'user', name: 'User' },\r\n                    { id: 'admin', name: 'Admin' },\r\n                ]} />\r\n                {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                    <SelectInput optionText=\"name\" />\r\n                </ReferenceInput> */}\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );\r\n\r\n    ","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Products.js",["217"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,Create,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput,Filter,BooleanInput,RefreshButton,\r\n    ExportButton,CreateButton,ImageField} from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\n\r\n\r\nconst ProductActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton />\r\n        <ExportButton />\r\n        <CreateButton />\r\n    </div>\r\n);\r\n\r\nexport const ProductList = props => (\r\n    <List {...props} filters={<UserFilter/>} actions={<ProductActionsButtons />}>\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"title\" />\r\n            <ImageField source=\"img\"/>\r\n            <TextField source=\"priceSmall\" />\r\n            <TextField source=\"priceBig\" />\r\n            <TextField source=\"stars\" />\r\n            <TextField source=\"new\" />\r\n            <MyActiveField source=\"active\" />\r\n            <EditButton />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const ProductEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"img\" />\r\n            <TextInput source=\"img2\" />\r\n            <TextInput source=\"img3\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"priceSmall\" />\r\n            <TextInput source=\"priceBig\" />\r\n            <TextInput source=\"alt\" />\r\n            <TextInput source=\"description\" />\r\n            <TextInput source=\"stars\" />\r\n            <BooleanInput label=\"milk\" source=\"milk\" />\r\n            <BooleanInput label=\"parve\" source=\"parve\" />\r\n            <BooleanInput label=\"fruit\" source=\"fruit\" />\r\n            <BooleanInput label=\"shugerFree\" source=\"shugerFree\" />\r\n            <BooleanInput label=\"glutenFree\" source=\"glutenFree\" />\r\n            <BooleanInput label=\"new\" source=\"new\" />\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n            \r\n            {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput> */}\r\n                \r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\nexport const ProductCreate = props => (\r\n        <Create {...props}>\r\n            <SimpleForm>\r\n            <TextInput source=\"img\" />\r\n            <TextInput source=\"img2\" />\r\n            <TextInput source=\"img3\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"priceSmall\" />\r\n            <TextInput source=\"priceBig\" />\r\n            <TextInput source=\"alt\" />\r\n            <TextInput source=\"description\" />\r\n            <TextInput source=\"stars\" />\r\n            <BooleanInput label=\"milk\" source=\"milk\" />\r\n            <BooleanInput label=\"parve\" source=\"parve\" />\r\n            <BooleanInput label=\"fruit\" source=\"fruit\" />\r\n            <BooleanInput label=\"shugerFree\" source=\"shugerFree\" />\r\n            <BooleanInput label=\"glutenFree\" source=\"glutenFree\" />\r\n            <BooleanInput label=\"new\" source=\"new\" />\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n                {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                    <SelectInput optionText=\"name\" />\r\n                </ReferenceInput> */}\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Coupons.js",["218","219"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,Create,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput,Filter,BooleanInput,RefreshButton,\r\n    ExportButton,CreateButton } from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\n\r\n\r\nconst UserActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton />\r\n        <ExportButton />\r\n        <CreateButton />\r\n    </div>\r\n);\r\n\r\nexport const CouponList = props => (\r\n    <List {...props} filters={<UserFilter/>} >\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"serialNumber\" />\r\n            <TextField source=\"discountPercentage\" />\r\n            <MyActiveField source=\"used\" />\r\n            <MyActiveField source=\"active\" />\r\n            <EditButton />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const CouponEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"serialNumber\" />\r\n            <TextInput source=\"discountPercentage\" />\r\n            <BooleanInput label=\"used\" source=\"used\" />\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n            \r\n            {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput> */}\r\n                \r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\nexport const CouponCreate = props => (\r\n        <Create {...props}>\r\n            <SimpleForm>\r\n                <TextInput disabled source=\"id\" />\r\n                <TextInput source=\"serialNumber\" />\r\n                <TextInput source=\"discountPercentage\" />\r\n                <BooleanInput label=\"used\" source=\"used\" />\r\n                <BooleanInput label=\"active\" source=\"active\" />\r\n                \r\n                {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                    <SelectInput optionText=\"name\" />\r\n                </ReferenceInput> */}\r\n                    \r\n                \r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Orders.js",["220","221"],"\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,Create,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput,Filter,BooleanInput,RefreshButton,\r\n    ExportButton,CreateButton,TabbedForm,FormTab,ArrayField,ImageField} from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst ProductActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton />\r\n        <ExportButton />\r\n        <CreateButton />\r\n    </div>\r\n);\r\n\r\n\r\nexport const OrderList = props => (\r\n    <List {...props} filters={<UserFilter/>}>\r\n        <Datagrid >\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"userOrder.fname\" label=\"first name\"/>\r\n            <TextField source=\"userOrder.lname\" label=\"last name\"/>\r\n            <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n            <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n            <TextField source=\"userOrder.city\" label=\"city\"/>\r\n            <TextField source=\"date.date\" label=\"date\"/>\r\n            <TextField source=\"date.time\" label=\"time\"/>\r\n            <TextField source=\"payment\" label=\"payment\"/>\r\n            <MyActiveField source=\"doneAndSend\" />\r\n            <EditButton />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\nconst useStyles = makeStyles({\r\n    row: {\r\n        fontSize:\"25px\",\r\n        fontWeight:\"bold\",\r\n    },\r\n});\r\n\r\nexport const OrderEdit = props => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Edit {...props}>\r\n            <TabbedForm>\r\n\r\n                <FormTab label=\"cart\">\r\n                    <ArrayField source=\"cart\">\r\n                        {/* <Datagrid classes={{ expandIconCell: classes.row ,headerCell:classes.row}}> */}\r\n                        <Datagrid >\r\n                            <TextField source=\"id\" label=\"id product\"/>\r\n                            <TextField source=\"title\" />\r\n                            <ImageField source=\"img\" label=\"image\"/>\r\n                            <TextField source=\"count\" />\r\n                            <TextField source=\"price\" />\r\n                            <TextField source=\"size\" />\r\n                        </Datagrid>\r\n                    </ArrayField>\r\n                </FormTab>\r\n\r\n                <FormTab label=\"user order\">\r\n\r\n                    <TextField source=\"userOrder.fname\" label=\"first name\"/>\r\n                    <TextField source=\"userOrder.lname\" label=\"last name\"/>\r\n                    <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n                    <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n                    <TextField source=\"userOrder.city\" label=\"city\"/>\r\n                    <TextField source=\"userOrder.address\" label=\"street\"/>\r\n                    <TextField source=\"userOrder.houseType\" label=\"houseType\"/>\r\n                    <TextField source=\"userOrder.zip\" label=\"zip\"/>\r\n                    \r\n                </FormTab>\r\n                <FormTab label=\"order details\">\r\n\r\n                    <TextField source=\"date.date\" label=\"date\"/>\r\n                    <TextField source=\"date.time\" label=\"time\"/>\r\n                    <TextField source=\"payment\" />\r\n                    <BooleanInput label=\"doneAndSend\" source=\"doneAndSend\" />\r\n\r\n                </FormTab>\r\n\r\n            </TabbedForm>\r\n        </Edit>\r\n    );\r\n} \r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\nexport const OrderCreate = props => (\r\n        <Create {...props}>\r\n            <SimpleForm>\r\n            <TextInput source=\"img\" />\r\n            <TextInput source=\"img2\" />\r\n            <TextInput source=\"img3\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"priceSmall\" />\r\n            <TextInput source=\"priceBig\" />\r\n            <TextInput source=\"alt\" />\r\n            <TextInput source=\"description\" />\r\n            <TextInput source=\"stars\" />\r\n            <BooleanInput label=\"milk\" source=\"milk\" />\r\n            <BooleanInput label=\"parve\" source=\"parve\" />\r\n            <BooleanInput label=\"fruit\" source=\"fruit\" />\r\n            <BooleanInput label=\"shugerFree\" source=\"shugerFree\" />\r\n            <BooleanInput label=\"glutenFree\" source=\"glutenFree\" />\r\n            <BooleanInput label=\"new\" source=\"new\" />\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n                {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                    <SelectInput optionText=\"name\" />\r\n                </ReferenceInput> */}\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Recipes.js",["222","223"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,Create,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput,Filter,BooleanInput,RefreshButton,\r\n    ExportButton,CreateButton,ImageField,DateInput,DateField,ArrayInput,SimpleFormIterator } from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\n\r\n\r\nconst UserActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton />\r\n        <ExportButton />\r\n        <CreateButton />\r\n    </div>\r\n);\r\n\r\nexport const RecipeList = props => (\r\n    <List {...props} filters={<UserFilter/>} >\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"title\" />\r\n            <ImageField source=\"img\"/>\r\n            <DateField source=\"date\" />\r\n            <TextField source=\"description\" />\r\n            <MyActiveField source=\"active\" />\r\n            <EditButton />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const RecipeEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"img\" />\r\n            <TextInput source=\"alt\" />\r\n            <DateInput source=\"date\" />\r\n            <TextInput source=\"description\" />\r\n            <ArrayInput source=\"ingredients\">\r\n                <SimpleFormIterator>\r\n                    <TextInput/>\r\n                </SimpleFormIterator>\r\n            </ArrayInput>\r\n            <TextInput source=\"preparation\"/>\r\n            <BooleanInput label=\"active\" source=\"active\" />\r\n            \r\n            {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput> */}\r\n                \r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\nexport const RecipeCreate = props => (\r\n        <Create {...props}>\r\n            <SimpleForm>\r\n                <TextInput disabled source=\"id\" />\r\n                <TextInput source=\"title\" />\r\n                <TextInput source=\"img\" />\r\n                <TextInput source=\"alt\" />\r\n                <DateInput source=\"date\" />\r\n                <TextInput source=\"description\" />\r\n                <ArrayInput source=\"ingredients\">\r\n                    <SimpleFormIterator>\r\n                        <TextInput/>\r\n                    </SimpleFormIterator>\r\n                </ArrayInput>\r\n                <TextInput source=\"preparation\"/>\r\n                <BooleanInput label=\"active\" source=\"active\" />\r\n                \r\n                {/* <ReferenceInput label=\"role\" source=\"role\" reference=\"users\">\r\n                    <SelectInput optionText=\"name\" />\r\n                </ReferenceInput> */}\r\n                \r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\BlogStorage.js",["224","225","226","227","228","229","230","231"],"\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,SimpleForm,\r\n    ReferenceInput,SelectInput,TextInput,Filter,BooleanInput,RefreshButton,\r\n    ExportButton,CreateButton,ImageField,DateField,ArrayInput,SimpleFormIterator } from 'react-admin';\r\nimport MyActiveField from './MyActiveField';\r\n\r\n\r\nconst UserActionsButtons = props => (\r\n    <div>\r\n        <RefreshButton />\r\n        <ExportButton />\r\n        <CreateButton />\r\n    </div>\r\n);\r\n\r\nexport const BlogStorageList = props => (\r\n    <List {...props} filters={<UserFilter/>} >\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"titleBlog\" />\r\n            <TextField source=\"fname\" />\r\n            <TextField source=\"lname\" />\r\n            <TextField source=\"textMassege\" />\r\n            <EmailField source=\"mail\" />\r\n            <TextField source=\"date\" />\r\n            <TextField source=\"time\" />\r\n            {/* <ActivationButton source=\"active\"/> */}\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserActivation = props => (\r\n    // <Edit {...props}>\r\n        console.log(props)\r\n    // </Edit>\r\n);\r\n\r\n    const UserFilter = (props) => (\r\n        <Filter {...props}>\r\n            <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </Filter>\r\n    );","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\Dashboard.js",["232"],"\r\n\r\nimport * as React from \"react\";\r\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\r\n\r\nexport default () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>ברוך הבא לממשק הניהול.\r\n        </CardContent>\r\n    </Card>\r\n);","C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\MyActiveField.js",[],"C:\\Users\\razbo\\Desktop\\אקספרים\\פרוייקט גמר\\frontend-mongo\\final-proj-ver2\\src\\components\\admin\\ActivationButton.js",["233"],"\r\n\r\nimport * as React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UserActivation} from './Users'\r\n\r\nconst useStyles = makeStyles({\r\n    buttonStyle: {\r\n        color: 'white',\r\n        background: 'red',\r\n    },\r\n    \r\n});\r\n\r\nconst ActivationButton = ({ record = {}, source }) =>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <button className={classes.buttonStyle} onClick={()=>(record[source])?record[source]=false:record[source]=true}>active / ban</button>\r\n     );\r\n    }\r\n\r\nexport default ActivationButton;",{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":53,"column":28,"nodeType":"240","messageId":"241","endLine":53,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":54,"column":58,"nodeType":"244","messageId":"245","endLine":54,"endColumn":85},{"ruleId":"246","severity":1,"message":"247","line":58,"column":38,"nodeType":"248","messageId":"249","endLine":58,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":97,"column":60,"nodeType":"248","messageId":"249","endLine":97,"endColumn":62},{"ruleId":"238","severity":1,"message":"239","line":170,"column":30,"nodeType":"240","messageId":"241","endLine":170,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":171,"column":60,"nodeType":"244","messageId":"245","endLine":171,"endColumn":87},{"ruleId":"250","severity":1,"message":"251","line":223,"column":29,"nodeType":"252","endLine":223,"endColumn":83},{"ruleId":"238","severity":1,"message":"253","line":168,"column":13,"nodeType":"240","messageId":"241","endLine":168,"endColumn":18},{"ruleId":"238","severity":1,"message":"254","line":207,"column":16,"nodeType":"240","messageId":"241","endLine":207,"endColumn":25},{"ruleId":"238","severity":1,"message":"255","line":231,"column":13,"nodeType":"240","messageId":"241","endLine":231,"endColumn":16},{"ruleId":"238","severity":1,"message":"256","line":276,"column":20,"nodeType":"240","messageId":"241","endLine":276,"endColumn":25},{"ruleId":"238","severity":1,"message":"254","line":289,"column":20,"nodeType":"240","messageId":"241","endLine":289,"endColumn":29},{"ruleId":"238","severity":1,"message":"257","line":292,"column":20,"nodeType":"240","messageId":"241","endLine":292,"endColumn":25},{"ruleId":"238","severity":1,"message":"258","line":294,"column":20,"nodeType":"240","messageId":"241","endLine":294,"endColumn":30},{"ruleId":"238","severity":1,"message":"259","line":322,"column":14,"nodeType":"240","messageId":"241","endLine":322,"endColumn":25},{"ruleId":"238","severity":1,"message":"254","line":333,"column":14,"nodeType":"240","messageId":"241","endLine":333,"endColumn":23},{"ruleId":"238","severity":1,"message":"257","line":336,"column":14,"nodeType":"240","messageId":"241","endLine":336,"endColumn":19},{"ruleId":"238","severity":1,"message":"258","line":338,"column":14,"nodeType":"240","messageId":"241","endLine":338,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":366,"column":94,"nodeType":"262","messageId":"263","endLine":366,"endColumn":95},{"ruleId":"238","severity":1,"message":"239","line":93,"column":28,"nodeType":"240","messageId":"241","endLine":93,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":94,"column":58,"nodeType":"244","messageId":"245","endLine":94,"endColumn":85},{"ruleId":"246","severity":1,"message":"247","line":247,"column":60,"nodeType":"248","messageId":"249","endLine":247,"endColumn":62},{"ruleId":"246","severity":1,"message":"264","line":288,"column":32,"nodeType":"248","messageId":"249","endLine":288,"endColumn":34},{"ruleId":"246","severity":1,"message":"264","line":288,"column":58,"nodeType":"248","messageId":"249","endLine":288,"endColumn":60},{"ruleId":"238","severity":1,"message":"239","line":399,"column":34,"nodeType":"240","messageId":"241","endLine":399,"endColumn":39},{"ruleId":"242","severity":1,"message":"243","line":400,"column":64,"nodeType":"244","messageId":"245","endLine":400,"endColumn":91},{"ruleId":"265","severity":1,"message":"266","line":572,"column":167,"nodeType":"252","endLine":572,"endColumn":245},{"ruleId":"265","severity":1,"message":"266","line":573,"column":161,"nodeType":"252","endLine":573,"endColumn":235},{"ruleId":"265","severity":1,"message":"266","line":574,"column":161,"nodeType":"252","endLine":574,"endColumn":239},{"ruleId":"265","severity":1,"message":"266","line":575,"column":163,"nodeType":"252","endLine":575,"endColumn":239},{"ruleId":"238","severity":1,"message":"239","line":36,"column":28,"nodeType":"240","messageId":"241","endLine":36,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":37,"column":58,"nodeType":"244","messageId":"245","endLine":37,"endColumn":85},{"ruleId":"267","severity":1,"message":"268","line":48,"column":29,"nodeType":"244","messageId":"269","endLine":48,"endColumn":31},{"ruleId":"238","severity":1,"message":"270","line":3,"column":9,"nodeType":"240","messageId":"241","endLine":3,"endColumn":22},{"ruleId":"246","severity":1,"message":"264","line":55,"column":27,"nodeType":"248","messageId":"249","endLine":55,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":137,"column":17,"nodeType":"252","endLine":137,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":39,"column":8,"nodeType":"273","endLine":39,"endColumn":10,"suggestions":"274"},{"ruleId":"238","severity":1,"message":"275","line":4,"column":48,"nodeType":"240","messageId":"241","endLine":4,"endColumn":62},{"ruleId":"238","severity":1,"message":"276","line":5,"column":43,"nodeType":"240","messageId":"241","endLine":5,"endColumn":55},{"ruleId":"238","severity":1,"message":"277","line":5,"column":109,"nodeType":"240","messageId":"241","endLine":5,"endColumn":122},{"ruleId":"238","severity":1,"message":"278","line":6,"column":5,"nodeType":"240","messageId":"241","endLine":6,"endColumn":17},{"ruleId":"238","severity":1,"message":"279","line":6,"column":18,"nodeType":"240","messageId":"241","endLine":6,"endColumn":30},{"ruleId":"238","severity":1,"message":"280","line":6,"column":31,"nodeType":"240","messageId":"241","endLine":6,"endColumn":43},{"ruleId":"238","severity":1,"message":"281","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":24},{"ruleId":"238","severity":1,"message":"282","line":4,"column":37,"nodeType":"240","messageId":"241","endLine":4,"endColumn":47},{"ruleId":"238","severity":1,"message":"282","line":4,"column":37,"nodeType":"240","messageId":"241","endLine":4,"endColumn":47},{"ruleId":"238","severity":1,"message":"283","line":10,"column":7,"nodeType":"240","messageId":"241","endLine":10,"endColumn":25},{"ruleId":"238","severity":1,"message":"284","line":10,"column":7,"nodeType":"240","messageId":"241","endLine":10,"endColumn":28},{"ruleId":"238","severity":1,"message":"285","line":45,"column":11,"nodeType":"240","messageId":"241","endLine":45,"endColumn":18},{"ruleId":"238","severity":1,"message":"282","line":4,"column":37,"nodeType":"240","messageId":"241","endLine":4,"endColumn":47},{"ruleId":"238","severity":1,"message":"283","line":10,"column":7,"nodeType":"240","messageId":"241","endLine":10,"endColumn":25},{"ruleId":"238","severity":1,"message":"286","line":3,"column":48,"nodeType":"240","messageId":"241","endLine":3,"endColumn":58},{"ruleId":"238","severity":1,"message":"287","line":4,"column":49,"nodeType":"240","messageId":"241","endLine":4,"endColumn":61},{"ruleId":"238","severity":1,"message":"288","line":5,"column":31,"nodeType":"240","messageId":"241","endLine":5,"endColumn":41},{"ruleId":"238","severity":1,"message":"289","line":5,"column":42,"nodeType":"240","messageId":"241","endLine":5,"endColumn":51},{"ruleId":"238","severity":1,"message":"290","line":5,"column":52,"nodeType":"240","messageId":"241","endLine":5,"endColumn":62},{"ruleId":"238","severity":1,"message":"291","line":5,"column":63,"nodeType":"240","messageId":"241","endLine":5,"endColumn":81},{"ruleId":"238","severity":1,"message":"292","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":21},{"ruleId":"238","severity":1,"message":"283","line":9,"column":7,"nodeType":"240","messageId":"241","endLine":9,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":6,"column":1,"nodeType":"295","endLine":12,"endColumn":3},{"ruleId":"238","severity":1,"message":"296","line":5,"column":9,"nodeType":"240","messageId":"241","endLine":5,"endColumn":23},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'myData'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'login' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'mod' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'accessToken' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useWindowSize' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart' and 'total'. Either include them or remove the dependency array.","ArrayExpression",["299"],"'ReferenceField' is defined but never used.","'DeleteButton' is defined but never used.","'RefreshButton' is defined but never used.","'ExportButton' is defined but never used.","'CreateButton' is defined but never used.","'FilterButton' is defined but never used.","'ActivationButton' is defined but never used.","'EmailField' is defined but never used.","'UserActionsButtons' is assigned a value but never used.","'ProductActionsButtons' is assigned a value but never used.","'classes' is assigned a value but never used.","'SimpleForm' is defined but never used.","'BooleanInput' is defined but never used.","'ImageField' is defined but never used.","'DateField' is defined but never used.","'ArrayInput' is defined but never used.","'SimpleFormIterator' is defined but never used.","'MyActiveField' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'UserActivation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},"Update the dependencies array to be: [cart, total]",{"range":"302","text":"303"},[1192,1194],"[cart, total]"]