[{"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\index.js":"1","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\App.js":"2","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Cart.js":"3","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartColumns.js":"4","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\EmptyCart.js":"5","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartTotals.js":"6","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartList.js":"7","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\SideMenu.js":"8","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Drawer.js":"9","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\backDrop\\BackDrop.js":"10","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartItem.js":"11","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Toolbar.js":"12","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Menu.js":"13","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartDropdown.js":"14","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Checkout.js":"15","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Succeeded.js":"16","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\PayPal.js":"17","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\headerNav\\Navbar.js":"18","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\ProductList.js":"19","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\productDetails\\Details.js":"20","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\footer\\Footer.js":"21","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Default.js":"22","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\modal\\Modal.js":"23","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\homepage\\Homepage.js":"24","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\about\\About.js":"25","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\blog\\Blog.js":"26","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\contact\\Contact.js":"27","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\forgotPassword\\ForgotPassword.js":"28","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\router\\PrivateRoute.js":"29","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\context.js":"30","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\Product.js":"31","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Title.js":"32","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Button.js":"33","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\map\\Map.js":"34","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\RatingStars.js":"35","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Register.js":"36","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Login.js":"37","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Profile.js":"38","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\AdminApp.js":"39","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Account.js":"40","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Dashboard.js":"41","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CustomForm.js":"42","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\ProductsStore.js":"43","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Order.js":"44","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Spinner.js":"45","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Coupons.js":"46","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CardDashboard.js":"47","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Tickets.js":"48","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\OptionsBar.js":"49"},{"size":708,"mtime":1618230017004,"results":"50","hashOfConfig":"51"},{"size":2542,"mtime":1618227784888,"results":"52","hashOfConfig":"51"},{"size":1309,"mtime":1614326729786,"results":"53","hashOfConfig":"51"},{"size":1421,"mtime":1614326680221,"results":"54","hashOfConfig":"51"},{"size":361,"mtime":1612784175820,"results":"55","hashOfConfig":"51"},{"size":2168,"mtime":1617221687352,"results":"56","hashOfConfig":"51"},{"size":369,"mtime":1617194563701,"results":"57","hashOfConfig":"51"},{"size":920,"mtime":1618226437556,"results":"58","hashOfConfig":"51"},{"size":2223,"mtime":1618230104201,"results":"59","hashOfConfig":"51"},{"size":161,"mtime":1612784284915,"results":"60","hashOfConfig":"51"},{"size":1792,"mtime":1617194580926,"results":"61","hashOfConfig":"51"},{"size":253,"mtime":1618226454325,"results":"62","hashOfConfig":"51"},{"size":339,"mtime":1612784175846,"results":"63","hashOfConfig":"51"},{"size":2474,"mtime":1617196499548,"results":"64","hashOfConfig":"51"},{"size":24190,"mtime":1618230442044,"results":"65","hashOfConfig":"51"},{"size":482,"mtime":1614323498045,"results":"66","hashOfConfig":"51"},{"size":2156,"mtime":1618172188013,"results":"67","hashOfConfig":"51"},{"size":6706,"mtime":1618229940036,"results":"68","hashOfConfig":"51"},{"size":7943,"mtime":1617190613816,"results":"69","hashOfConfig":"51"},{"size":3923,"mtime":1618226355892,"results":"70","hashOfConfig":"51"},{"size":1807,"mtime":1614324681509,"results":"71","hashOfConfig":"51"},{"size":857,"mtime":1614324549453,"results":"72","hashOfConfig":"51"},{"size":2512,"mtime":1614326044641,"results":"73","hashOfConfig":"51"},{"size":2603,"mtime":1617477734053,"results":"74","hashOfConfig":"51"},{"size":2974,"mtime":1614331189788,"results":"75","hashOfConfig":"51"},{"size":51317,"mtime":1618207451847,"results":"76","hashOfConfig":"51"},{"size":6634,"mtime":1617974251140,"results":"77","hashOfConfig":"51"},{"size":1768,"mtime":1618171005009,"results":"78","hashOfConfig":"51"},{"size":356,"mtime":1618171994763,"results":"79","hashOfConfig":"51"},{"size":14566,"mtime":1618172431076,"results":"80","hashOfConfig":"51"},{"size":4610,"mtime":1617192334546,"results":"81","hashOfConfig":"51"},{"size":442,"mtime":1614325261931,"results":"82","hashOfConfig":"51"},{"size":620,"mtime":1614324537590,"results":"83","hashOfConfig":"51"},{"size":1726,"mtime":1618226319850,"results":"84","hashOfConfig":"51"},{"size":938,"mtime":1614325251367,"results":"85","hashOfConfig":"51"},{"size":13576,"mtime":1618172556289,"results":"86","hashOfConfig":"51"},{"size":4646,"mtime":1618230611030,"results":"87","hashOfConfig":"51"},{"size":14805,"mtime":1618231048725,"results":"88","hashOfConfig":"51"},{"size":1930,"mtime":1618136789038,"results":"89","hashOfConfig":"51"},{"size":6250,"mtime":1618136841092,"results":"90","hashOfConfig":"51"},{"size":5469,"mtime":1618230904699,"results":"91","hashOfConfig":"51"},{"size":3348,"mtime":1614688518996,"results":"92","hashOfConfig":"51"},{"size":4185,"mtime":1618136719131,"results":"93","hashOfConfig":"51"},{"size":3107,"mtime":1618155545358,"results":"94","hashOfConfig":"51"},{"size":324,"mtime":1614862348369,"results":"95","hashOfConfig":"51"},{"size":1191,"mtime":1618172374994,"results":"96","hashOfConfig":"51"},{"size":1797,"mtime":1617800297749,"results":"97","hashOfConfig":"51"},{"size":2501,"mtime":1618136651082,"results":"98","hashOfConfig":"51"},{"size":1015,"mtime":1618135890062,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1p45bwo",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\index.js",[],["206","207"],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\App.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartColumns.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\EmptyCart.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartTotals.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartList.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\SideMenu.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Drawer.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\backDrop\\BackDrop.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Toolbar.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\sideMenu\\Menu.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\CartDropdown.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Checkout.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\Succeeded.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\Cart\\Checkout\\PayPal.js",["208"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nexport default function Paypal(props) {\r\n  const paypal = useRef();\r\n  useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions, err) => {\r\n          \r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Cool looking table\",\r\n                amount: {\r\n                  currency_code: \"CAD\",\r\n                  value:props.total,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          props.setOrder(order ,props.orderCart ,props.textAreaReq,props.total);\r\n          props.clearCart();\r\n          \r\n          window.location.href = \"/succeeded\";\r\n        },\r\n        onError: (err) => {\r\n          console.log(err);\r\n          alert(\"Error!\", err);\r\n        },\r\n      })\r\n      .render(paypal.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={paypal}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useRef, useEffect } from \"react\";\r\n\r\n// export default function Paypal() {\r\n//   const paypal = useRef();\r\n\r\n//   useEffect(() => {\r\n//     window.paypal\r\n//       .Buttons({\r\n//         createOrder: (data, actions, err) => {\r\n//           return actions.order.create({\r\n//             intent: \"CAPTURE\",\r\n//             purchase_units: [\r\n//               {\r\n//                 description: \"Cool looking table\",\r\n//                 amount: {\r\n//                   currency_code: \"CAD\",\r\n//                   value: 650.0,\r\n//                 },\r\n//               },\r\n//             ],\r\n//           });\r\n//         },\r\n//         onApprove: async (data, actions) => {\r\n//           const order = await actions.order.capture();\r\n//           console.log(order);\r\n//         },\r\n//         onError: (err) => {\r\n//           console.log(err);\r\n//         },\r\n//       })\r\n//       .render(paypal.current);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div ref={paypal}></div>\r\n//     </div>\r\n//   );\r\n// }","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\headerNav\\Navbar.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\ProductList.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\productDetails\\Details.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\footer\\Footer.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Default.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\modal\\Modal.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\homepage\\Homepage.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\about\\About.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\blog\\Blog.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\contact\\Contact.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\forgotPassword\\ForgotPassword.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\router\\PrivateRoute.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\context\\context.js",["209","210","211","212","213"],"import React, { Component } from 'react'\r\nconst ProductContext = React.createContext();\r\nconst axios = require('axios').default;\r\nlet cartSubTotal = 0, cartTax = 0, cartTotal = 0;\r\nlet cart = [];\r\nlet storeProducts =[];\r\nconst detailProduct = {\r\n            id: 1,\r\n            title: \"\",\r\n            img: \"\",\r\n            price: 0,\r\n            company: \"\",\r\n            info:\"\",\r\n            inCart: false,\r\n            count: 0,\r\n            total: 0\r\n          };\r\nclass ProductProvider extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            products:[],\r\n            origProducts:[],\r\n            filtersArray : [{isEnabled:false, type:\"helmet\"}, {isEnabled:false, type:\"bike\"},{isEnabled:false, type:\"cub\"},{isEnabled:false, type:\"scooter\"},{isEnabled:false, type:\"sale\"}],\r\n            detailProduct:detailProduct,\r\n            cart: cart,\r\n            modalOpen:false,\r\n            modalProduct:detailProduct,\r\n            cartSubTotal:cartSubTotal,\r\n            cartTax: cartTax,\r\n            cartTotal:cartTotal,\r\n            boardProducts:[],\r\n            itemsOrig:[],\r\n            raceType:false,\r\n            roadType:false,\r\n            mountainType:false,\r\n            sortValue:'HL',\r\n            pageNum:0,\r\n            first:0,\r\n            rows:10,\r\n            posts: [[{postsAndCommentsArr:\"\", like:0,}],[{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}],\r\n                    [{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}],[{postsAndCommentsArr:\"\",like:0}]],\r\n            orders: []        \r\n            \r\n            };\r\n\r\n       \r\n      }\r\n\r\n      areAnyFilterEnable = (filterArr) =>{\r\n        let found= false;\r\n        filterArr.map((filterItem)=> {\r\n            if (filterItem.isEnabled){\r\n                found= true;\r\n            }\r\n       })\r\n       return found;\r\n      }\r\n\r\n      shouldShow =(item, filterArr) =>{\r\n          let found = false;\r\n        if (!this.areAnyFilterEnable(filterArr)) {\r\n            return true;\r\n        }\r\n\r\n        filterArr.map((filterItem)=> {\r\n            if(filterItem.isEnabled&&filterItem.type === 'sale' && item.sale)\r\n                found = true;\r\n             if (filterItem.isEnabled&& filterItem.type === item.type ){\r\n                found = true;\r\n             }\r\n        })\r\n\r\n        return found;\r\n      }\r\n\r\n     setOrder = (order, orderCart,specialReq,total) =>{\r\n         let tempOrderArr = [...this.state.orders];\r\n         tempOrderArr.push(order);\r\n         this.setState({\r\n             orders:tempOrderArr\r\n         })\r\n        console.log(total)\r\n         axios.post(\"/api/order\",{order:order,specialReq:specialReq,orderCart:orderCart,cartTotal:total,userId:JSON.parse(localStorage.getItem(\"usernameID\"))}) \r\n         .then(\r\n             response => {\r\n                 console.log(response.statusText)\r\n             }\r\n         ).catch(\r\n             err => console.log(err)\r\n         )\r\n     }\r\n\r\n      setFilter = (filterName) => {\r\n        let arr = [...this.state.filtersArray];\r\n        \r\n        arr.forEach(item => {\r\n            if(item.type === filterName || item.type===filterName) {\r\n                item.isEnabled = !item.isEnabled;\r\n            }\r\n        });\r\n           this.setState(\r\n               {\r\n                   filtersArray:arr, \r\n                   products:this.state.origProducts.filter((item)=>{\r\n                        return this.shouldShow(item, arr);\r\n\r\n                   }),\r\n\r\n               }\r\n           )\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.dbLoad();\r\n        this.updatePrice();\r\n        this.setProducts();\r\n    }\r\n    dbLoad = () =>{\r\n        const fetchData = async () => {\r\n            const response = await axios.get(\"/api/product\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n            this.setState({\r\n                products: response.data,\r\n                origProducts: response.data\r\n            })\r\n            if(localStorage.cart !==undefined){\r\n                if (localStorage.cart.length !== 2) {\r\n                    storeProducts = [...this.state.origProducts];\r\n                    cart = JSON.parse(localStorage.cart);\r\n                    let total = JSON.parse(localStorage.totals);\r\n                    cartSubTotal = total.cartSubTotal;\r\n                    cartTax = total.cartTax;\r\n                    cartTotal = total.cartTotal;\r\n                    this.setState({cart , cartSubTotal,cartTax,cartTotal});\r\n                    for(let i=0;i<storeProducts.length;i++){\r\n                         for(let j=0;j<cart.length;j++){\r\n                            if(storeProducts[i]._id===cart[j]._id){\r\n                                storeProducts[i].inCart = cart[j].inCart;    \r\n                            }\r\n                         }\r\n                     }\r\n                     this.setState({products:storeProducts,origProducts:storeProducts})\r\n               }\r\n            } \r\n        }\r\n        fetchData()\r\n\r\n    }\r\n    setProducts = () => {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item => {\r\n            const singleItem ={...item};\r\n            tempProducts = [...tempProducts, singleItem];\r\n        });\r\n        this.setState(()=>{\r\n            return {products: tempProducts};\r\n        });\r\n    };\r\n\r\n    getItem = (id) =>{\r\n    const product = this.state.products.find(item => item._id===id);\r\n        return product;\r\n    };\r\n    handleDetail = (id) =>{\r\n        const product = this.getItem(id);\r\n        this.setState({detailProduct:product})\r\n}\r\n    addToCart = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        localStorage.cart = JSON.stringify([...this.state.cart , product]);\r\n        this.setState({products:tempProducts ,cart:[...this.state.cart , product]},()=> {this.addTotals()});\r\n        axios.post(\"/api/postCart\",{product:product}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    openModal = id =>{\r\n        const product = this.getItem(id);\r\n        this.setState({modalProduct:product, modalOpen:true})\r\n    }\r\n    closeModal = () => {\r\n        this.setState(()=>{\r\n            return {modalOpen:false};\r\n        })\r\n    }\r\n    increment = (id) =>{\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item._id ===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count +1;\r\n        product.total = product.count * product.price;\r\n        localStorage.cart = JSON.stringify([...tempCart]);\r\n        this.setState(()=>{return{cart:[...tempCart]}\r\n        },()=>{this.addTotals()})\r\n        axios.post(\"/api/postCart\",{product:product,action:\"increment\"}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n   decrement = (id) =>{\r\n        let tempCart=[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item._id ===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        let removeFromCart=false\r\n        product.count = product.count - 1;\r\n        if(product.count ===0){\r\n            this.removeItem(id);\r\n            removeFromCart = true\r\n        }\r\n        else{\r\n            product.total = product.count*product.price;\r\n            localStorage.cart = JSON.stringify([...tempCart]);\r\n            this.setState(()=>{return{cart:[...tempCart]}\r\n            },()=>{this.addTotals()})\r\n        }\r\n        axios.post(\"/api/postCart\",{product:product,action:\"decrement\",removeFromCart:removeFromCart}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    removeItem = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        const selectedProduct = tempProducts.find(item=>item._id ===id);\r\n        let tempCart = [...this.state.cart];\r\n        tempCart = tempCart.filter(item=> item._id !== id);\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart=false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n        localStorage.cart = JSON.stringify([...tempCart]);\r\n\r\n        this.setState(()=>{\r\n            return{\r\n                cart:[...tempCart],\r\n                products:[...tempProducts]\r\n            }\r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n        axios.post(\"/api/postCart\",{product:selectedProduct,action:\"removeItem\"}) \r\n        .then(\r\n            response => {\r\n            }\r\n        ).catch(\r\n            err => console.log(err)\r\n        )\r\n    };\r\n    clearCart = () =>{\r\n        localStorage.cart = [JSON.stringify([])];\r\n        localStorage.total = [JSON.stringify([])];\r\n        this.setState({cart:[]})\r\n        let arr = [...this.state.products];\r\n        arr.forEach(item => {\r\n            item.inCart = false;   \r\n        });    \r\n        this.setState({products:arr});\r\n            this.setProducts();\r\n            this.addTotals();\r\n            axios.post(\"/api/clearAllCart\",{userId:JSON.parse(localStorage.getItem(\"usernameID\"))}) \r\n            .then(\r\n                response => {\r\n                }\r\n            ).catch(\r\n                err => console.log(err)\r\n            )\r\n\r\n            const fetchData = async () => {\r\n                const response = await axios.get(\"/api/product\" )//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n                this.setState({\r\n                    products: response.data,\r\n                    origProducts: response.data\r\n                })\r\n            }\r\n            fetchData()\r\n        };\r\n        \r\n    \r\n    addTotals =() =>{\r\n        let subTotal =0;\r\n        this.state.cart.map(item =>{return(subTotal +=item.total*1)})\r\n        const tempTax = subTotal *0.17;\r\n        const tax = parseFloat(tempTax.toFixed(2))\r\n        const total = parseFloat(subTotal*1 +tax.toFixed(2)*1).toFixed(2);\r\n\r\n        localStorage.totals = JSON.stringify({\r\n            cartSubTotal: subTotal,\r\n            cartTax: tax,\r\n            cartTotal: total\r\n        });\r\n\r\n        this.setState(()=>{\r\n            return{\r\n                cartSubTotal: subTotal,\r\n                cartTax: tax,\r\n                cartTotal: total\r\n            }\r\n        })\r\n    };\r\n\r\n    getProducts = (search)=> {\r\n        return this.state.products.filter((item)=>{\r\n            return item.title.toLowerCase().indexOf(search.toLowerCase())!== -1;\r\n        });\r\n       \r\n        \r\n    }\r\n    getHomepageProducts = ()=> {\r\n        this.state.products = [...this.state.origProducts];\r\n        return this.state.products.filter((item)=>{\r\n            return item.sale;\r\n        });\r\n    }\r\n    \r\n    \r\n   setPriceFilter = (rangePrice) => { //does not work (slider)\r\n\r\n        this.state.products = [...this.state.origProducts];\r\n        return this.state.products.filter((item)=>{\r\n            if(rangePrice[0]<item.price && rangePrice[1]>item.price) {\r\n                        return item;\r\n                    }\r\n        });\r\n      \r\n    }\r\n    priceHighToLow = (highOrLow) =>{\r\n        let newArr = this.state.products;\r\n\r\n        newArr  = newArr.sort((a,b) => {\r\n\r\n            let priceA = a.price;\r\n            let priceB = b.price;\r\n            if(highOrLow ==='high')\r\n                return (priceA < priceB) ? 1 : ((priceB < priceA) ? -1 : 0)\r\n            else{\r\n                return (priceA > priceB) ? 1 : ((priceB > priceA) ? -1 : 0)\r\n\r\n            }\r\n\r\n        });\r\n\r\n        this.setState({products: newArr});\r\n\r\n      }\r\n\r\n\r\n      saleSort = () =>{\r\n        let newArr = [...this.state.products];\r\n\r\n        newArr = this.state.products.filter((item)=>{\r\n            return item.sale;\r\n        })\r\n        this.setState({products: newArr});\r\n\r\n      }\r\n\r\n      ratingSort = () =>{\r\n        let newArr = [...this.state.products];\r\n       \r\n        newArr  = newArr.sort((a,b) => {\r\n\r\n            let ratingA = a.rating;\r\n            let ratingB = b.rating;\r\n                return (ratingA < ratingB) ? 1 : ((ratingB < ratingA) ? -1 : 0)\r\n                \r\n      });\r\n        this.setState({products: newArr});\r\n    }\r\n\r\n\r\n    updatePrice =  () => {\r\n        let newArr = [...this.state.products];\r\n        for(let i=0;i<newArr.length;i++){\r\n            if(newArr[i].sale)\r\n                newArr[i].price = newArr[i].price- (newArr[i].price*0.2).toFixed(2);\r\n        }\r\n        this.setState({products:newArr})\r\n    }\r\n    updatePriceWithCoupon =  (val) => {\r\n        let tempPrice = this.state.cartTotal;\r\n        if(val===\"12345\"){\r\n            tempPrice = tempPrice-tempPrice*0.1;\r\n        }\r\n        this.setState({cartTotal:tempPrice})\r\n    }\r\n    loadComments = () =>{\r\n        return this.state.posts[0].postsAndCommentsArr\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n               ...this.state, \r\n               handleDetail:this.handleDetail,\r\n               addToCart:this.addToCart,\r\n               openModal:this.openModal,\r\n               closeModal:this.closeModal,\r\n               increment: this.increment,\r\n               decrement:this.decrement,\r\n               removeItem:this.removeItem,\r\n               clearCart:this.clearCart,\r\n               setFilter:this.setFilter,\r\n               getProducts: this.getProducts,\r\n               getHomepageProducts:this.getHomepageProducts,\r\n               setPriceFilter:this.setPriceFilter,\r\n               priceHighToLow:this.priceHighToLow,\r\n               saleSort:this.saleSort,\r\n               ratingSort:this.ratingSort,\r\n               updatePrice:this.updatePrice,\r\n               updatePriceWithCoupon:this.updatePriceWithCoupon,\r\n               loadComments:this.loadComments,\r\n               dbLoad:this.dbLoad,\r\n               setOrder: this.setOrder\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\n\r\nexport {ProductProvider,ProductConsumer};","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\products\\Product.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Title.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Button.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\map\\Map.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\RatingStars.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Register.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Login.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\account\\Profile.js",["214","215"],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\AdminApp.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Account.js",["216","217"],"import  React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField, DeleteWithConfirmButton,EditButton,Edit,Create,SimpleForm,SelectInput,TextInput,NumberField,NumberInput,PasswordInput,required,minLength,\r\n    maxLength,regex,email,BooleanField,BooleanInput,SimpleShowLayout,Show,ArrayField,ImageField,ImageInput} from 'react-admin';\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\nimport axios from 'axios'\r\n\r\nconst validateFirstName = [required(), minLength(2), maxLength(15)];\r\nconst validateEmail =[required(), email()];\r\nconst validateZipCode = [required(),regex(/^\\d{6}$/, 'Must be a valid Zip Code - 6 numbers')];\r\nconst validatePhoneNumber = [required(),regex(/^(([+]{0,1}\\d{2})|\\d?)[\\s-]?[0-9]{2}[\\s-]?[0-9]{3}[\\s-]?[0-9]{4}$/, \r\n'Must be a valid phone number. Tested for:+94 77 531 2412, +94775312412, 077 531 2412, 0775312412 ')];\r\nconst validateAddress = [required(),regex(/^[a-zA-Z]+\\s[a-zA-Z0-9]+/, 'Must be a valid address')];\r\nconst validateCity = [required(),regex(/^[a-zA-Z]*$/, 'Must be a valid city')];\r\nconst validateCountry = [required(),regex(/^[a-zA-Z]*$/, 'Must be a valid country')];\r\nconst validatePassword = [required(),regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/, \r\n'Must be a valid password:Min 1 uppercase letter. Min 1 lowercase letter. Min 1 special character.Min 1 number.Min 8 characters. Max 30 characters.')];\r\n\r\nconst CartUserDetails = props => (\r\n    <Show {...props} title=\" cart lists\" >\r\n        <SimpleShowLayout>\r\n        <TextField source=\"firstName\" />\r\n            <ArrayField source=\"cart.items\">\r\n                 <Datagrid>\r\n                <TextField source=\"count\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\nexport const UsersList = props => {\r\n   return( \r\n   <List filters={<MyFilter />} {...props} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>}>\r\n\r\n                <Datagrid\r\n                      expand={<CartUserDetails />}>\r\n                    <TextField source=\"id\" />\r\n                    <ImageField source=\"yourImage\"/>\r\n                     {/* src={`http://localhost:5000/uploads/${user.yourImage}`} */}\r\n                    <TextField source=\"firstName\" />\r\n                    <TextField source=\"lastName\" />\r\n                    <EmailField source=\"email\"/>\r\n                    <NumberField source=\"phone\" />\r\n                    <TextField source=\"state\" />\r\n                    <TextField source=\"city\" />\r\n                    <TextField source=\"address\" />\r\n                    <NumberField source=\"zip\" />\r\n                    <TextField source=\"role\" />\r\n                    <BooleanField source=\"activity\"/>\r\n                    <EditButton />\r\n                    <DeleteWithConfirmButton/>\r\n                </Datagrid>\r\n            \r\n    </List>\r\n\r\n\r\n\r\n)};\r\n\r\nexport const UsersEdit = props => {\r\n   return( <Edit title=\"Edit User\" {...props} undoable={false}   toolbar={<CustomToolbar />}>\r\n        <SimpleForm >\r\n           <TextInput  disabled source=\"id\" />\r\n           {/* <ImageInput   source=\"yourImage\" onChange={(e)=>{ \r\n                   console.log(\"AGASFASFASFASFA\")\r\n                   const formData = new FormData();\r\n                   let file = document.getElementById(\"yourImage\").files[0]\r\n                   console.log( document.getElementById(\"yourImage\"))\r\n                    //formData.append(\"title\", this.state.title);\r\n                    formData.append(\"file\", file);\r\n                    axios.post(\"/api/uploadfile\", formData, {headers:{'Content-Type': 'multipart/form-data'}})\r\n                //    .then(res => console.log(res.data))\r\n                //    .catch(err => console.error(err));\r\n\r\n            }}>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>   */}\r\n           <TextInput label=\"First Name\" validate={validateFirstName}  source=\"firstName\" />\r\n           <TextInput label=\"Last Name\" validate={validateFirstName}  source=\"lastName\" />\r\n           <TextInput name=\"email\" validate={validateEmail} source=\"email\" />\r\n           <NumberInput   validate={validatePhoneNumber} source=\"phone\" />\r\n           <TextInput validate={validateCountry}   source=\"state\" />\r\n           <TextInput validate={validateCity}   source=\"city\" />\r\n           <TextInput validate={validateAddress}   source=\"address\" />\r\n            <NumberInput label=\"Zip Code\" validate={validateZipCode}  source=\"zip\" />\r\n           <SelectInput defaultValue=\"customer\" source=\"role\" choices={[\r\n                { id: 'Admin', name: 'Admin' },\r\n                { id: 'Customer', name: 'Customer' },\r\n                { id: 'Site Owner', name: 'Site Owner' },\r\n                ]} />\r\n            <BooleanInput source=\"active\"/>\r\n           \r\n        </SimpleForm>\r\n    </Edit>)\r\n};\r\n\r\nexport const UsersCreate = props => {\r\n   return( \r\n   <Create   title=\"Create a User\" {...props}>\r\n        <SimpleForm  >\r\n            <TextInput validate={validateFirstName}  source=\"firstName\"/>\r\n            <TextInput validate={validateFirstName}  source=\"lastName\"/>\r\n            <TextInput name=\"email\"  label=\"Email\" validate={validateEmail} source=\"email\"/>\r\n            <NumberInput  validate={validatePhoneNumber}  source=\"phone\" />\r\n            <PasswordInput  validate={validatePassword} source=\"password\" initiallyVisible />\r\n            <TextInput  validate={validateCountry} source=\"state\" />\r\n            <TextInput  validate={validateCity} source=\"city\" />\r\n            <TextInput  validate={validateAddress} source=\"address\" />\r\n            <NumberInput label=\"Zip Code\" validate={validateZipCode}  source=\"zip\" />\r\n            <SelectInput defaultValue=\"customer\" source=\"role\" choices={[\r\n                { id: 'Admin', name: 'Admin' },\r\n                { id: 'Customer', name: 'Customer' },\r\n                { id: 'Site Owner', name: 'Site Owner' },\r\n                ]} />\r\n            <BooleanInput source=\"activity\"/>   \r\n            {/* <ImageInput  source=\"yourImage\" >\r\n                <ImageField source=\"src\" title=\"title\" />\r\n           </ImageInput>  */}\r\n       </SimpleForm>\r\n    </Create>)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Dashboard.js",["218"],"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { Line ,Bar} from 'react-chartjs-2';\r\nimport { Card } from '@material-ui/core';\r\nimport DollarIcon from '@material-ui/icons/AttachMoney';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport CardDashboard from './CardDashboard'\r\nimport axios from 'axios'\r\nconst Dashboard = () => {\r\n  const [ordersIncome, setOrder] = useState(\"\")\r\n  const [AmontsOfItemsInCart, setAmontsOfItemsInCart] = useState(\"\")\r\n  const [amountOfUsers, setAmountOfUsers] = useState(\"\")\r\n  const [numberOfHelmets, setnumberOfHelmets] = useState(\"\")\r\n  const [numberOfScooters, setAllScooters] = useState(\"\")\r\n  const [numberOfCubs, setAllCubs] = useState(\"\")\r\n  const [numberOfBikes, setAllBikes] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let allOrders = await axios.get(\"/api/order\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      allOrders = allOrders.data\r\n      let sum = 0;\r\n      for(let i=0;i<allOrders.length;i++){\r\n        sum = allOrders[i].payment + sum\r\n      }\r\n      console.log(typeof sum)\r\n      setOrder(Number.parseFloat(sum).toFixed(2));\r\n      let allUsers = await axios.get(\"/api/user\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      setAmountOfUsers(allUsers.data.length)\r\n      let allCarts = allUsers.data.map((user)=>{\r\n        return (user.cart)\r\n      })\r\n      let AmountOfProductsInCarts=0;\r\n      for(let i=0;i<allCarts.length;i++){\r\n        AmountOfProductsInCarts = AmountOfProductsInCarts+allCarts[i].items.length\r\n      }\r\n      setAmontsOfItemsInCart(AmountOfProductsInCarts)\r\n      let products = await axios.get(\"/api/product\" );//, { 'headers': { 'Authorization':'Bearer '+ localStorage.getItem('token') } });\r\n      products = products.data\r\n      let helmets = 0 , scooters=0,cubs=0,bikes=0;\r\n\r\n      for(let i =0;i<products.length;i++){\r\n        if(products[i].type==='helmet'){\r\n          helmets++;\r\n        }\r\n        else if(products[i].type==='cub'){\r\n          cubs++;\r\n        }\r\n        else if(products[i].type==='scooter'){\r\n          scooters++;\r\n        }\r\n        else if(products[i].type==='bike'){\r\n          bikes++;\r\n        }\r\n      }\r\n      setnumberOfHelmets(helmets)\r\n      setAllScooters(scooters)\r\n      setAllCubs(cubs)\r\n      setAllBikes(bikes)\r\n  }\r\n  fetchData()\r\n  })\r\n  const rand = () => Math.round(Math.random() * 10)\r\n  // const colors = [\"white\", \"black\", \"green\", 'yellow', \"blue\", \"pink\", \"purple\" , \"brown\", \"Aqua\",\"orange\"]\r\n  // const backgourdColors = [\"black\",\"white\", \"blue\" , \"green\", 'yellow', \"purple\", \"Aqua\",\"orange\"]\r\n    const data = {\r\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"],\r\n        datasets: [\r\n          {\r\n            label: \"Purchases for 2021\",\r\n            data: [rand(), rand(), rand(), rand()],\r\n            data: [10, 3, 7, 4],\r\n            fill: true,\r\n            // backgroundColor: backgourdColors[rand()],//\"rgba(64,220,36,0)\",\r\n            // borderColor: colors[rand()]\r\n             borderColor: \"gold\"\r\n          },\r\n          {\r\n            label: \"Purchases for 2020\",\r\n            // data: [rand(), rand(), rand(), rand()],\r\n            data: [4, 20, 6, 16],\r\n            fill: true,\r\n           // backgroundColor: \"rgba(220,64,36,0)\",\r\n           borderColor: \"silver\"\r\n          }\r\n\r\n        ]\r\n      };\r\n      const dataProducts = {\r\n        labels: [\"Helmats\", \"Scooters\", \"Bikes\", \"Cubs\"],\r\n        datasets: [\r\n          {\r\n            label: \"Products In Store\",\r\n            data: [numberOfHelmets, numberOfScooters,numberOfBikes, numberOfCubs],\r\n            fill: true,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n\r\n        ]\r\n      };\r\n      return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row justify-content-center\">\r\n                <CardDashboard icon={DollarIcon} title=\"All orders income in dollars\" subtitle={ordersIncome}  />\r\n                <CardDashboard icon={ShoppingCartIcon} title=\"Amount of products in carts\" subtitle={AmontsOfItemsInCart}/>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <CardDashboard icon={PeopleIcon} title=\"Number of users\" subtitle={amountOfUsers} />\r\n            </div>\r\n            <div className=\"my-2 row justify-content-center\">\r\n                <Card className=\"col-6\">\r\n                    <Line data={data} options={{\r\n                        title: { text:\"Orders\" ,display: true },\r\n                        scales: { yAxes: [ {ticks:{beginAtZero:true}} ] }\r\n                    }}/>    \r\n                </Card>\r\n\r\n                <Card className=\"col-6\">\r\n                    <Bar data={dataProducts} options={{\r\n                        title: { text:\"All products by types\" ,display: true },\r\n                        \r\n                    }}/>    \r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CustomForm.js",[],["219","220"],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\ProductsStore.js",["221","222","223"],"import * as React from \"react\";\r\n\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\n\r\nimport { List, Datagrid, TextField,EditButton, Edit, Create,SimpleForm,SelectInput,TextInput, NumberField,NumberInput,required, minLength,\r\n        maxLength,regex,DeleteWithConfirmButton,BooleanField,BooleanInput,ImageInput,ImageField } from 'react-admin';\r\nconst validatePrice = [required(),regex(/^\\d{0,8}(\\.\\d{1,4})?$/, \r\n'Must be a valid price number (contain only number).')];\r\nconst validateRating = [required(),regex(/[0-5]/, 'Must be a valid rating integer number between 0-5'),minLength(0), maxLength(5)];\r\nconst validateCompany =[required()]\r\nconst validateTitle =[required()]\r\nconst validateType =[required()]\r\nconst validateImg=[required()]\r\nconst validateInfo=[required()]\r\n\r\n\r\n\r\nexport const ProductsList = props => (\r\n    \r\n    <List filters={<MyFilter/>} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>} {...props}>\r\n                <Datagrid>\r\n                    <TextField source=\"id\" />\r\n                    <TextField source=\"title\"/>\r\n                    <ImageField source=\"img\"/>\r\n                    <NumberField source=\"price\" />\r\n                    <TextField source=\"company\" />\r\n                    <TextField source=\"type\"/>\r\n                    <TextField source=\"info\"/>\r\n                    <NumberField source=\"rating\"/>\r\n                    <BooleanField source=\"sale\"/>\r\n                    <TextField source=\"userId\"/>\r\n                    <EditButton />\r\n                    <DeleteWithConfirmButton/>    \r\n                </Datagrid>\r\n    </List>\r\n);\r\nexport const ProductsEdit = props => {\r\n    // const notify = useNotify();\r\n    // const refresh = useRefresh();\r\n    // const redirect = useRedirect();\r\n\r\n    // const onSuccess = () => {\r\n    //     notify(`Changes saved`)\r\n    //     redirect('/storeProducts');\r\n    //     refresh();\r\n    // };\r\n    var userId = localStorage.getItem(\"usernameID\");\r\n\r\n   return( <Edit  title=\"Edit Product\" {...props} undoable={false} toolbar={<CustomToolbar />}>\r\n        <SimpleForm >\r\n           <TextInput  disabled source=\"id\" />\r\n           <TextInput validate={validateCompany}  source=\"company\" />\r\n           <SelectInput validate={validateType}  source=\"type\" choices={[\r\n                { id: 'helmet', name: 'helmet' },\r\n                { id: 'bike', name: 'Bike' },\r\n                { id: 'scooter', name: 'scooter' },\r\n                ]} />\r\n            {/* <ImageInput validate={validateImg} required source=\"img\" >\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>            */}\r\n            <TextInput validate={validateInfo} required source=\"info\" />\r\n           <NumberInput validate={validatePrice} source=\"price\" />\r\n           <NumberInput validate={validateRating} source=\"rating\" />\r\n           <TextInput validate={validateTitle}  required source=\"title\" />\r\n           <BooleanInput defaultValue={false} source=\"sale\"/>\r\n           <TextInput disabled  source=\"userId\" />\r\n\r\n        </SimpleForm>\r\n    </Edit>)\r\n};\r\nexport const ProductsCreate = props => {\r\n    var userID = localStorage.getItem(\"usernameID\");\r\n    userID=JSON.parse(userID)\r\n   return( <Create  title=\"Create a Product\" {...props}>\r\n        <SimpleForm >\r\n        <TextInput validate={validateCompany}  source=\"company\" />\r\n        <TextInput validate={validateTitle}  source=\"title\" />\r\n        <SelectInput validate={validateType} source=\"type\" choices={[\r\n                { id: 'helmet', name: 'helmet' },\r\n                { id: 'bike', name: 'Bike' },\r\n                { id: 'scooter', name: 'scooter' },\r\n                ]} />\r\n        {/* <ImageInput validate={validateImg} required source=\"img\" >\r\n            <ImageField source=\"src\" title=\"title\" />\r\n        </ImageInput> */}\r\n        <TextInput validate={validateInfo} source=\"info\" />\r\n        <NumberInput  validate={validatePrice} source=\"price\" />\r\n        <NumberInput validate={validateRating} source=\"rating\" />\r\n        <BooleanInput defaultValue={false} source=\"sale\"/>\r\n        <TextInput   source= {userID} />\r\n       </SimpleForm>\r\n    </Create>)\r\n};\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Order.js",["224"],"\r\n\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField,EditButton,Edit,ReferenceInput,\r\n    SelectInput,TabbedForm,FormTab,ArrayField,ImageField} from 'react-admin';\r\n\r\nimport {MyFilter, ActionsButtons, BulkActionButtons, CustomToolbar} from './OptionsBar'\r\n\r\n\r\nexport const OrderList = props => (\r\n    <List {...props} filters={<MyFilter/>} actions={<ActionsButtons/>} bulkActionButtons={<BulkActionButtons/>}>\r\n        <Datagrid >\r\n            <TextField source=\"id\" label=\"order id\"/>\r\n            <TextField source=\"userOrder.firstName\" label=\"first name\"/>\r\n            <TextField source=\"userOrder.lastName\" label=\"last name\"/>\r\n            <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n            <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n            <TextField source=\"orderStatus\"/>\r\n            <TextField source=\"date\" label=\"date\"/>\r\n            <TextField source=\"time\" label=\"time\"/>\r\n            <TextField source=\"payment\" label=\"payment\"/> \r\n            <TextField source=\"specialReq\" label=\"specialReq\"/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const OrderEdit = props => {\r\n    return(\r\n        <Edit {...props} toolbar={<CustomToolbar />}>\r\n            <TabbedForm>\r\n\r\n                <FormTab label=\"cart\">\r\n                    <ArrayField source=\"cart\">\r\n                        <Datagrid >\r\n                            <TextField source=\"_id\" label=\"productID\"/>\r\n                            <TextField source=\"title\" label=\"title\"/>\r\n                            <ImageField source=\"img\" label=\"image\"/>\r\n                            <TextField source=\"count\" label=\"count\"/>\r\n                            <TextField source=\"price\" label=\"price\"/>\r\n                        </Datagrid>\r\n                    </ArrayField>\r\n                </FormTab>\r\n\r\n                <FormTab label=\"user order\">\r\n\r\n                    <TextField source=\"userOrder.firstName\" label=\"first name\"/>\r\n                    <TextField source=\"userOrder.lastName\" label=\"last name\"/>\r\n                    <EmailField source=\"userOrder.email\" label=\"email\"/>\r\n                    <TextField source=\"userOrder.phone\" label=\"phone\"/>\r\n                    <TextField source=\"userOrder.city\" label=\"city\"/>\r\n                    <TextField source=\"userOrder.street\" label=\"street\"/>\r\n                    <TextField source=\"userOrder.zip\" label=\"zip\"/>\r\n                    \r\n                </FormTab>\r\n                <FormTab label=\"order details\">\r\n\r\n                    <TextField source=\"date\" label=\"date\"/>\r\n                    <TextField source=\"time\" label=\"time\"/>\r\n                    <TextField source=\"payment\" />\r\n                    <SelectInput  source=\"orderStatus\" choices={[\r\n                        { id: 'Processing', name: 'Processing' },\r\n                        { id: 'Ready', name: 'Ready' },\r\n                        { id: 'Delivered', name: 'Delivered' },\r\n                        ]} />  \r\n                    \r\n                </FormTab>\r\n\r\n            </TabbedForm>\r\n        </Edit>\r\n    );\r\n} \r\n\r\n\r\n\r\n","C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\additionsComp\\Spinner.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Coupons.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\CardDashboard.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\Tickets.js",[],"C:\\Users\\Tal Miterani\\Desktop\\nodejs\\experis\\New\\Final-project-front-end-Copy\\src\\components\\admin\\OptionsBar.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":36,"column":6,"nodeType":"231","endLine":36,"endColumn":8,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":54,"column":35,"nodeType":"235","messageId":"236","endLine":54,"endColumn":37},{"ruleId":"233","severity":1,"message":"234","line":68,"column":35,"nodeType":"235","messageId":"236","endLine":68,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":328,"column":9,"nodeType":"239","endLine":328,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":337,"column":9,"nodeType":"239","endLine":337,"endColumn":19},{"ruleId":"233","severity":1,"message":"240","line":338,"column":49,"nodeType":"235","messageId":"241","endLine":338,"endColumn":51},{"ruleId":"242","severity":1,"message":"243","line":17,"column":11,"nodeType":"244","messageId":"245","endLine":17,"endColumn":17},{"ruleId":"229","severity":1,"message":"246","line":25,"column":15,"nodeType":"247","endLine":25,"endColumn":61},{"ruleId":"242","severity":1,"message":"248","line":3,"column":97,"nodeType":"244","messageId":"245","endLine":3,"endColumn":107},{"ruleId":"242","severity":1,"message":"249","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":73,"column":13,"nodeType":"252","messageId":"253","endLine":73,"endColumn":17},{"ruleId":"225","replacedBy":"254"},{"ruleId":"227","replacedBy":"255"},{"ruleId":"242","severity":1,"message":"248","line":6,"column":75,"nodeType":"244","messageId":"245","endLine":6,"endColumn":85},{"ruleId":"242","severity":1,"message":"256","line":13,"column":7,"nodeType":"244","messageId":"245","endLine":13,"endColumn":18},{"ruleId":"242","severity":1,"message":"257","line":47,"column":9,"nodeType":"244","messageId":"245","endLine":47,"endColumn":15},{"ruleId":"242","severity":1,"message":"258","line":4,"column":64,"nodeType":"244","messageId":"245","endLine":4,"endColumn":78},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["261"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'imgRef' is assigned a value but never used.","Identifier","unusedVar","Assignments to the 'userId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'ImageInput' is defined but never used.","'axios' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected",["259"],["260"],"'validateImg' is assigned a value but never used.","'userId' is assigned a value but never used.","'ReferenceInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},"Update the dependencies array to be: [props]",{"range":"264","text":"265"},[1037,1039],"[props]"]