.body {
    min-height: 100vh;
    vertical-align: middle;
    display: flex;
    font-size: 0.85rem;
    font-weight: bold
}

.title {
    margin-bottom: 5vh
}

.cardd {
    margin: auto;
    max-width: 1200px;
    width: 90%;
    box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 1rem;
    border: transparent
}

@media(max-width:767px) {
    .cardd {
        margin: 3vh auto
    }
}

.cart {
    background-color: #fff;
    padding: 4vh 5vh;
    border-bottom-left-radius: 1rem;
    border-top-left-radius: 1rem
}

@media(max-width:767px) {
    .cart {
        padding: 4vh;
        border-bottom-left-radius: unset;
        border-top-right-radius: 1rem
    }
}

.summary {
    background-color: #ddd;
    border-top-right-radius: 1rem;
    border-bottom-right-radius: 1rem;
    padding: 4vh;
    color: rgb(65, 65, 65)
}

@media(max-width:767px) {
    .summary {
        border-top-right-radius: unset;
        border-bottom-left-radius: 1rem
    }
}

.summary .col-2 {
    padding: 0
}

.summary .col-10 {
    padding: 0
}

/* .row {
    margin: 0
} */

.title b {
    font-size: 1.5rem
}

.main {
    margin: 0;
    padding: 2vh 0;
    width: 100%
}

.col2,
.coll {
    padding: 0 1vh;
    
}

.priceAndX{
    text-align: center;
    /* padding-top: 40px; */
}
/* .a {
    padding: 0 1vh;
    color: black;
} */

.close {
    /* margin-left: auto; */
    font-size: 1rem;
    cursor: pointer;
}

/* .img {
    width: 3.5rem
} */

.back-to-shop {
    margin-top: 3.5rem
}

.h5 {
    margin-top: 4vh
}

.hr {
    margin-top: 1.25rem
}

.form {
    padding: 2vh 0
}

.select {
    border: 1px solid rgba(0, 0, 0, 0.137);
    padding: 1.5vh 1vh;
    margin-bottom: 4vh;
    outline: none;
    width: 100%;
    background-color: rgb(247, 247, 247)
}

input#code {
    border: 1px solid rgba(0, 0, 0, 0.137);
    padding: 1vh;
    margin-bottom: 4vh;
    outline: none;
    width: 100%;
    background-color: rgb(247, 247, 247)
}

input#code:focus::-webkit-input-placeholder {
    color: transparent
}

.butn {
    background-color: #000;
    border-color: #000;
    color: white;
    width: 100%;
    font-size: 0.7rem;
    margin-top: 4vh;
    padding: 1vh;
    border-radius: 0
}

.butn:focus {
    box-shadow: none;
    outline: none;
    box-shadow: none;
    color: white;
    -webkit-box-shadow: none;
    -webkit-user-select: none;
    transition: none
}

.butn:hover {
    color: white
}
/* 
.a {
    color: black
} */

/* .a:hover {
    color: black;
    text-decoration: none;
    cursor:pointer;
} */

#code {
    background-image: linear-gradient(to left, rgba(255, 255, 255, 0.253), rgba(255, 255, 255, 0.185)), url("https://img.icons8.com/small/16/000000/long-arrow-right.png");
    background-repeat: no-repeat;
    background-position-x: 95%;
    background-position-y: center
}


/* increment&decrement */
.incrementDecrement {
    /* width: 10px; */
    /* margin: 0 auto; */
    /* text-align: center; */
    /* padding-top: 25px; */
  }
  
  /* .value-button {
    display: inline-block;
    border: 1px solid #ddd;
    margin: 0px;
    width: 40px;
    height: 20px;
    text-align: center;
    vertical-align: middle;
    padding: 11px 0;
    background: #eee;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  .value-button:hover {
    cursor: pointer;
  } */
  
  /* .incrementDecrement #decrease {
    margin-right: -4px;
    border-radius: 8px 0 0 8px;
  }
  
  .incrementDecrement #increase {
    margin-left: -4px;
    border-radius: 0 8px 8px 0;
  } */
  
  /* .incrementDecrement #input-wrap {
    margin: 0px;
    padding: 0px;
  }
   */
  input.number {
    text-align: center;
    border: none;
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    font-weight: bolder;
    font-size: 2rem;
    margin: 0px;
    width: 50px;
    height: 50px;
  }
  
  /* input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
  } */

  /* { (this.state.arrayOfOccurrences.length !==0)? this.state.arrayOfUniqueObjects.map((el,i)=> {return (<div key={el.title}  className="row m-0 border-top border-bottom">
                            
  <div className="col-2 col2">
      <Link to={"/product/"+ el.title}>
           <img className="img-fluid img shadow" src={el.thumbnail} alt="el.title"/>
      </Link>
  </div>
 
  <div className="col-7 coll">
      <div className=" m-0 text-muted">{el.title}</div>
      <div className=" m-0">
          <ul className="pl-4">
              <li>sku: {el.sku}</li>
              <li>price: ${el.price}</li>
              <li>
                  quantity: {this.state.arrayOfOccurrences[i] <= el.stock ? this.state.arrayOfOccurrences[i] : <span><del>{this.state.arrayOfOccurrences[i]}</del>, &nbsp;{el.stock }</span>     }
              </li>
              { this.state.arrayOfOccurrences[i] > el.stock &&
               <li className="text-danger">We are sorry, the quantity exceed beyond the current stock.<br/>
               The quantity is adjusted.</li>
               }
          </ul>
          
      </div>
  </div>
  <div className="col-1 coll"> 
      <div className="incrementDecrement">
        
        <input ref={this.callRef} type="number" id={el.title} 
        placeholder={this.state.arrayOfOccurrences[i] <= el.stock ? this.state.arrayOfOccurrences[i] : el.stock} 
        min="0" max={el.stock} inputMode="numeric" className="number"
        onChange={this.inputChangedHandler.bind(this)} />
        
      </div>
  </div>
  <div className="col-2 coll priceAndX">
      ${el.price*this.state.arrayOfOccurrences[i]} <span className="close">&#10005;</span>
  </div>
</div>) }): null} */